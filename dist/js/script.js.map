{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@fancyapps/ui/src/Carousel/Carousel.js","webpack:///./node_modules/@fancyapps/ui/src/Carousel/l10n/en.js","webpack:///./node_modules/@fancyapps/ui/src/Carousel/plugins/Dots/Dots.js","webpack:///./node_modules/@fancyapps/ui/src/Carousel/plugins/Navigation/Navigation.js","webpack:///./node_modules/@fancyapps/ui/src/Carousel/plugins/Sync/Sync.js","webpack:///./node_modules/@fancyapps/ui/src/Carousel/plugins/index.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/Fancybox.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/l10n/en.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/plugins/Hash/Hash.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/plugins/Html/Html.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/plugins/Image/Image.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/plugins/ScrollLock/ScrollLock.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/plugins/Thumbs/Thumbs.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/plugins/Toolbar/Toolbar.js","webpack:///./node_modules/@fancyapps/ui/src/Fancybox/plugins/index.js","webpack:///./node_modules/@fancyapps/ui/src/Panzoom/Panzoom.js","webpack:///./node_modules/@fancyapps/ui/src/Panzoom/plugins/index.js","webpack:///./node_modules/@fancyapps/ui/src/shared/Base/Base.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/Fullscreen.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/PointerTracker.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/ResizeObserver.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/Slideshow.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/canUseDOM.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/clearTextSelection.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/extend.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/getDimensions.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/getTextNodeFromPoint.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/isPlainObject.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/isScrollable.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/resolve.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/round.js","webpack:///./node_modules/@fancyapps/ui/src/shared/utils/throttle.js","webpack:///./node_modules/swiper/swiper-bundle.js","webpack:///./src/js/default/phone-mask.js","webpack:///./src/js/default/scroll.js","webpack:///./src/js/default/select.js","webpack:///./src/js/main.js"],"names":["document","addEventListener","phoneInputs","querySelectorAll","getInputNumbersValue","input","value","replace","onPhonePaste","e","target","inputNumbersValue","pasted","clipboardData","window","pastedText","getData","test","onPhoneInput","selectionStart","formattedInputValue","length","data","indexOf","firstSymbols","substring","onPhoneKeyDown","inputValue","keyCode","phoneInput","defaultOptions","stepSize","animationTime","accelerationDelta","accelerationMax","keyboardSupport","arrowScroll","pulseAlgorithm","pulseScale","pulseNormalize","touchpadSupport","fixedBackground","excluded","options","isExcluded","isFrame","direction","x","y","initDone","root","documentElement","activeElement","observer","refreshSize","deltaBuffer","deltaBufferTimer","isMac","navigator","platform","key","left","up","right","down","spacebar","pageup","pagedown","end","home","arrowKeys","initTest","addEvent","keydown","init","body","html","windowHeight","innerHeight","scrollHeight","compatMode","top","self","isOldSafari","offsetHeight","fullPageElem","createElement","style","cssText","appendChild","pendingRefresh","setTimeout","height","config","attributes","childList","characterData","MutationObserver","observe","clearfix","clear","backgroundAttachment","cleanup","disconnect","removeEvent","wheelEvent","wheel","mousedown","que","pending","lastScroll","Date","now","scrollArray","elem","directionCheck","elapsed","factor","Math","min","push","lastX","lastY","start","scrollRoot","getScrollRoot","isWindowScroll","$scrollBehavior","isScrollBehaviorSmooth","scrollBehavior","step","time","scrollX","scrollY","i","item","finished","position","pulse","splice","scrollBy","scrollLeft","scrollTop","requestFrame","frameRate","event","defaultPrevented","ctrlKey","isNodeName","src","shadowRoot","deltaX","wheelDeltaX","deltaY","wheelDeltaY","isDivisible","abs","wheelDelta","deltaMode","overflowing","overflowingAncestor","isChrome","Object","defineProperty","frameElement","parent","isTouchpad","preventDefault","scheduleClearCache","modifier","altKey","metaKey","shiftKey","contains","inputNodeNames","buttonTypes","nodeName","type","isInsideYoutubeVideo","isContentEditable","shift","clientHeight","scrollingElement","scroll","scrollRemaining","uniqueID","el","cacheX","cacheY","clearCacheTimer","smoothBehaviorForElement","clearTimeout","setInterval","setCache","elems","cache","getCache","rootScrollHeight","cached","topOverflowsNotHidden","overflowNotHidden","isOverflowCSS","overflowAutoOrScroll","isContentOverflowing","parentElement","overflow","getComputedStyle","getPropertyValue","id","fn","arg","removeEventListener","tag","toLowerCase","localStorage","SS_deltaBuffer","split","join","dpiScaledWheelDelta","allDeltasDivisableBy","tp","n","divisor","floor","isControl","URL","classList","parentNode","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","element","delay","WebKitMutationObserver","MozMutationObserver","SCROLL_ROOT","dummy","bodyScrollTop","docElScrollTop","removeChild","pulse_","val","expx","exp","userAgent","isEdge","isSafari","isMobile","isIEWin7","isEnabledForBrowser","supportsPassive","get","wheelOpt","passive","SmoothScroll","optionsToSet","hasOwnProperty","destroy","SmoothScrollOptions","define","ShadowSelect","constructor","select","inputName","inputClass","outputClass","containerClass","minLetters","outputItemClass","querySelector","output","CreateStructure","add","setAttribute","append","Search","result","trim","Draw","Hide","Clear","results","Show","forEach","container","textContent","prepend","setClick","output_items","childNodes","remove","onclick","setValue","create","inp","oninput","Fancybox","bind","toTopBtn","scrollTo","mobNavBtn","toggle","subNavContainers","stopPropagation","subNav","paddingTop","navLinks","link","href","offset","getBoundingClientRect","innerWidth","modalWrappers","wrapper","closest","closeBtns","btn","modalBtns","modalId","dataset","modal","hasAttribute","number","successModal","submitBtns","Dropdown","targets","_targets","dropdown","text","hidden_items","hidden_input","mask","innerHTML","getAttribute","swiper","Swiper","navigation","nextEl","prevEl","swiper2","swiper3","Sswiper","spaceBetween","pagination","breakpoints","slidesPerView","grid","rows","swiper5"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACE;;AAEG;AACF;AACM;;AAEV;;AAE7C;AAC8B;;AAE9B;AACA;AACA,yBAAyB,oBAAoB,GAAG,qBAAqB;AACrE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,QAAQ,mDAAE;AACV;;AAEO,uBAAuB,yDAAI;AAClC;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA,sCAAsC;AACtC,cAAc,sEAAM,SAAS;;AAE7B;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAqB,0EAAQ;AAC7B,qBAAqB,0EAAQ;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,mDAAmD,gCAAgC;AACnF;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA,kFAAkF,OAAO,EAAE,oBAAoB;;AAE/G;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,4EAA4E,OAAO,EAAE,iBAAiB;;AAEtG;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,sBAAsB,EAAE,gCAAgC;;AAE9G;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,oBAAoB,sEAAM;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL,0DAA0D,oEAAK;;AAE/D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;;AAEA,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,oEAAK;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,2BAA2B;AAC3B,WAAW,+EAA+E;;AAE1F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sEAAM;AAC1B;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA,uBAAuB,2DAAO;;AAE9B;AACA;AACA,yDAAyD,KAAK;AAC9D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yCAAyC;AACzC;AACA;;AAEA;AACA;;AAEA;;AAEA,qDAAqD;AACrD;AACA;;AAEA;AACA;;AAEA;;AAEA,qDAAqD;AACrD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,6DAA6D,uCAAuC;;AAEpG;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX,iDAAiD,QAAQ;AACzD;AACA,SAAS;;AAET;;AAEA;AACA,oDAAoD,QAAQ;AAC5D;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,cAAc;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC;AACtC,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA,4BAA4B;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,yDAAO;;;;;;;;;;;;;ACv6B1B;AAAe;AACf;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACJF;AAAA;AAAA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,cAAc;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,oBAAoB;AAClD;;AAEA;AACA;;AAEA;AACA;AACA,2DAA2D,MAAM;;AAEjE;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,8CAA8C,KAAK;AACnD;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA,yDAAyD,EAAE,qBAAqB;;AAEhF,0FAA0F,KAAK;;AAE/F;AACA;AACA,2DAA2D,KAAK;;AAEhE;AACA;AACA;;AAEA,4BAA4B,kCAAkC;AAC9D,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtJA;AAAA;AAAA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,6CAA6C,0BAA0B;AACvE;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAClB;AACA;;AAE/B,iBAAiB,CAAC,gFAAU,EAAE,wDAAI,EAAE,wDAAI;;;;;;;;;;;;;ACJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACM;;AAEX;;AAEK;;AAEN;;AAE7C;AAC8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,oGAAoG,OAAO;AAC3G;AACA;AACA;AACA;;AAEA;AACA,QAAQ,mDAAE;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,yDAAI;AAC3B;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,iCAAiC;AACjC,UAAU,sEAAM,SAAS;;AAEzB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA,wBAAwB,8DAAQ;AAChC;AACA,MAAM,sEAAM;AACZ;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;;AAEX;AACA,gEAAgE,KAAK;AACrE;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,QAAQ,GAAG,YAAY;;AAE7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC;AACrC,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,sCAAsC;AAC9F;;AAEA;AACA,KAAK;AACL,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA,mCAAmC;AACnC,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sBAAsB,sBAAsB;AAC5C,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,oEAAS;AAClB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD,iBAAiB,eAAe,IAAI;;AAEzF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB;AACA,mCAAmC;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,mBAAmB;;AAEjD;AACA;;AAEA;AACA,8BAA8B,uCAAuC;;AAErE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,8DAA8D,kCAAkC;AAChG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,OAAO;;AAE1D,iCAAiC,kBAAkB;AACnD;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C,OAAO;AACP,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,0CAA0C;AACjE,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,iBAAiB;AACzF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,sEAAM,GAAG;;AAEvB;AACA;AACA,qEAAqE,UAAU;;AAE/E;;AAEA;AACA;;AAEA;AACA,wDAAwD,UAAU;AAClE;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM,sEAAM,GAAG;AACf;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA,SAAS,oEAAS;AAClB;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,yDAAO;;AAE1B;AACA;;AAEA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;;AAEoB;;;;;;;;;;;;;ACz/CpB;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;AChBF;AAAA;AAAA;AAA+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA,WAAW,oBAAoB;;AAE/B;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,KAAK;;AAElE;AACA,2DAA2D,kCAAkC;AAC7F;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE,KAAK;;AAEzE;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,2DAA2D,kCAAkC;AAC7F;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ,oEAAS;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACzPA;AAAA;AAAA;AAAyD;;AAEzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uGAAuG,QAAQ;AAC/G,iBAAiB,KAAK,UAAU,QAAQ;AACxC;AACA,GAAG;AACH;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,sCAAsC,UAAU,cAAc,EAAE,EAAE;AAClE;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mIAAmI,GAAG;AACtI;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,QAAQ,GAAG,OAAO;AAC9E,6DAA6D,QAAQ;AACrE;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,oDAAoD,QAAQ,GAAG,OAAO;AACtE;;AAEA;AACA,KAAK;AACL;AACA,mCAAmC,IAAI,WAAW,EAAE;AACpD;AACA;AACA,mCAAmC,OAAO,OAAO;AACjD;AACA;AACA,2BAA2B,UAAU,8DAA8D;;AAEnG;AACA,KAAK,sDAAsD,IAAI,WAAW,EAAE;AAC5E,mCAAmC,OAAO,UAAU,oDAAoD;;AAExG;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,sEAAM,GAAG;;AAE7B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,OAAO,oBAAoB,iBAAiB,GAAG,YAAY;;AAExF;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,uCAAuC,mBAAmB;AAC1D;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX,6DAA6D,gBAAgB,OAAO,gBAAgB;AACpG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA,mDAAmD,YAAY,GAAG,YAAY;;AAE9E,4CAA4C;AAC5C;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,kCAAkC,cAAc;AAChD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,kBAAkB,MAAM;AACxB,mBAAmB,OAAO;AAC1B,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,+BAA+B,OAAO;;AAEtC;;AAEA;AACA,gCAAgC,mBAAmB;;AAEnD;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;;AAEA;AACA,6BAA6B,QAAQ;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE,KAAK,EAAE;AACjC,wBAAwB,QAAQ;AAChC,wBAAwB,QAAQ;AAChC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnuBA;AAAA;AAAA;AAAA;AAAyD;;AAEH;;AAEtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,aAAa;;AAEpD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gFAAgF,iBAAiB;AACjG,qFAAqF,iBAAiB;;AAEtG;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,2DAAO;AAC/B;AACA,MAAM,sEAAM,+CAA+C;AAC3D;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,4BAA4B;;AAEvC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,4BAA4B;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7qBA;AAAA;AAAA;AAA4E;;AAErE;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,8DAA8D,iBAAiB;AAC/E,4DAA4D,iBAAiB;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC,kBAAkB,wBAAwB;AAC1C,iCAAiC,oBAAoB,MAAM,mBAAmB,eAAe,UAAU;AACvG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,sFAAY;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AAAyD;AACA;;AAEzD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,wBAAwB,8DAAQ;AAChC;AACA,MAAM,sEAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6EAA6E,MAAM;AACnF,wCAAwC,sBAAsB;AAC9D,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AACd;;AAEQ;AACF;;AAE/D;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,sEAAU;AACtB,UAAU,sEAAU;AACpB,SAAS;AACT,UAAU,sEAAU;AACpB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wDAAwD;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,oFAAa;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,yBAAyB,oEAAS;;AAElC;AACA;AACA;AACA;;AAEA,2DAA2D,sEAAU;AACrE;AACA,UAAU,sEAAU;AACpB,SAAS;AACT;AACA;AACA;;AAEA;AACA,oBAAoB,sEAAU,cAAc,sEAAU;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,0DAA0D,EAAE,YAAY;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAU,oFAAa;AACvB;AACA,eAAe,sEAAM,GAAG;AACxB,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAyD,eAAe;;AAExE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC/gBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACZ;AACN;AACG;AACH;AACS;;AAExC;AACP,EAAE,gFAAU;AACZ,EAAE,gEAAM;AACR,EAAE,wDAAI;AACN,EAAE,oEAAO;AACT,EAAE,4DAAK;AACP,EAAE,wDAAI;AACN;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACF;;AAEkB;AAC0B;;AAE9B;AACgB;;AAEyB;;AAE1D;;AAED;;AAE7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEO,sBAAsB,yDAAI;AACjC;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;AACA,sCAAsC;AACtC,UAAU,sEAAM,SAAS;;AAEzB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;;AAEA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA,gBAAgB,+CAA+C;;AAE/D;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,2BAA2B,OAAO;AAClC;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,iBAAiB;AAC9E,6DAA6D,iBAAiB;;AAE9E;;AAEA,+BAA+B,8EAAc;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,kGAAoB;AAClE;AACA;AACA;AACA,cAAc,kFAAY;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,mFAAW;AACxC,4BAA4B,mFAAW;;AAEvC;AACA;;AAEA,6BAA6B,mFAAW;AACxC,4BAA4B,mFAAW;;AAEvC;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B,mFAAW;;AAExC;AACA;;AAEA,iBAAiB,iBAAiB;;AAElC;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,iCAAiC,iBAAiB;;AAElD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,8EAAc;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,cAAc;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,mFAAY;AAChC,qBAAqB,oFAAa;;AAElC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sCAAsC,wBAAwB;AAC9D;;AAEA;;AAEA,gBAAgB,oEAAK;AACrB,iBAAiB,oEAAK;;AAEtB;AACA;;AAEA;AACA;;AAEA;;AAEA,wDAAwD,oEAAK;AAC7D,0DAA0D,oEAAK;;AAE/D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,8FAAuB;AAC3C;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,oEAAK;AACrB,iBAAiB,oEAAK;AACtB;;AAEA;AACA,kBAAkB,MAAM;AACxB,mBAAmB,OAAO;AAC1B;AACA,OAAO;AACP;;AAEA;AACA,sCAAsC,WAAW,MAAM,gBAAgB,OAAO,KAAK;;AAEnF,uBAAuB;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO,mBAAmB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO,mBAAmB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA,uBAAuB;AACvB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,4CAA4C,qBAAqB,KAAK;AACtE;;AAEA;AACA,yBAAyB,oEAAK;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,iBAAiB;;AAE5B;AACA;;AAEA,gBAAgB,qDAAqD;AACrE;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,KAAK;AACR;;AAEA;AACA,aAAa,iBAAiB;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;;AAEA,cAAc;AACd,cAAc;;AAEd;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,oEAAK;AACzB,kBAAkB,oEAAK;AACvB,KAAK;AACL,oBAAoB,oEAAK;AACzB;;AAEA;AACA;AACA;;AAEA,oBAAoB,oEAAK;AACzB,kBAAkB,oEAAK;AACvB,KAAK;AACL,oBAAoB,oEAAK;AACzB;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,WAAW,iBAAiB;;AAE5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,iBAAiB;;AAE5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,oEAAK;AACf,UAAU,oEAAK;;AAEf;;AAEA,sBAAsB;AACtB,KAAK;AACL,UAAU,oEAAK;AACf,UAAU,oEAAK;;AAEf;;AAEA,sBAAsB;AACtB;;AAEA;;AAEA,QAAQ,oEAAK;AACb,QAAQ,oEAAK;;AAEb;AACA;AACA;;AAEA,cAAc,oEAAK;AACnB,eAAe,oEAAK;;AAEpB;AACA;;AAEA,wBAAwB;;AAExB;AACA,kBAAkB,MAAM;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA,kCAAkC,EAAE,MAAM,EAAE;AAC5C,OAAO;AACP,KAAK;AACL,qDAAqD,EAAE,MAAM,EAAE,eAAe,MAAM;AACpF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAAgE,iBAAiB;AACjF,gEAAgE,iBAAiB;;AAEjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,yDAAO;;;;;;;;;;;;;ACzsCzB;AAAA;AAAO;;;;;;;;;;;;;ACAP;AAAA;AAAA;AAAA;AAAA;AAA4C;AACE;AACY;;AAE1D;AACA;AACA;AACO;AACP;AACA;AACA,aAAa,OAAO;AACpB;AACA,0BAA0B;AAC1B,mBAAmB,+DAAM,SAAS;;AAElC;AACA;;AAEA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf,eAAe;AACf;AACA;AACA;AACA;;AAEA,gBAAgB,iEAAO;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,eAAe;AACf;AACA;AACA,kCAAkC,EAAE,eAAe,EAAE;AACrD;;AAEA;AACA;AACA,6BAA6B,wCAAwC,QAAQ,OAAO;AACpF,OAAO;AACP,kCAAkC,IAAI;AACtC;;AAEA;AACA;AACA;;AAEA,yBAAyB,uBAAuB;AAChD;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,6CAA6C,SAAS;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA,4BAA4B,+DAAM,GAAG,uBAAuB;;AAE5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC;;AAEnC;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvPA;AAAA;AAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC,KAAK;AACL,qCAAqC;AACrC,KAAK;AACL,wCAAwC;AACxC,KAAK;AACL,oCAAoC;AACpC;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAA6D;;AAE7D;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,oCAAoC,gBAAgB,EAAE,KAAK;AACnF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAM,iFAAkB;;AAExB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoD;;;;;;;;;;;;;AC/HpD;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7DA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,6BAA6B;AAC7B;;AAEA,4CAA4C,MAAM;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AACA;AACA;AACO;;;;;;;;;;;;;ACHP;AAAA;AAAA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAmD;;AAEnD;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;;AAEA,6CAA6C,uEAAa;AAC1D;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;;AAEA,UAAU;AACV;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa;AACb;AACO;AACP;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AACA,iEAAiE;AACjE,WAAW,EAAE;AACb,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AACA;AACA,+BAA+B,GAAG,GAAG,OAAO;AAC5C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACXA;AAAA;AAAA;AACA,iBAAiB;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,KAA4D;AAChE,IAAI,SACqG;AACzG,CAAC,qBAAqB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC,UAAU;AAC3C;AACA,uEAAuE;AACvE;AACA;AACA,OAAO;AACP;;AAEA;AACA,cAAc;;AAEd,2BAA2B;;AAE3B,8BAA8B;;AAE9B;AACA,iBAAiB;;AAEjB;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,yBAAyB;;AAEzB,sBAAsB;;AAEtB,eAAe;;AAEf;;AAEA,OAAO;AACP;AACA;AACA,OAAO;;AAEP,2BAA2B;;AAE3B,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP,gBAAgB;;AAEhB,eAAe;;AAEf,gBAAgB;;AAEhB,qBAAqB;;AAErB,uBAAuB;;AAEvB;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,kCAAkC;AAC3D;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC,6EAA6E,SAAS;AACtF;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4EAA4E;AAC5E,8CAA8C;;AAE9C,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,6CAA6C,QAAQ;AACrD;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,iBAAiB;AACpC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;;AAEd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,2BAA2B,qBAAqB;AAChD;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA,iDAAiD,QAAQ;AACzD;AACA;AACA,SAAS;AACT,qBAAqB,qBAAqB;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;;AAE3C;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;;AAE/C;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;;AAEzB,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;;AAEzB,qBAAqB,iBAAiB;AACtC,wCAAwC;;AAExC;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;;AAEA,uBAAuB,kBAAkB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B;;AAE1B,qBAAqB,iBAAiB;AACtC;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;;AAEA;AACA;AACA,SAAS,YAAY;AACrB;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,4DAA4D;AACrE;;;AAGA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE,6EAA6E;AAC7E;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE,6EAA6E;AAC7E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;;AAEA;AACA;;AAEA,yDAAyD,iBAAiB;AAC1E;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA,WAAW,YAAY;AACvB;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK,KAAK;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;;AAE9D;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;;AAEA,oEAAoE,YAAY,GAAG,aAAa;AAChG;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yBAAyB,6BAA6B;AACtD;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA;AACA;AACA,OAAO,EAAE;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA,OAAO;;AAEP,qBAAqB,kBAAkB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA,6DAA6D,UAAU;AACvE;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,yCAAyC;AAC7D,SAAS;AACT;;AAEA;AACA;AACA,2CAA2C,yCAAyC;AACpF,SAAS;AACT;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT,oBAAoB,aAAa;AACjC,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,+EAA+E,aAAa;AAC5F,8EAA8E,kEAAkE;AAChJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA,OAAO;;;AAGP,wDAAwD,UAAU;AAClE;;AAEA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAwD;;AAExD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,4BAA4B,wBAAwB,GAAG,sBAAsB,GAAG,sBAAsB,GAAG,iCAAiC,GAAG,+BAA+B,GAAG,+BAA+B;AAC9M;;AAEA;AACA,iDAAiD,kBAAkB,4BAA4B,YAAY;AAC3G,OAAO;AACP;AACA,OAAO;;;AAGP;;AAEA;AACA;AACA;AACA,kCAAkC,kBAAkB,QAAQ,2BAA2B,6BAA6B,UAAU;AAC9H,SAAS;AACT,kCAAkC,kBAAkB,GAAG,2BAA2B,4BAA4B,UAAU;AACxH;AACA,OAAO;;;AAGP,8CAA8C,kBAAkB;;AAEhE;AACA;AACA;AACA,OAAO;;;AAGP,8CAA8C,kBAAkB;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAC9J,SAAS;AACT,kCAAkC,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AACxJ;;AAEA;AACA,kCAAkC,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAC9J,SAAS;AACT,kCAAkC,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AACxJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,4CAA4C,EAAE,MAAM,EAAE,MAAM,EAAE;AAC9D;;AAEA;AACA,uDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,mFAAmF,kFAAkF,8BAA8B;;AAEnM;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,sDAAsD,mDAAmD;AACzG;;AAEA,+BAA+B,KAAK;;AAEpC;AACA;AACA,6CAA6C,KAAK;AAClD;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA,4CAA4C,KAAK;AACjD,SAAS;AACT,4CAA4C,KAAK;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mGAAmG,aAAa;AAChH;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;;AAEA;AACA,gGAAgG,MAAM;AACtG,SAAS;AACT;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C;;AAE7C,uCAAuC;;AAEvC;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,sDAAsD,yBAAyB;;AAEtI;AACA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AAChJ;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,iDAAiD,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AAC9I;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;;AAEjB;AACA,6BAA6B,kBAAkB,GAAG,2BAA2B;AAC7E,0CAA0C,kBAAkB;;AAE5D;AACA;;AAEA;AACA,yBAAyB,oBAAoB;AAC7C,2EAA2E,kBAAkB,GAAG,uBAAuB;AACvH;AACA;;AAEA,0CAA0C,kBAAkB;AAC5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP,qBAAqB,yBAAyB;AAC9C;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,8BAA8B,kBAAkB,GAAG,2BAA2B,IAAI,kBAAkB,GAAG,uBAAuB;AAC9H;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;;AAEjD;;AAEA;AACA;AACA;;AAEA,0FAA0F,sBAAsB;AAChH,iEAAiE;;AAEjE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,yDAAyD;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP,mDAAmD;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;;;AAGP;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;;AAGP;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qFAAqF;AACrF;;AAEA;AACA,wFAAwF;AACxF;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,6CAA6C;;AAE7C;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,OAAO,UAAU;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,uFAAuF;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,8BAA8B,OAAO,8BAA8B;AAC9F;AACA,OAAO;AACP,wBAAwB,8BAA8B;;AAEtD;AACA,0BAA0B,8BAA8B;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,SAAS;;AAET;AACA,+CAA+C,MAAM;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;;AAEjB;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS,EAAE;;AAEX,sCAAsC,8BAA8B;;AAEpE,iCAAiC;AACjC,yCAAyC;AACzC,uCAAuC,UAAU;;AAEjD;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,SAAS;;;AAGT,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,+BAA+B;;AAE/B;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yCAAyC,mBAAmB;AAC5D;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,yCAAyC,QAAQ;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,qCAAqC,EAAE,iBAAiB,eAAe,qCAAqC,EAAE,aAAa;AAC7J;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,+DAA+D;AACpF;;AAEA;AACA;AACA,6EAA6E;;AAE7E;;AAEA;AACA;;AAEA;AACA,UAAU;;;AAGV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA,SAAS;;;AAGT,4BAA4B;;AAE5B;AACA;AACA,SAAS;;;AAGT,4BAA4B;;AAE5B;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA,SAAS;AACT;AACA,SAAS;;;AAGT,8BAA8B;;AAE9B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,qCAAqC;;AAErC,mCAAmC;;AAEnC,8BAA8B;;AAE9B;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kHAAkH,yBAAyB,6BAA6B,MAAM,IAAI,MAAM;AACxL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,OAAO;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,SAAS;AACzC;AACA;;AAEA;AACA,aAAa;AACb,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,yBAAyB;AAC9D,SAAS;AACT,oCAAoC,iBAAiB;AACrD;AACA,yCAAyC,yBAAyB,4BAA4B,EAAE;AAChG;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,uEAAuE,OAAO;AAC9E;AACA;;AAEA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,QAAQ;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,qCAAqC;AACvE;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,uEAAuE,mBAAmB;AAC1F;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B,qCAAqC,yBAAyB,wCAAwC,+BAA+B;AACrI;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,wBAAwB;AACjD;;AAEA;AACA,6DAA6D;;AAE7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA,SAAS;AACT;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;;AAGT,qDAAqD;;AAErD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA;AACA,gGAAgG;AAChG,WAAW,8EAA8E;AACzF,SAAS;AACT;AACA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA,sCAAsC;AACtC;;AAEA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,aAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;;;AAGb,sDAAsD;;AAEtD,6GAA6G;;AAE7G;AACA;AACA;;AAEA,iDAAiD;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,gBAAgB;;AAElE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,iBAAiB;AACjB,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B,gCAAgC,IAAI;AACpC,4BAA4B,IAAI;AAChC,2BAA2B,IAAI;AAC/B,yBAAyB,IAAI;AAC7B,0BAA0B,IAAI;AAC9B,mCAAmC,IAAI;AACvC,uCAAuC,IAAI;AAC3C,6BAA6B,IAAI;AACjC,wBAAwB,IAAI;AAC5B,8BAA8B,IAAI;AAClC,4BAA4B,IAAI;AAChC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,0CAA0C,kBAAkB,GAAG,SAAS,2BAA2B,kBAAkB,GAAG,SAAS,GAAG,SAAS;AAC7I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE,6CAA6C;;AAEhH;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2GAA2G,yBAAyB,EAAE,OAAO;;AAE7I;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,gBAAgB;AACtD,0CAA0C,yBAAyB;AACnE;;AAEA;AACA;AACA,yDAAyD,QAAQ;AACjE,+DAA+D,yBAAyB;AACxF;;AAEA,yFAAyF,yBAAyB;AAClH,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uEAAuE,cAAc;AACrF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA,0GAA0G,OAAO,WAAW,OAAO;AACnI;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA,aAAa;AACb,oCAAoC,qBAAqB,UAAU,mBAAmB,MAAM,qBAAqB;AACjH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,6CAA6C,oBAAoB,qCAAqC,kBAAkB;AACxH;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,6CAA6C,4BAA4B;AACzE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,qBAAqB,EAAE,YAAY;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,2CAA2C,OAAO;AAClD,sCAAsC,QAAQ;AAC9C,SAAS;AACT,gDAAgD,OAAO;AACvD,uCAAuC,QAAQ;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,sCAAsC,SAAS;AAC/C,SAAS;AACT,uCAAuC,SAAS;AAChD;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,kCAAkC;;AAErE;AACA,qCAAqC,kCAAkC;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,iBAAiB,uCAAuC;AACxD,SAAS;AACT,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA,iBAAiB,2BAA2B;AAC5C,SAAS;AACT,iBAAiB,aAAa;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,EAAE,IAAI,EAAE;AAC/C,SAAS;AACT;AACA,uCAAuC,EAAE,IAAI,EAAE,eAAe,aAAa;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qDAAqD,yBAAyB;AAC9E;AACA,uDAAuD,sBAAsB;AAC7E,6DAA6D,sBAAsB;AACnF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+DAA+D,WAAW;AAC1E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+FAA+F,WAAW;AAC1G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,eAAe,MAAM,eAAe;AAC1F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,eAAe,MAAM,eAAe;AACvH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,yBAAyB;AAChF;;AAEA;AACA;AACA,gEAAgE,+BAA+B;AAC/F,aAAa;AACb;AACA;AACA;;AAEA,uDAAuD,sBAAsB;AAC7E,6DAA6D,sBAAsB;AACnF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,sEAAsE,WAAW,MAAM,WAAW;AAClG,+EAA+E,WAAW;AAC1F;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,+BAA+B;AAC7F,WAAW;AACX;AACA;;AAEA,uDAAuD,sBAAsB;AAC7E,6DAA6D,sBAAsB;AACnF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iDAAiD;;AAEjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT,0DAA0D,kCAAkC;AAC5F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iDAAiD;;AAEjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT,2DAA2D,kCAAkC;AAC7F;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yBAAyB,4BAA4B,MAAM;AAC/H,0CAA0C,oBAAoB,QAAQ,mBAAmB,SAAS,oBAAoB;;AAEtH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,WAAW;AAClE;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,sBAAsB;;AAEpD;AACA;;AAEA;AACA,8FAA8F,mBAAmB,UAAU,kCAAkC;AAC7J;AACA,eAAe;AACf,uEAAuE,kCAAkC,4BAA4B,mBAAmB;AACxJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,wBAAwB,4BAA4B,MAAM;AAClG;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kCAAkC,+BAA+B;AACjE;AACA;AACA,WAAW;AACX,SAAS;AACT,mCAAmC,iCAAiC;AACpE;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8EAA8E;;AAE9E,qDAAqD,cAAc;AACnE;AACA,aAAa;;;AAGb,kCAAkC,iBAAiB;AACnD;AACA;AACA,WAAW;AACX,sDAAsD,4BAA4B;AAClF;AACA,sDAAsD,4BAA4B;AAClF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,uBAAuB,wBAAwB;AAC/C;;AAEA;AACA,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,sCAAsC;AACtC;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA,sBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD,gCAAgC,OAAO,KAAK,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E,EAAE,OAAO,EAAE;AACzF;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA,qEAAqE,oBAAoB;AACzF;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uEAAuE,EAAE,OAAO,EAAE,8BAA8B,EAAE,cAAc,EAAE;AAClI;AACA,SAAS,EAAE;;AAEX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,qCAAqC;AAC5E,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,KAAK,GAAG,IAAI,GAAG,MAAM;AAC1C,SAAS;AACT,qBAAqB,IAAI,GAAG,MAAM;AAClC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA,0DAA0D,yBAAyB,cAAc,QAAQ;AACzG;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD,uDAAuD;AAC7G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wDAAwD,YAAY;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;;AAEA,sEAAsE;AACtE;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;;AAEA,gGAAgG,aAAa;AAC7G,gGAAgG,aAAa;AAC7G,yEAAyE,oEAAoE,uFAAuF;AACpO;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,qDAAqD;AACrD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA,aAAa;;;AAGb,oHAAoH,iBAAiB;AACrI,oHAAoH,iBAAiB;;AAErI;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;;AAEb;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,sBAAsB;AAC/C,0EAA0E,qBAAqB;AAC/F;AACA,SAAS;AACT,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,WAAW;AACX;;AAEA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,WAAW;;;AAGX;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,sBAAsB;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,kFAAkF,aAAa;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2CAA2C,kCAAkC;AAC7E,SAAS;;AAET;AACA;AACA;;AAEA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC,YAAY;AAC9C;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;;AAEA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,kCAAkC,qCAAqC,EAAE,OAAO;;AAEhF;AACA,oCAAoC,qCAAqC;AACzE;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,0BAA0B;AACnD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,SAAS;AACT;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,2BAA2B,GAAG,MAAM,GAAG;AAClD;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,YAAY;AACrC,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC,+BAA+B,eAAe,8BAA8B,mBAAmB,GAAG,MAAM,GAAG,MAAM,GAAG;;AAE3J;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,8BAA8B;AAChG;AACA;;AAEA;AACA,iEAAiE,kCAAkC;AACnG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,eAAe;AACjE,0CAA0C,eAAe;AACzD,SAAS;;AAET;AACA;AACA,wDAAwD,sCAAsC,MAAM,iBAAiB,yCAAyC,mBAAmB;AACjL,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO,OAAO,OAAO,qBAAqB,0BAA0B,MAAM,2BAA2B;AACpJ;AACA;;AAEA;AACA,kDAAkD,QAAQ,cAAc,0CAA0C,eAAe,2CAA2C;AAC5K;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA,gDAAgD,WAAW,KAAK,OAAO;AACvE;AACA,oDAAoD,YAAY;;AAEhE;AACA,wDAAwD,WAAW,KAAK,OAAO;AAC/E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,GAAG,MAAM,GAAG,mBAAmB,QAAQ,eAAe,QAAQ;AACzG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC,+CAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA;AACA,qEAAqE;;AAErE;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA,0EAA0E;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW,KAAK,WAAW,KAAK,WAAW,eAAe,QAAQ,eAAe,QAAQ,aAAa,MAAM;AAC5J;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,kBAAkB,MAAM;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,wDAAwD,OAAO;AAC/D;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;;AAGX;AACA,+BAA+B,MAAM,QAAQ,yCAAyC,KAAK,gCAAgC;AAC3H,WAAW,EAAE;;AAEb;AACA;AACA,WAAW;AACX;AACA;AACA,0CAA0C,KAAK,eAAe,KAAK,eAAe,KAAK;AACvF,8DAA8D,qDAAqD,cAAc,qDAAqD;AACtL;AACA,2CAA2C,gBAAgB,IAAI,aAAa,GAAG,YAAY,EAAE;;AAE7F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,sBAAsB;AAC5E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuC;AAC3D;;AAEA;AACA;AACA,yBAAyB,GAAG,QAAQ,2BAA2B;AAC/D,WAAW;AACX;AACA,yBAAyB,GAAG,SAAS,2BAA2B;AAChE,WAAW;AACX,oBAAoB,GAAG;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,2BAA2B,OAAO,2BAA2B;AAC7G;AACA,sBAAsB,GAAG,IAAI,GAAG,IAAI,GAAG;AACvC,kBAAkB,OAAO;AACzB,gBAAgB,YAAY;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/main.js\");\n","import { Base } from \"../shared/Base/Base.js\";\r\nimport { Panzoom } from \"../Panzoom/Panzoom.js\";\r\n\r\nimport { extend } from \"../shared/utils/extend.js\";\r\nimport { round } from \"../shared/utils/round.js\";\r\nimport { throttle } from \"../shared/utils/throttle.js\";\r\n\r\nimport { Plugins } from \"./plugins/index.js\";\r\n\r\n// Default language\r\nimport en from \"./l10n/en.js\";\r\n\r\nconst defaults = {\r\n  // Virtual slides. Each object should have at least `html` property that will be used to set content,\r\n  // example: `slides: [{html: 'First slide'}, {html: 'Second slide'}]`\r\n  slides: [],\r\n\r\n  // Number of slides to preload before/after visible slides\r\n  preload: 0,\r\n\r\n  // Number of slides to group into the page,\r\n  // if `auto` - group all slides that fit into the viewport\r\n  slidesPerPage: \"auto\",\r\n\r\n  // Index of initial page\r\n  initialPage: null,\r\n\r\n  // Index of initial slide\r\n  initialSlide: null,\r\n\r\n  // Panzoom friction while changing page\r\n  friction: 0.92,\r\n\r\n  // Should center active page\r\n  center: true,\r\n\r\n  // Should carousel scroll infinitely\r\n  infinite: true,\r\n\r\n  // Should the gap be filled before first and after last slide if `infinite: false`\r\n  fill: true,\r\n\r\n  // Should Carousel settle at any position after a swipe.\r\n  dragFree: false,\r\n\r\n  // Prefix for CSS classes, must be the same as the  SCSS `$carousel-prefix` variable\r\n  prefix: \"\",\r\n\r\n  // Class names for DOM elements (without prefix)\r\n  classNames: {\r\n    viewport: \"carousel__viewport\",\r\n    track: \"carousel__track\",\r\n    slide: \"carousel__slide\",\r\n\r\n    // Classname toggled for slides inside current page\r\n    slideSelected: \"is-selected\",\r\n  },\r\n\r\n  // Localization of strings\r\n  l10n: en,\r\n};\r\n\r\nexport class Carousel extends Base {\r\n  /**\r\n   * Carousel constructor\r\n   * @constructs Carousel\r\n   * @param {HTMLElement} $container - Carousel container\r\n   * @param {Object} [options] - Options for Carousel\r\n   */\r\n  constructor($container, options = {}) {\r\n    options = extend(true, {}, defaults, options);\r\n\r\n    super(options);\r\n\r\n    this.state = \"init\";\r\n\r\n    this.$container = $container;\r\n\r\n    if (!(this.$container instanceof HTMLElement)) {\r\n      throw new Error(\"No root element provided\");\r\n    }\r\n\r\n    this.slideNext = throttle(this.slideNext.bind(this), 250, true);\r\n    this.slidePrev = throttle(this.slidePrev.bind(this), 250, true);\r\n\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Perform initialization\r\n   */\r\n  init() {\r\n    this.pages = [];\r\n    this.page = this.pageIndex = null;\r\n    this.prevPage = this.prevPageIndex = null;\r\n\r\n    this.attachPlugins(Carousel.Plugins);\r\n\r\n    this.trigger(\"init\");\r\n\r\n    this.initLayout();\r\n\r\n    this.initSlides();\r\n\r\n    this.updateMetrics();\r\n\r\n    if (this.$track && this.pages.length) {\r\n      this.$track.style.transform = `translate3d(${this.pages[this.page].left * -1}px, 0px, 0) scale(1)`;\r\n    }\r\n\r\n    this.manageSlideVisiblity();\r\n\r\n    this.initPanzoom();\r\n\r\n    this.state = \"ready\";\r\n\r\n    this.trigger(\"ready\");\r\n  }\r\n\r\n  /**\r\n   * Initialize layout; create necessary elements\r\n   */\r\n  initLayout() {\r\n    const prefix = this.option(\"prefix\");\r\n    const classNames = this.option(\"classNames\");\r\n\r\n    this.$viewport = this.option(\"viewport\") || this.$container.querySelector(`.${prefix}${classNames.viewport}`);\r\n\r\n    if (!this.$viewport) {\r\n      this.$viewport = document.createElement(\"div\");\r\n      this.$viewport.classList.add(prefix + classNames.viewport);\r\n\r\n      this.$viewport.append(...this.$container.childNodes);\r\n\r\n      this.$container.appendChild(this.$viewport);\r\n    }\r\n\r\n    this.$track = this.option(\"track\") || this.$container.querySelector(`.${prefix}${classNames.track}`);\r\n\r\n    if (!this.$track) {\r\n      this.$track = document.createElement(\"div\");\r\n      this.$track.classList.add(prefix + classNames.track);\r\n\r\n      this.$track.append(...this.$viewport.childNodes);\r\n\r\n      this.$viewport.appendChild(this.$track);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fill `slides` array with objects from existing nodes and/or `slides` option\r\n   */\r\n  initSlides() {\r\n    this.slides = [];\r\n\r\n    // Get existing slides from the DOM\r\n    const elems = this.$viewport.querySelectorAll(`.${this.option(\"prefix\")}${this.option(\"classNames.slide\")}`);\r\n\r\n    elems.forEach((el) => {\r\n      const slide = {\r\n        $el: el,\r\n        isDom: true,\r\n      };\r\n\r\n      this.slides.push(slide);\r\n\r\n      this.trigger(\"createSlide\", slide, this.slides.length);\r\n    });\r\n\r\n    // Add virtual slides, but do not create DOM elements yet,\r\n    // because they will be created dynamically based on current carousel position\r\n    if (Array.isArray(this.options.slides)) {\r\n      this.slides = extend(true, [...this.slides], this.options.slides);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Do all calculations related to slide size and paging\r\n   */\r\n  updateMetrics() {\r\n    // Calculate content width, viewport width\r\n    // ===\r\n    let contentWidth = 0;\r\n    let indexes = [];\r\n    let lastSlideWidth;\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      const $el = slide.$el;\r\n      const slideWidth = slide.isDom || !lastSlideWidth ? this.getSlideMetrics($el) : lastSlideWidth;\r\n\r\n      slide.index = index;\r\n      slide.width = slideWidth;\r\n      slide.left = contentWidth;\r\n\r\n      lastSlideWidth = slideWidth;\r\n      contentWidth += slideWidth;\r\n\r\n      indexes.push(index);\r\n    });\r\n\r\n    let viewportWidth = Math.max(this.$track.offsetWidth, round(this.$track.getBoundingClientRect().width));\r\n\r\n    let viewportStyles = getComputedStyle(this.$track);\r\n    viewportWidth = viewportWidth - (parseFloat(viewportStyles.paddingLeft) + parseFloat(viewportStyles.paddingRight));\r\n\r\n    this.contentWidth = contentWidth;\r\n    this.viewportWidth = viewportWidth;\r\n\r\n    // Split slides into pages\r\n    // ===\r\n    const pages = [];\r\n    const slidesPerPage = this.option(\"slidesPerPage\");\r\n\r\n    if (Number.isInteger(slidesPerPage) && contentWidth > viewportWidth) {\r\n      // Fixed number of slides in the page\r\n      for (let i = 0; i < this.slides.length; i += slidesPerPage) {\r\n        pages.push({\r\n          indexes: indexes.slice(i, i + slidesPerPage),\r\n          slides: this.slides.slice(i, i + slidesPerPage),\r\n        });\r\n      }\r\n    } else {\r\n      // Slides that fit inside viewport\r\n      let currentPage = 0;\r\n      let currentWidth = 0;\r\n\r\n      for (let i = 0; i < this.slides.length; i += 1) {\r\n        let slide = this.slides[i];\r\n\r\n        // Add next page\r\n        if (!pages.length || currentWidth + slide.width > viewportWidth) {\r\n          pages.push({\r\n            indexes: [],\r\n            slides: [],\r\n          });\r\n\r\n          currentPage = pages.length - 1;\r\n          currentWidth = 0;\r\n        }\r\n\r\n        currentWidth += slide.width;\r\n\r\n        pages[currentPage].indexes.push(i);\r\n        pages[currentPage].slides.push(slide);\r\n      }\r\n    }\r\n\r\n    const shouldCenter = this.option(\"center\");\r\n    const shouldFill = this.option(\"fill\");\r\n\r\n    // Calculate width and start position for each page\r\n    // ===\r\n    pages.forEach((page, index) => {\r\n      page.index = index;\r\n      page.width = page.slides.reduce((sum, slide) => sum + slide.width, 0);\r\n\r\n      page.left = page.slides[0].left;\r\n\r\n      if (shouldCenter) {\r\n        page.left += (viewportWidth - page.width) * 0.5 * -1;\r\n      }\r\n\r\n      if (shouldFill && !this.option(\"infiniteX\", this.option(\"infinite\")) && contentWidth > viewportWidth) {\r\n        page.left = Math.max(page.left, 0);\r\n        page.left = Math.min(page.left, contentWidth - viewportWidth);\r\n      }\r\n    });\r\n\r\n    // Merge pages\r\n    // ===\r\n    const rez = [];\r\n    let prevPage;\r\n\r\n    pages.forEach((page2) => {\r\n      const page = { ...page2 };\r\n\r\n      if (prevPage && page.left === prevPage.left) {\r\n        prevPage.width += page.width;\r\n\r\n        prevPage.slides = [...prevPage.slides, ...page.slides];\r\n        prevPage.indexes = [...prevPage.indexes, ...page.indexes];\r\n      } else {\r\n        page.index = rez.length;\r\n\r\n        prevPage = page;\r\n\r\n        rez.push(page);\r\n      }\r\n    });\r\n\r\n    this.pages = rez;\r\n\r\n    let page = this.page;\r\n\r\n    if (page === null) {\r\n      const initialSlide = this.option(\"initialSlide\");\r\n\r\n      if (initialSlide !== null) {\r\n        page = this.findPageForSlide(initialSlide);\r\n      } else {\r\n        page = this.option(\"initialPage\", 0);\r\n      }\r\n\r\n      if (!rez[page]) {\r\n        page = rez.length && page > rez.length ? rez[rez.length - 1].index : 0;\r\n      }\r\n\r\n      this.page = page;\r\n      this.pageIndex = page;\r\n    }\r\n\r\n    this.updatePanzoom();\r\n\r\n    this.trigger(\"refresh\");\r\n  }\r\n\r\n  /**\r\n   * Calculate slide element width (including left, right margins)\r\n   * @param {Object} node\r\n   * @returns {Number} Width in px\r\n   */\r\n  getSlideMetrics(node) {\r\n    if (!node) {\r\n      const firstSlide = this.slides[0];\r\n\r\n      node = document.createElement(\"div\");\r\n\r\n      node.dataset.isTestEl = 1;\r\n      node.style.visibility = \"hidden\";\r\n      node.classList.add(this.option(\"prefix\") + this.option(\"classNames.slide\"));\r\n\r\n      // Assume all slides have the same custom class, if any\r\n      if (firstSlide.customClass) {\r\n        node.classList.add(...firstSlide.customClass.split(\" \"));\r\n      }\r\n\r\n      this.$track.prepend(node);\r\n    }\r\n\r\n    let width = Math.max(node.offsetWidth, round(node.getBoundingClientRect().width));\r\n\r\n    // Add left/right margin\r\n    const style = node.currentStyle || window.getComputedStyle(node);\r\n    width = width + (parseFloat(style.marginLeft) || 0) + (parseFloat(style.marginRight) || 0);\r\n\r\n    if (node.dataset.isTestEl) {\r\n      node.remove();\r\n    }\r\n\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Integer} index Index of the slide\r\n   * @returns {Integer|null} Index of the page if found, or null\r\n   */\r\n  findPageForSlide(index) {\r\n    const page = this.pages.find((page) => {\r\n      return page.indexes.indexOf(index) > -1;\r\n    });\r\n\r\n    return page ? page.index : null;\r\n  }\r\n\r\n  /**\r\n   * Slide to next page, if possible\r\n   */\r\n  slideNext() {\r\n    this.slideTo(this.pageIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Slide to previous page, if possible\r\n   */\r\n  slidePrev() {\r\n    this.slideTo(this.pageIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * Slides carousel to given page\r\n   * @param {Number} page - New index of active page\r\n   * @param {Object} [params] - Additional options\r\n   */\r\n  slideTo(page, params = {}) {\r\n    const { x = this.setPage(page, true) * -1, y = 0, friction = this.option(\"friction\") } = params;\r\n\r\n    if (this.Panzoom.content.x === x && !this.Panzoom.velocity.x && friction) {\r\n      return;\r\n    }\r\n\r\n    this.Panzoom.panTo({\r\n      x,\r\n      y,\r\n      friction,\r\n      ignoreBounds: true,\r\n    });\r\n\r\n    if (this.state === \"ready\" && this.Panzoom.state === \"ready\") {\r\n      this.trigger(\"settle\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise main Panzoom instance\r\n   */\r\n  initPanzoom() {\r\n    if (this.Panzoom) {\r\n      this.Panzoom.destroy();\r\n    }\r\n\r\n    // Create fresh object containing options for Pazoom instance\r\n    const options = extend(\r\n      true,\r\n      {},\r\n      {\r\n        // Track element will be set as Panzoom $content\r\n        content: this.$track,\r\n        wrapInner: false,\r\n        resizeParent: false,\r\n\r\n        // Disable any user interaction\r\n        zoom: false,\r\n        click: false,\r\n\r\n        // Right now, only horizontal navigation is supported\r\n        lockAxis: \"x\",\r\n\r\n        x: this.pages.length ? this.pages[this.page].left * -1 : 0,\r\n        centerOnStart: false,\r\n\r\n        // Make `textSelection` option more easy to customize\r\n        textSelection: () => this.option(\"textSelection\", false),\r\n\r\n        // Disable dragging if content (e.g. all slides) fits inside viewport\r\n        panOnlyZoomed: function () {\r\n          return this.content.width <= this.viewport.width;\r\n        },\r\n      },\r\n      this.option(\"Panzoom\")\r\n    );\r\n\r\n    // Create new Panzoom instance\r\n    this.Panzoom = new Panzoom(this.$container, options);\r\n\r\n    this.Panzoom.on({\r\n      // Bubble events\r\n      \"*\": (name, ...details) => this.trigger(`Panzoom.${name}`, ...details),\r\n      // The rest of events to be processed\r\n      afterUpdate: () => {\r\n        this.updatePage();\r\n      },\r\n      beforeTransform: this.onBeforeTransform.bind(this),\r\n      touchEnd: this.onTouchEnd.bind(this),\r\n      endAnimation: () => {\r\n        this.trigger(\"settle\");\r\n      },\r\n    });\r\n\r\n    // The contents of the slides may cause the page scroll bar to appear, so the carousel width may change\r\n    // and slides have to be repositioned\r\n    this.updateMetrics();\r\n    this.manageSlideVisiblity();\r\n  }\r\n\r\n  updatePanzoom() {\r\n    if (!this.Panzoom) {\r\n      return;\r\n    }\r\n\r\n    this.Panzoom.content = {\r\n      ...this.Panzoom.content,\r\n      fitWidth: this.contentWidth,\r\n      origWidth: this.contentWidth,\r\n      width: this.contentWidth,\r\n    };\r\n\r\n    if (this.pages.length > 1 && this.option(\"infiniteX\", this.option(\"infinite\"))) {\r\n      this.Panzoom.boundX = null;\r\n    } else if (this.pages.length) {\r\n      this.Panzoom.boundX = {\r\n        from: this.pages[this.pages.length - 1].left * -1,\r\n        to: this.pages[0].left * -1,\r\n      };\r\n    }\r\n\r\n    if (this.option(\"infiniteY\", this.option(\"infinite\"))) {\r\n      this.Panzoom.boundY = null;\r\n    } else {\r\n      this.Panzoom.boundY = {\r\n        from: 0,\r\n        to: 0,\r\n      };\r\n    }\r\n\r\n    this.Panzoom.handleCursor();\r\n  }\r\n\r\n  manageSlideVisiblity() {\r\n    const contentWidth = this.contentWidth;\r\n    const viewportWidth = this.viewportWidth;\r\n\r\n    let currentX = this.Panzoom ? this.Panzoom.content.x * -1 : this.pages.length ? this.pages[this.page].left : 0;\r\n\r\n    const preload = this.option(\"preload\");\r\n    const infinite = this.option(\"infiniteX\", this.option(\"infinite\"));\r\n\r\n    const paddingLeft = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue(\"padding-left\"));\r\n    const paddingRight = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue(\"padding-right\"));\r\n\r\n    // Check visibility of each slide\r\n    this.slides.forEach((slide) => {\r\n      let leftBoundary, rightBoundary;\r\n\r\n      let hasDiff = 0;\r\n\r\n      // #1 - slides in current viewport; this does not include infinite items\r\n      leftBoundary = currentX - paddingLeft;\r\n      rightBoundary = currentX + viewportWidth + paddingRight;\r\n\r\n      leftBoundary -= preload * (viewportWidth + paddingLeft + paddingRight);\r\n      rightBoundary += preload * (viewportWidth + paddingLeft + paddingRight);\r\n\r\n      const insideCurrentInterval = slide.left + slide.width > leftBoundary && slide.left < rightBoundary;\r\n\r\n      // #2 - infinite items inside current viewport; from previous interval\r\n      leftBoundary = currentX + contentWidth - paddingLeft;\r\n      rightBoundary = currentX + contentWidth + viewportWidth + paddingRight;\r\n\r\n      // Include slides that have to be preloaded\r\n      leftBoundary -= preload * (viewportWidth + paddingLeft + paddingRight);\r\n\r\n      const insidePrevInterval = infinite && slide.left + slide.width > leftBoundary && slide.left < rightBoundary;\r\n\r\n      // #2 - infinite items inside current viewport; from next interval\r\n      leftBoundary = currentX - contentWidth - paddingLeft;\r\n      rightBoundary = currentX - contentWidth + viewportWidth + paddingRight;\r\n\r\n      // Include slides that have to be preloaded\r\n      leftBoundary -= preload * (viewportWidth + paddingLeft + paddingRight);\r\n\r\n      const insideNextInterval = infinite && slide.left + slide.width > leftBoundary && slide.left < rightBoundary;\r\n\r\n      // Create virtual slides that should be visible or preloaded, remove others\r\n      if (insidePrevInterval || insideCurrentInterval || insideNextInterval) {\r\n        this.createSlideEl(slide);\r\n\r\n        if (insideCurrentInterval) {\r\n          hasDiff = 0;\r\n        }\r\n\r\n        if (insidePrevInterval) {\r\n          hasDiff = -1;\r\n        }\r\n\r\n        if (insideNextInterval) {\r\n          hasDiff = 1;\r\n        }\r\n\r\n        // Bring preloaded slides back to viewport, if needed\r\n        if (slide.left + slide.width > currentX && slide.left <= currentX + viewportWidth + paddingRight) {\r\n          hasDiff = 0;\r\n        }\r\n      } else {\r\n        this.removeSlideEl(slide);\r\n      }\r\n\r\n      slide.hasDiff = hasDiff;\r\n    });\r\n\r\n    // Reposition slides for continuity\r\n    let nextIndex = 0;\r\n    let nextPos = 0;\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      let updatedX = 0;\r\n\r\n      if (slide.$el) {\r\n        if (index !== nextIndex || slide.hasDiff) {\r\n          updatedX = nextPos + slide.hasDiff * contentWidth;\r\n        } else {\r\n          nextPos = 0;\r\n        }\r\n\r\n        slide.$el.style.left = Math.abs(updatedX) > 0.1 ? `${nextPos + slide.hasDiff * contentWidth}px` : \"\";\r\n\r\n        nextIndex++;\r\n      } else {\r\n        nextPos += slide.width;\r\n      }\r\n    });\r\n\r\n    this.markSelectedSlides();\r\n  }\r\n\r\n  /**\r\n   * Creates main DOM element for virtual slides,\r\n   * lazy loads images inside regular slides\r\n   * @param {Object} slide\r\n   */\r\n  createSlideEl(slide) {\r\n    if (!slide) {\r\n      return;\r\n    }\r\n\r\n    if (slide.$el) {\r\n      let curentIndex = parseInt(slide.$el.dataset.index, 10);\r\n\r\n      if (curentIndex !== slide.index) {\r\n        slide.$el.dataset.index = slide.index;\r\n\r\n        // Lazy load images\r\n        const $lazyNodes = slide.$el.querySelectorAll(\"[data-lazy-src]\");\r\n\r\n        $lazyNodes.forEach((node) => {\r\n          let lazySrc = node.dataset.lazySrc;\r\n\r\n          if (node instanceof HTMLImageElement) {\r\n            node.src = lazySrc;\r\n          } else {\r\n            node.style.backgroundImage = `url('${lazySrc}')`;\r\n          }\r\n        });\r\n\r\n        let lazySrc;\r\n\r\n        if ((lazySrc = slide.$el.dataset.lazySrc)) {\r\n          slide.$el.style.backgroundImage = `url('${lazySrc}')`;\r\n        }\r\n\r\n        slide.state = \"ready\";\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const div = document.createElement(\"div\");\r\n\r\n    div.dataset.index = slide.index;\r\n    div.classList.add(this.option(\"prefix\") + this.option(\"classNames.slide\"));\r\n\r\n    if (slide.customClass) {\r\n      div.classList.add(...slide.customClass.split(\" \"));\r\n    }\r\n\r\n    if (slide.html) {\r\n      div.innerHTML = slide.html;\r\n    }\r\n\r\n    const allElelements = [];\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      if (slide.$el) {\r\n        allElelements.push(index);\r\n      }\r\n    });\r\n\r\n    // Find a place in DOM to insert an element\r\n    const goal = slide.index;\r\n    let refSlide = null;\r\n\r\n    if (allElelements.length) {\r\n      let refIndex = allElelements.reduce((prev, curr) =>\r\n        Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev\r\n      );\r\n      refSlide = this.slides[refIndex];\r\n    }\r\n\r\n    this.$track.insertBefore(\r\n      div,\r\n      refSlide && refSlide.$el ? (refSlide.index < slide.index ? refSlide.$el.nextSibling : refSlide.$el) : null\r\n    );\r\n\r\n    slide.$el = div;\r\n\r\n    this.trigger(\"createSlide\", slide, goal);\r\n\r\n    return slide;\r\n  }\r\n\r\n  /**\r\n   * Removes main DOM element of given slide\r\n   * @param {Object} slide\r\n   */\r\n  removeSlideEl(slide) {\r\n    if (slide.$el && !slide.isDom) {\r\n      this.trigger(\"removeSlide\", slide);\r\n\r\n      slide.$el.remove();\r\n      slide.$el = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles selected class name and aria-hidden attribute for slides based on visibility\r\n   */\r\n  markSelectedSlides() {\r\n    const selectedClass = this.option(\"classNames.slideSelected\");\r\n    const attr = \"aria-hidden\";\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      const $el = slide.$el;\r\n\r\n      if (!$el) {\r\n        return;\r\n      }\r\n\r\n      const page = this.pages[this.page];\r\n\r\n      if (page && page.indexes && page.indexes.indexOf(index) > -1) {\r\n        if (selectedClass && !$el.classList.contains(selectedClass)) {\r\n          $el.classList.add(selectedClass);\r\n          this.trigger(\"selectSlide\", slide);\r\n        }\r\n\r\n        $el.removeAttribute(attr);\r\n      } else {\r\n        if (selectedClass && $el.classList.contains(selectedClass)) {\r\n          $el.classList.remove(selectedClass);\r\n          this.trigger(\"unselectSlide\", slide);\r\n        }\r\n\r\n        $el.setAttribute(attr, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Perform all calculations and center current page\r\n   */\r\n  updatePage() {\r\n    this.updateMetrics();\r\n\r\n    this.slideTo(this.page, { friction: 0 });\r\n  }\r\n\r\n  /**\r\n   * Process `Panzoom.beforeTransform` event to remove slides moved out of viewport and\r\n   * to create necessary ones\r\n   */\r\n  onBeforeTransform() {\r\n    if (this.option(\"infiniteX\", this.option(\"infinite\"))) {\r\n      this.manageInfiniteTrack();\r\n    }\r\n\r\n    this.manageSlideVisiblity();\r\n  }\r\n\r\n  /**\r\n   * Seamlessly flip position of infinite carousel, if needed; this way x position stays low\r\n   */\r\n  manageInfiniteTrack() {\r\n    const contentWidth = this.contentWidth;\r\n    const viewportWidth = this.viewportWidth;\r\n\r\n    if (!this.option(\"infiniteX\", this.option(\"infinite\")) || this.pages.length < 2 || contentWidth < viewportWidth) {\r\n      return;\r\n    }\r\n\r\n    const panzoom = this.Panzoom;\r\n\r\n    let isFlipped = false;\r\n\r\n    if (panzoom.content.x < (contentWidth - viewportWidth) * -1) {\r\n      panzoom.content.x += contentWidth;\r\n\r\n      this.pageIndex = this.pageIndex - this.pages.length;\r\n\r\n      isFlipped = true;\r\n    }\r\n\r\n    if (panzoom.content.x > viewportWidth) {\r\n      panzoom.content.x -= contentWidth;\r\n\r\n      this.pageIndex = this.pageIndex + this.pages.length;\r\n\r\n      isFlipped = true;\r\n    }\r\n\r\n    if (isFlipped && panzoom.state === \"pointerdown\") {\r\n      panzoom.resetDragPosition();\r\n    }\r\n\r\n    return isFlipped;\r\n  }\r\n\r\n  /**\r\n   * Process `Panzoom.touchEnd` event; slide to next/prev page if needed\r\n   * @param {object} panzoom\r\n   */\r\n  onTouchEnd(panzoom, event) {\r\n    const dragFree = this.option(\"dragFree\");\r\n\r\n    // If this is a quick horizontal flick, slide to next/prev slide\r\n    if (\r\n      !dragFree &&\r\n      this.pages.length > 1 &&\r\n      panzoom.dragOffset.time < 350 &&\r\n      Math.abs(panzoom.dragOffset.y) < 1 &&\r\n      Math.abs(panzoom.dragOffset.x) > 5\r\n    ) {\r\n      this[panzoom.dragOffset.x < 0 ? \"slideNext\" : \"slidePrev\"]();\r\n      return;\r\n    }\r\n\r\n    // Set the slide at the end of the animation as the current one,\r\n    // or slide to closest page\r\n    if (dragFree) {\r\n      const [, nextPageIndex] = this.getPageFromPosition(panzoom.transform.x * -1);\r\n      this.setPage(nextPageIndex);\r\n    } else {\r\n      this.slideToClosest();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Slides to the closest page (useful, if carousel is changed manually)\r\n   * @param {Object} [params] - Object containing additional options\r\n   */\r\n  slideToClosest(params = {}) {\r\n    let [, nextPageIndex] = this.getPageFromPosition(this.Panzoom.content.x * -1);\r\n\r\n    this.slideTo(nextPageIndex, params);\r\n  }\r\n\r\n  /**\r\n   * Returns index of closest page to given x position\r\n   * @param {Number} xPos\r\n   */\r\n  getPageFromPosition(xPos) {\r\n    const pageCount = this.pages.length;\r\n    const center = this.option(\"center\");\r\n\r\n    if (center) {\r\n      xPos += this.viewportWidth * 0.5;\r\n    }\r\n\r\n    const interval = Math.floor(xPos / this.contentWidth);\r\n\r\n    xPos -= interval * this.contentWidth;\r\n\r\n    let slide = this.slides.find((slide) => slide.left <= xPos && slide.left + slide.width > xPos);\r\n\r\n    if (slide) {\r\n      let pageIndex = this.findPageForSlide(slide.index);\r\n\r\n      return [pageIndex, pageIndex + interval * pageCount];\r\n    }\r\n\r\n    return [0, 0];\r\n  }\r\n\r\n  /**\r\n   * Changes active page\r\n   * @param {Number} page - New index of active page\r\n   * @param {Boolean} toClosest - to closest page based on scroll distance (for infinite navigation)\r\n   */\r\n  setPage(page, toClosest) {\r\n    let nextPosition = 0;\r\n    let pageIndex = parseInt(page, 10) || 0;\r\n\r\n    const prevPage = this.page,\r\n      prevPageIndex = this.pageIndex,\r\n      pageCount = this.pages.length;\r\n\r\n    const contentWidth = this.contentWidth;\r\n    const viewportWidth = this.viewportWidth;\r\n\r\n    page = ((pageIndex % pageCount) + pageCount) % pageCount;\r\n\r\n    if (this.option(\"infiniteX\", this.option(\"infinite\")) && contentWidth > viewportWidth) {\r\n      const nextInterval = Math.floor(pageIndex / pageCount) || 0,\r\n        elemDimWidth = contentWidth;\r\n\r\n      nextPosition = this.pages[page].left + nextInterval * elemDimWidth;\r\n\r\n      if (toClosest === true && pageCount > 2) {\r\n        let currPosition = this.Panzoom.content.x * -1;\r\n\r\n        // * Find closest interval\r\n        const decreasedPosition = nextPosition - elemDimWidth,\r\n          increasedPosition = nextPosition + elemDimWidth,\r\n          diff1 = Math.abs(currPosition - nextPosition),\r\n          diff2 = Math.abs(currPosition - decreasedPosition),\r\n          diff3 = Math.abs(currPosition - increasedPosition);\r\n\r\n        if (diff3 < diff1 && diff3 <= diff2) {\r\n          nextPosition = increasedPosition;\r\n          pageIndex += pageCount;\r\n        } else if (diff2 < diff1 && diff2 < diff3) {\r\n          nextPosition = decreasedPosition;\r\n          pageIndex -= pageCount;\r\n        }\r\n      }\r\n    } else {\r\n      page = pageIndex = Math.max(0, Math.min(pageIndex, pageCount - 1));\r\n\r\n      nextPosition = this.pages.length ? this.pages[page].left : 0;\r\n    }\r\n\r\n    this.page = page;\r\n    this.pageIndex = pageIndex;\r\n\r\n    if (prevPage !== null && page !== prevPage) {\r\n      this.prevPage = prevPage;\r\n      this.prevPageIndex = prevPageIndex;\r\n\r\n      this.trigger(\"change\", page, prevPage);\r\n    }\r\n\r\n    return nextPosition;\r\n  }\r\n\r\n  /**\r\n   * Clean up\r\n   */\r\n  destroy() {\r\n    this.state = \"destroy\";\r\n\r\n    this.slides.forEach((slide) => {\r\n      this.removeSlideEl(slide);\r\n    });\r\n\r\n    this.slides = [];\r\n\r\n    this.Panzoom.destroy();\r\n\r\n    this.detachPlugins();\r\n  }\r\n}\r\n\r\n// Expose version\r\nCarousel.version = \"__VERSION__\";\r\n\r\n// Static properties are a recent addition that dont work in all browsers yet\r\nCarousel.Plugins = Plugins;\r\n","export default {\r\n  NEXT: \"Next slide\",\r\n  PREV: \"Previous slide\",\r\n  GOTO: \"Go to slide #%d\",\r\n};\r\n","const defaults = {\n  // The minimum number of slides to display dots\n  minSlideCount: 2,\n};\n\nexport class Dots {\n  constructor(carousel) {\n    this.carousel = carousel;\n\n    this.$list = null;\n\n    this.events = {\n      change: this.onChange.bind(this),\n      refresh: this.onRefresh.bind(this),\n    };\n  }\n\n  /**\n   * Build wrapping DOM element containing all dots\n   */\n  buildList() {\n    if (this.carousel.pages.length < this.carousel.option(\"Dots.minSlideCount\")) {\n      return;\n    }\n\n    const $list = document.createElement(\"ol\");\n\n    $list.classList.add(\"carousel__dots\");\n\n    $list.addEventListener(\"click\", (e) => {\n      if (!(\"page\" in e.target.dataset)) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      const page = parseInt(e.target.dataset.page, 10);\n      const carousel = this.carousel;\n\n      if (page === carousel.page) {\n        return;\n      }\n\n      if (carousel.pages.length < 3 && carousel.option(\"infinite\")) {\n        carousel[page == 0 ? \"slidePrev\" : \"slideNext\"]();\n      } else {\n        carousel.slideTo(page);\n      }\n    });\n\n    this.$list = $list;\n\n    this.carousel.$container.appendChild($list);\n    this.carousel.$container.classList.add(\"has-dots\");\n\n    return $list;\n  }\n\n  /**\n   * Remove wrapping DOM element\n   */\n  removeList() {\n    if (this.$list) {\n      this.$list.parentNode.removeChild(this.$list);\n      this.$list = null;\n    }\n\n    this.carousel.$container.classList.remove(\"has-dots\");\n  }\n\n  /**\n   * Remove existing dots and create fresh ones\n   */\n  rebuildDots() {\n    let $list = this.$list;\n\n    const listExists = !!$list;\n    const pagesCount = this.carousel.pages.length;\n\n    if (pagesCount < 2) {\n      if (listExists) {\n        this.removeList();\n      }\n\n      return;\n    }\n\n    if (!listExists) {\n      $list = this.buildList();\n    }\n\n    // Remove existing dots\n    const dotCount = this.$list.children.length;\n\n    if (dotCount > pagesCount) {\n      for (let i = pagesCount; i < dotCount; i++) {\n        this.$list.removeChild(this.$list.lastChild);\n      }\n\n      return;\n    }\n\n    // Create fresh DOM elements (dots) for each page\n    for (let index = dotCount; index < pagesCount; index++) {\n      const $dot = document.createElement(\"li\");\n\n      $dot.classList.add(\"carousel__dot\");\n      $dot.dataset.page = index;\n\n      $dot.setAttribute(\"role\", \"button\");\n      $dot.setAttribute(\"tabindex\", \"0\");\n      $dot.setAttribute(\"title\", this.carousel.localize(\"{{GOTO}}\", [[\"%d\", index + 1]]));\n\n      $dot.addEventListener(\"keydown\", (event) => {\n        const code = event.code;\n\n        let $el;\n\n        if (code === \"Enter\" || code === \"NumpadEnter\") {\n          $el = $dot;\n        } else if (code === \"ArrowRight\") {\n          $el = $dot.nextSibling;\n        } else if (code === \"ArrowLeft\") {\n          $el = $dot.previousSibling;\n        }\n\n        $el && $el.click();\n      });\n\n      this.$list.appendChild($dot);\n    }\n\n    this.setActiveDot();\n  }\n\n  /**\n   * Mark active dot by toggling class name\n   */\n  setActiveDot() {\n    if (!this.$list) {\n      return;\n    }\n\n    this.$list.childNodes.forEach(($dot) => {\n      $dot.classList.remove(\"is-selected\");\n    });\n\n    const $activeDot = this.$list.childNodes[this.carousel.page];\n\n    if ($activeDot) {\n      $activeDot.classList.add(\"is-selected\");\n    }\n  }\n\n  /**\n   * Process carousel `change` event\n   */\n  onChange() {\n    this.setActiveDot();\n  }\n\n  /**\n   * Process carousel `refresh` event\n   */\n  onRefresh() {\n    this.rebuildDots();\n  }\n\n  attach() {\n    this.carousel.on(this.events);\n  }\n\n  detach() {\n    this.removeList();\n\n    this.carousel.off(this.events);\n    this.carousel = null;\n  }\n}\n","const defaults = {\n  prevTpl: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" tabindex=\"-1\"><path d=\"M15 3l-9 9 9 9\"/></svg>',\n  nextTpl: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" tabindex=\"-1\"><path d=\"M9 3l9 9-9 9\"/></svg>',\n\n  classNames: {\n    main: \"carousel__nav\",\n    button: \"carousel__button\",\n\n    next: \"is-next\",\n    prev: \"is-prev\",\n  },\n};\n\nexport class Navigation {\n  constructor(carousel) {\n    this.$container = null;\n\n    this.$prev = null;\n    this.$next = null;\n\n    this.carousel = carousel;\n\n    this.onRefresh = this.onRefresh.bind(this);\n  }\n\n  /**\n   * Shortcut to get option for this plugin\n   * @param {String} name option name\n   * @returns option value\n   */\n  option(name) {\n    return this.carousel.option(`Navigation.${name}`);\n  }\n\n  /**\n   * Creates and returns new button element with default class names and click event\n   * @param {String} type\n   */\n  createButton(type) {\n    const $btn = document.createElement(\"button\");\n\n    $btn.setAttribute(\"title\", this.carousel.localize(`{{${type.toUpperCase()}}}`));\n\n    const classNames = this.option(\"classNames.button\") + \" \" + this.option(`classNames.${type}`);\n\n    $btn.classList.add(...classNames.split(\" \"));\n    $btn.setAttribute(\"tabindex\", \"0\");\n    $btn.innerHTML = this.carousel.localize(this.option(`${type}Tpl`));\n\n    $btn.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.carousel[`slide${type === \"next\" ? \"Next\" : \"Prev\"}`]();\n    });\n\n    return $btn;\n  }\n\n  /**\n   * Build necessary DOM elements\n   */\n  build() {\n    if (!this.$container) {\n      this.$container = document.createElement(\"div\");\n      this.$container.classList.add(this.option(\"classNames.main\"));\n\n      this.carousel.$container.appendChild(this.$container);\n    }\n\n    if (!this.$next) {\n      this.$next = this.createButton(\"next\");\n\n      this.$container.appendChild(this.$next);\n    }\n\n    if (!this.$prev) {\n      this.$prev = this.createButton(\"prev\");\n\n      this.$container.appendChild(this.$prev);\n    }\n  }\n\n  /**\n   *  Process carousel `refresh` and `change` events to enable/disable buttons if needed\n   */\n  onRefresh() {\n    const pageCount = this.carousel.pages.length;\n\n    if (\n      pageCount <= 1 ||\n      (pageCount > 1 &&\n        this.carousel.elemDimWidth < this.carousel.wrapDimWidth &&\n        !Number.isInteger(this.carousel.option(\"slidesPerPage\")))\n    ) {\n      this.cleanup();\n\n      return;\n    }\n\n    this.build();\n\n    this.$prev.removeAttribute(\"disabled\");\n    this.$next.removeAttribute(\"disabled\");\n\n    if (this.carousel.option(\"infiniteX\", this.carousel.option(\"infinite\"))) {\n      return;\n    }\n\n    if (this.carousel.page <= 0) {\n      this.$prev.setAttribute(\"disabled\", \"\");\n    }\n\n    if (this.carousel.page >= pageCount - 1) {\n      this.$next.setAttribute(\"disabled\", \"\");\n    }\n  }\n\n  cleanup() {\n    if (this.$prev) {\n      this.$prev.remove();\n    }\n\n    this.$prev = null;\n\n    if (this.$next) {\n      this.$next.remove();\n    }\n\n    this.$next = null;\n\n    if (this.$container) {\n      this.$container.remove();\n    }\n\n    this.$container = null;\n  }\n\n  attach() {\n    this.carousel.on(\"refresh change\", this.onRefresh);\n  }\n\n  detach() {\n    this.carousel.off(\"refresh change\", this.onRefresh);\n\n    this.cleanup();\n  }\n}\n\n// Expose defaults\nNavigation.defaults = defaults;\n","const defaults = {\n  friction: 0.92,\n};\n\nexport class Sync {\n  constructor(carousel) {\n    this.carousel = carousel;\n\n    this.selectedIndex = null;\n    this.friction = 0;\n\n    this.onNavReady = this.onNavReady.bind(this);\n    this.onNavClick = this.onNavClick.bind(this);\n    this.onNavCreateSlide = this.onNavCreateSlide.bind(this);\n\n    this.onTargetChange = this.onTargetChange.bind(this);\n  }\n\n  /**\n   * Make this one as main carousel and selected carousel as navigation\n   * @param {Object} nav Carousel\n   */\n  addAsTargetFor(nav) {\n    this.target = this.carousel;\n    this.nav = nav;\n\n    this.attachEvents();\n  }\n\n  /**\n   * Make this one as navigation carousel for selected carousel\n   * @param {Object} target\n   */\n  addAsNavFor(target) {\n    this.target = target;\n    this.nav = this.carousel;\n\n    this.attachEvents();\n  }\n\n  /**\n   * Attach event listeners on both carousels\n   */\n  attachEvents() {\n    this.nav.options.initialSlide = this.target.options.initialPage;\n\n    this.nav.on(\"ready\", this.onNavReady);\n    this.nav.on(\"createSlide\", this.onNavCreateSlide);\n    this.nav.on(\"Panzoom.click\", this.onNavClick);\n\n    this.target.on(\"change\", this.onTargetChange);\n    this.target.on(\"Panzoom.afterUpdate\", this.onTargetChange);\n  }\n\n  /**\n   * Process main carousel `ready` event; bind events and set initial page\n   */\n  onNavReady() {\n    this.onTargetChange(true);\n  }\n\n  /**\n   * Process main carousel `click` event\n   * @param {Object} panzoom\n   * @param {Object} event\n   */\n  onNavClick(carousel, panzoom, event) {\n    const clickedNavSlide = event.target.closest(\".carousel__slide\");\n\n    if (!clickedNavSlide) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const selectedNavIndex = parseInt(clickedNavSlide.dataset.index, 10);\n    const selectedSyncPage = this.target.findPageForSlide(selectedNavIndex);\n\n    if (this.target.page !== selectedSyncPage) {\n      this.target.slideTo(selectedSyncPage, { friction: this.friction });\n    }\n\n    this.markSelectedSlide(selectedNavIndex);\n  }\n\n  /**\n   * Process main carousel `createSlide` event\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onNavCreateSlide(carousel, slide) {\n    if (slide.index === this.selectedIndex) {\n      this.markSelectedSlide(slide.index);\n    }\n  }\n\n  /**\n   * Process target carousel `change` event\n   * @param {Object} target\n   */\n  onTargetChange() {\n    const targetIndex = this.target.pages[this.target.page].indexes[0];\n    const selectedNavPage = this.nav.findPageForSlide(targetIndex);\n\n    this.nav.slideTo(selectedNavPage);\n\n    this.markSelectedSlide(targetIndex);\n  }\n\n  /**\n   * Toggle classname for slides that marks currently selected slides\n   * @param {Number} selectedIndex\n   */\n  markSelectedSlide(selectedIndex) {\n    this.selectedIndex = selectedIndex;\n\n    [...this.nav.slides].filter((slide) => slide.$el && slide.$el.classList.remove(\"is-nav-selected\"));\n\n    const slide = this.nav.slides[selectedIndex];\n\n    if (slide && slide.$el) slide.$el.classList.add(\"is-nav-selected\");\n  }\n\n  attach(carousel) {\n    const sync = carousel.options.Sync;\n\n    if (!sync.target && !sync.nav) {\n      return;\n    }\n\n    if (sync.target) {\n      this.addAsNavFor(sync.target);\n    } else if (sync.nav) {\n      this.addAsTargetFor(sync.nav);\n    }\n\n    this.friction = sync.friction;\n  }\n\n  detach() {\n    if (this.nav) {\n      this.nav.off(\"ready\", this.onNavReady);\n      this.nav.off(\"Panzoom.click\", this.onNavClick);\n      this.nav.off(\"createSlide\", this.onNavCreateSlide);\n    }\n\n    if (this.target) {\n      this.target.off(\"Panzoom.afterUpdate\", this.onTargetChange);\n      this.target.off(\"change\", this.onTargetChange);\n    }\n  }\n}\n\n// Expose defaults\nSync.defaults = defaults;\n","import { Navigation } from \"./Navigation/Navigation.js\";\nimport { Dots } from \"./Dots/Dots.js\";\nimport { Sync } from \"./Sync/Sync.js\";\n\nexport const Plugins = { Navigation, Dots, Sync };\n","import { extend } from \"../shared/utils/extend.js\";\nimport { canUseDOM } from \"../shared/utils/canUseDOM.js\";\n\nimport { Base } from \"../shared/Base/Base.js\";\n\nimport { Carousel } from \"../Carousel/Carousel.js\";\n\nimport { Plugins } from \"./plugins/index.js\";\n\n// Default language\nimport en from \"./l10n/en.js\";\n\n// Default settings\nconst defaults = {\n  // Index of active slide on the start\n  startIndex: 0,\n\n  // Number of slides to preload before and after active slide\n  preload: 1,\n\n  // Should navigation be infinite\n  infinite: true,\n\n  // Class name to be applied to the content to reveal it\n  showClass: \"fancybox-zoomInUp\", // \"fancybox-fadeIn\" | \"fancybox-zoomInUp\" | false\n\n  // Class name to be applied to the content to hide it\n  hideClass: \"fancybox-fadeOut\", // \"fancybox-fadeOut\" | \"fancybox-zoomOutDown\" | false\n\n  // Should backdrop and UI elements fade in/out on start/close\n  animated: true,\n\n  // If browser scrollbar should be hidden\n  hideScrollbar: true,\n\n  // Element containing main structure\n  parentEl: null,\n\n  // Custom class name or multiple space-separated class names for the container\n  mainClass: null,\n\n  // Set focus on first focusable element after displaying content\n  autoFocus: true,\n\n  // Trap focus inside Fancybox\n  trapFocus: true,\n\n  // Set focus back to trigger element after closing Fancybox\n  placeFocusBack: true,\n\n  // Action to take when the user clicks on the backdrop\n  click: \"close\", // \"close\" | \"next\" | null\n\n  // Position of the close button - over the content or at top right corner of viewport\n  closeButton: \"inside\", // \"inside\" | \"outside\"\n\n  // Allow user to drag content up/down to close instance\n  dragToClose: true,\n\n  // Enable keyboard navigation\n  keyboard: {\n    Escape: \"close\",\n    Delete: \"close\",\n    Backspace: \"close\",\n    PageUp: \"next\",\n    PageDown: \"prev\",\n    ArrowUp: \"next\",\n    ArrowDown: \"prev\",\n    ArrowRight: \"next\",\n    ArrowLeft: \"prev\",\n  },\n\n  // HTML templates for various elements\n  template: {\n    // Close button icon\n    closeButton:\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" tabindex=\"-1\"><path d=\"M20 20L4 4m16 0L4 20\"/></svg>',\n    // Loading indicator icon\n    spinner:\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"25 25 50 50\" tabindex=\"-1\"><circle cx=\"50\" cy=\"50\" r=\"20\"/></svg>',\n\n    // Main container element\n    main: null,\n  },\n\n  /* Note: If the `template.main` option is not provided, the structure is generated as follows by default:\n  <div class=\"fancybox__container\" role=\"dialog\" aria-modal=\"true\" aria-hidden=\"true\" aria-label=\"{{MODAL}}\" tabindex=\"-1\">\n    <div class=\"fancybox__backdrop\"></div>\n    <div class=\"fancybox__carousel\"></div>\n  </div>\n  */\n\n  // Localization of strings\n  l10n: en,\n};\n\n// Object that contains all active instances of Fancybox\nconst instances = {};\n\n// Number of Fancybox instances created, it is used to generate new instance \"id\"\nlet called = 0;\n\nclass Fancybox extends Base {\n  /**\n   * Fancybox constructor\n   * @constructs Fancybox\n   * @param {Object} [options] - Options for Fancybox\n   */\n  constructor(items, options = {}) {\n    super(extend(true, {}, defaults, options));\n\n    this.bindHandlers();\n\n    this.state = \"init\";\n\n    this.setItems(items);\n\n    this.attachPlugins(Fancybox.Plugins);\n\n    // \"init\" event marks the start of initialization and is available to plugins\n    this.trigger(\"init\");\n\n    if (this.option(\"hideScrollbar\") === true) {\n      this.hideScrollbar();\n    }\n\n    this.initLayout();\n\n    this.initCarousel();\n\n    this.attachEvents();\n\n    instances[this.id] = this;\n\n    // \"prepare\" event will trigger the creation of additional layout elements, such as thumbnails and toolbar\n    this.trigger(\"prepare\");\n\n    this.state = \"ready\";\n\n    // \"ready\" event will trigger the content to load\n    this.trigger(\"ready\");\n\n    // Reveal container\n    this.$container.setAttribute(\"aria-hidden\", \"false\");\n\n    // Focus on the first focus element in this instance\n    if (this.option(\"trapFocus\")) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Bind event handlers for referencability\n   */\n  bindHandlers() {\n    for (const methodName of [\n      \"onMousedown\",\n      \"onKeydown\",\n      \"onClick\",\n\n      \"onFocus\",\n\n      \"onCreateSlide\",\n\n      \"onTouchMove\",\n      \"onTouchEnd\",\n\n      \"onTransform\",\n    ]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n  }\n\n  /**\n   * Set up a functions that will be called whenever the specified event is delivered\n   */\n  attachEvents() {\n    document.addEventListener(\"mousedown\", this.onMousedown);\n    document.addEventListener(\"keydown\", this.onKeydown, true);\n\n    // Trap keyboard focus inside of the modal\n    if (this.option(\"trapFocus\")) {\n      document.addEventListener(\"focus\", this.onFocus, true);\n    }\n\n    this.$container.addEventListener(\"click\", this.onClick);\n  }\n\n  /**\n   * Removes previously registered event listeners\n   */\n  detachEvents() {\n    document.removeEventListener(\"mousedown\", this.onMousedown);\n    document.removeEventListener(\"keydown\", this.onKeydown, true);\n\n    document.removeEventListener(\"focus\", this.onFocus, true);\n\n    this.$container.removeEventListener(\"click\", this.onClick);\n  }\n\n  /**\n   * Initialize layout; create main container, backdrop nd layout for main carousel\n   */\n  initLayout() {\n    this.$root = this.option(\"parentEl\") || document.body;\n\n    // Container\n    let mainTemplate = this.option(\"template.main\");\n\n    if (mainTemplate) {\n      this.$root.insertAdjacentHTML(\"beforeend\", this.localize(mainTemplate));\n\n      this.$container = this.$root.querySelector(\".fancybox__container\");\n    }\n\n    if (!this.$container) {\n      this.$container = document.createElement(\"div\");\n      this.$root.appendChild(this.$container);\n    }\n\n    // Normally we would not need this, but Safari does not support `preventScroll:false` option for `focus` method\n    // and that causes layout issues\n    this.$container.onscroll = () => {\n      this.$container.scrollLeft = 0;\n      return false;\n    };\n\n    Object.entries({\n      class: \"fancybox__container\",\n      role: \"dialog\",\n      tabIndex: \"-1\",\n      \"aria-modal\": \"true\",\n      \"aria-hidden\": \"true\",\n      \"aria-label\": this.localize(\"{{MODAL}}\"),\n    }).forEach((args) => this.$container.setAttribute(...args));\n\n    if (this.option(\"animated\")) {\n      this.$container.classList.add(\"is-animated\");\n    }\n\n    // Backdrop\n    this.$backdrop = this.$container.querySelector(\".fancybox__backdrop\");\n\n    if (!this.$backdrop) {\n      this.$backdrop = document.createElement(\"div\");\n      this.$backdrop.classList.add(\"fancybox__backdrop\");\n\n      this.$container.appendChild(this.$backdrop);\n    }\n\n    // Carousel\n    this.$carousel = this.$container.querySelector(\".fancybox__carousel\");\n\n    if (!this.$carousel) {\n      this.$carousel = document.createElement(\"div\");\n      this.$carousel.classList.add(\"fancybox__carousel\");\n\n      this.$container.appendChild(this.$carousel);\n    }\n\n    // Make instance reference accessible\n    this.$container.Fancybox = this;\n\n    // Make sure the container has an ID\n    this.id = this.$container.getAttribute(\"id\");\n\n    if (!this.id) {\n      this.id = this.options.id || ++called;\n      this.$container.setAttribute(\"id\", \"fancybox-\" + this.id);\n    }\n\n    // Add custom class name to main element\n    const mainClass = this.options.mainClass;\n\n    if (mainClass) {\n      this.$container.classList.add(...mainClass.split(\" \"));\n    }\n\n    // Add class name for <html> element\n    document.documentElement.classList.add(\"with-fancybox\");\n\n    this.trigger(\"initLayout\");\n\n    return this;\n  }\n\n  /**\n   * Prepares slides for the corousel\n   * @returns {Array} Slides\n   */\n  setItems(items) {\n    const slides = [];\n\n    for (const slide of items) {\n      const $trigger = slide.$trigger;\n\n      if ($trigger) {\n        const dataset = $trigger.dataset || {};\n\n        slide.src = dataset.src || $trigger.getAttribute(\"href\") || slide.src;\n        slide.type = dataset.type || slide.type;\n\n        // Support items without `src`, e.g., when `data-fancybox` attribute added directly to `<img>` element\n        if (!slide.src && $trigger instanceof HTMLImageElement) {\n          slide.src = $trigger.currentSrc || slide.$trigger.src;\n        }\n      }\n\n      // Check for thumbnail element\n      let $thumb = slide.$thumb;\n\n      if (!$thumb) {\n        let origTarget = slide.$trigger && slide.$trigger.origTarget;\n\n        if (origTarget) {\n          if (origTarget instanceof HTMLImageElement) {\n            $thumb = origTarget;\n          } else {\n            $thumb = origTarget.querySelector(\"img\");\n          }\n        }\n\n        if (!$thumb && slide.$trigger) {\n          $thumb = slide.$trigger instanceof HTMLImageElement ? slide.$trigger : slide.$trigger.querySelector(\"img\");\n        }\n      }\n\n      slide.$thumb = $thumb || null;\n\n      // Get thumbnail image source\n      let thumb = slide.thumb;\n\n      if (!thumb && $thumb) {\n        thumb = $thumb.currentSrc || $thumb.src;\n\n        if (!thumb && $thumb.dataset) {\n          thumb = $thumb.dataset.lazySrc || $thumb.dataset.src;\n        }\n      }\n\n      // Assume we have image, then use it as thumbnail\n      if (!thumb && slide.type === \"image\") {\n        thumb = slide.src;\n      }\n\n      slide.thumb = thumb || null;\n\n      // Add empty caption to make things simpler\n      slide.caption = slide.caption || \"\";\n\n      slides.push(slide);\n    }\n\n    this.items = slides;\n  }\n\n  /**\n   * Initialize main Carousel that will be used to display the content\n   * @param {Array} slides\n   */\n  initCarousel() {\n    this.Carousel = new Carousel(\n      this.$carousel,\n      extend(\n        true,\n        {},\n        {\n          prefix: \"\",\n\n          classNames: {\n            viewport: \"fancybox__viewport\",\n            track: \"fancybox__track\",\n            slide: \"fancybox__slide\",\n          },\n\n          textSelection: true,\n          preload: this.option(\"preload\"),\n\n          friction: 0.88,\n\n          slides: this.items,\n          initialPage: this.options.startIndex,\n          slidesPerPage: 1,\n\n          infiniteX: this.option(\"infinite\"),\n          infiniteY: true,\n\n          l10n: this.option(\"l10n\"),\n\n          Dots: false,\n          Navigation: {\n            classNames: {\n              main: \"fancybox__nav\",\n              button: \"carousel__button\",\n\n              next: \"is-next\",\n              prev: \"is-prev\",\n            },\n          },\n\n          Panzoom: {\n            textSelection: true,\n\n            panOnlyZoomed: () => {\n              return (\n                this.Carousel && this.Carousel.pages && this.Carousel.pages.length < 2 && !this.options.dragToClose\n              );\n            },\n\n            lockAxis: () => {\n              if (this.Carousel) {\n                let rez = \"x\";\n\n                if (this.options.dragToClose) {\n                  rez += \"y\";\n                }\n\n                return rez;\n              }\n            },\n          },\n\n          on: {\n            \"*\": (name, ...details) => this.trigger(`Carousel.${name}`, ...details),\n            init: (carousel) => (this.Carousel = carousel),\n            createSlide: this.onCreateSlide,\n          },\n        },\n\n        this.option(\"Carousel\")\n      )\n    );\n\n    if (this.option(\"dragToClose\")) {\n      this.Carousel.Panzoom.on({\n        // Stop further touch event handling if content is scaled\n        touchMove: this.onTouchMove,\n\n        // Update backdrop opacity depending on vertical distance\n        afterTransform: this.onTransform,\n\n        // Close instance if drag distance exceeds limit\n        touchEnd: this.onTouchEnd,\n      });\n    }\n\n    this.trigger(\"initCarousel\");\n\n    return this;\n  }\n\n  /**\n   * Process `createSlide` event to create caption element inside new slide\n   */\n  onCreateSlide(carousel, slide) {\n    let caption = slide.caption || \"\";\n\n    if (typeof this.options.caption === \"function\") {\n      caption = this.options.caption.call(this, this, this.Carousel, slide);\n    }\n\n    if (typeof caption === \"string\" && caption.length) {\n      const $caption = document.createElement(\"div\");\n      const id = `fancybox__caption_${this.id}_${slide.index}`;\n\n      $caption.className = \"fancybox__caption\";\n      $caption.innerHTML = caption;\n      $caption.setAttribute(\"id\", id);\n\n      slide.$caption = slide.$el.appendChild($caption);\n\n      slide.$el.classList.add(\"has-caption\");\n      slide.$el.setAttribute(\"aria-labelledby\", id);\n    }\n  }\n\n  /**\n   * Handle focus event\n   * @param {Event} event - Focus event\n   */\n  onFocus(event) {\n    this.focus(event);\n  }\n\n  /**\n   * Handle click event on the container\n   * @param {Event} event - Click event\n   */\n  onClick(event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Skip if clicked inside content area\n    if (event.target.closest(\".fancybox__content\")) {\n      return;\n    }\n\n    // Skip if text is selected\n    if (getSelection().toString().length) {\n      return;\n    }\n\n    if (this.trigger(\"click\", event) === false) {\n      return;\n    }\n\n    const action = this.option(\"click\");\n\n    switch (action) {\n      case \"close\":\n        this.close();\n        break;\n      case \"next\":\n        this.next();\n        break;\n    }\n  }\n\n  /**\n   * Handle panzoom `touchMove` event; Disable dragging if content of current slide is scaled\n   */\n  onTouchMove() {\n    const panzoom = this.getSlide().Panzoom;\n\n    return panzoom && panzoom.content.scale !== 1 ? false : true;\n  }\n\n  /**\n   * Handle panzoom `touchEnd` event; close when quick flick up/down is detected\n   * @param {Object} panzoom - Panzoom instance\n   */\n  onTouchEnd(panzoom) {\n    const distanceY = panzoom.dragOffset.y;\n\n    if (Math.abs(distanceY) >= 150 || (Math.abs(distanceY) >= 35 && panzoom.dragOffset.time < 350)) {\n      if (this.option(\"hideClass\")) {\n        this.getSlide().hideClass = `fancybox-throwOut${panzoom.content.y < 0 ? \"Up\" : \"Down\"}`;\n      }\n\n      this.close();\n    } else if (panzoom.lockAxis === \"y\") {\n      panzoom.panTo({ y: 0 });\n    }\n  }\n\n  /**\n   * Handle `afterTransform` event; change backdrop opacity based on current y position of panzoom\n   * @param {Object} panzoom - Panzoom instance\n   */\n  onTransform(panzoom) {\n    const $backdrop = this.$backdrop;\n\n    if ($backdrop) {\n      const yPos = Math.abs(panzoom.content.y);\n      const opacity = yPos < 1 ? \"\" : Math.max(0.33, Math.min(1, 1 - (yPos / panzoom.content.fitHeight) * 1.5));\n\n      this.$container.style.setProperty(\"--fancybox-ts\", opacity ? \"0s\" : \"\");\n      this.$container.style.setProperty(\"--fancybox-opacity\", opacity);\n    }\n  }\n\n  /**\n   * Handle `mousedown` event to mark that the mouse is in use\n   */\n  onMousedown() {\n    document.body.classList.add(\"is-using-mouse\");\n  }\n\n  /**\n   * Handle `keydown` event; trap focus\n   * @param {Event} event Keydown event\n   */\n  onKeydown(event) {\n    if (Fancybox.getInstance().id !== this.id) {\n      return;\n    }\n\n    document.body.classList.remove(\"is-using-mouse\");\n\n    const key = event.key;\n    const keyboard = this.option(\"keyboard\");\n\n    if (!keyboard || event.ctrlKey || event.altKey || event.shiftKey) {\n      return;\n    }\n\n    const classList = document.activeElement && document.activeElement.classList;\n    const isUIElement = classList && classList.contains(\"carousel__button\");\n\n    // Allow to close using Escape button\n    if (key !== \"Escape\" && !isUIElement) {\n      let ignoreElements =\n        event.target.isContentEditable ||\n        [\"BUTTON\", \"TEXTAREA\", \"OPTION\", \"INPUT\", \"SELECT\", \"VIDEO\"].indexOf(event.target.nodeName) !== -1;\n\n      if (ignoreElements) {\n        return;\n      }\n    }\n\n    if (this.trigger(\"keydown\", key, event) === false) {\n      return;\n    }\n\n    const action = keyboard[key];\n\n    if (typeof this[action] === \"function\") {\n      this[action]();\n    }\n  }\n\n  /**\n   * Get the active slide. This will be the first slide from the current page of the main carousel.\n   */\n  getSlide() {\n    const carousel = this.Carousel;\n\n    if (!carousel) return null;\n\n    const page = carousel.page === null ? carousel.option(\"initialPage\") : carousel.page;\n    const pages = carousel.pages || [];\n\n    if (pages.length && pages[page]) {\n      return pages[page].slides[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Place focus on the first focusable element inside current slide\n   * @param {Event} [event] - Focus event\n   */\n  focus(event) {\n    const setFocusOn = (node) => {\n      if (!node) {\n        return;\n      }\n\n      Fancybox.ignoreFocusChange = true;\n\n      try {\n        if (node.setActive) {\n          // IE/Edge\n          node.setActive();\n        } else if (Fancybox.preventScrollSupported) {\n          // Modern browsers\n          node.focus({ preventScroll: true });\n        } else {\n          // Safari\n          node.focus();\n        }\n      } catch (e) {}\n\n      Fancybox.ignoreFocusChange = false;\n    };\n\n    const FOCUSABLE_ELEMENTS = [\n      \"a[href]\",\n      \"area[href]\",\n      'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n      \"select:not([disabled]):not([aria-hidden])\",\n      \"textarea:not([disabled]):not([aria-hidden])\",\n      \"button:not([disabled]):not([aria-hidden])\",\n      \"iframe\",\n      \"object\",\n      \"embed\",\n      \"video\",\n      \"audio\",\n      \"[contenteditable]\",\n      '[tabindex]:not([tabindex^=\"-\"]):not([disabled]):not([aria-hidden])',\n    ];\n\n    if (Fancybox.ignoreFocusChange) {\n      return;\n    }\n\n    if ([\"init\", \"closing\", \"customClosing\", \"destroy\"].indexOf(this.state) > -1) {\n      return;\n    }\n\n    const $currentSlide = this.getSlide().$el;\n\n    if (!$currentSlide) {\n      return;\n    }\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    const allFocusableElems = Array.from(this.$container.querySelectorAll(FOCUSABLE_ELEMENTS));\n\n    let enabledElems = [this.$container];\n    let $firstEl;\n\n    for (let node of allFocusableElems) {\n      const isInsideSlide = $currentSlide.contains(node);\n\n      // Enable element if it's visible and is inside current slide or\n      // not inside main carousel , e.g., not inside  previous/next slide, but located, for example, inside the toolbar\n      if (node.offsetParent && (isInsideSlide || !this.Carousel.$viewport.contains(node))) {\n        enabledElems.push(node);\n\n        if (node.dataset.origTabindex !== undefined) {\n          node.tabIndex = node.dataset.tabindex;\n          node.removeAttribute(\"data-tabindex\");\n        }\n\n        if (node.hasAttribute(\"autoFocus\") || (!$firstEl && isInsideSlide)) {\n          $firstEl = node;\n        }\n      } else {\n        node.dataset.origTabindex =\n          node.dataset.origTabindex === undefined ? node.getAttribute(\"tabindex\") : node.dataset.origTabindex;\n\n        node.tabIndex = -1;\n      }\n    }\n\n    if (enabledElems.indexOf(document.activeElement) > -1) {\n      this.lastFocus = document.activeElement;\n      return;\n    }\n\n    if (!event) {\n      setFocusOn($firstEl || enabledElems[0]);\n      return;\n    }\n\n    if (!$currentSlide.contains(document.activeElement)) {\n      if (this.lastFocus === enabledElems[1]) {\n        setFocusOn(enabledElems[enabledElems.length - 1]);\n      } else {\n        let idx = enabledElems.indexOf(this.lastFocus);\n\n        if (idx < enabledElems.length - 2) {\n          setFocusOn(enabledElems[idx + 1]);\n        } else {\n          setFocusOn(enabledElems[0]);\n        }\n      }\n\n      this.lastFocus = document.activeElement;\n    }\n  }\n\n  /**\n   * Hide vertical page scrollbar and adjust right padding value of `body` element to prevent content from shifting\n   * (otherwise the `body` element may become wider and the content may expand horizontally).\n   */\n  hideScrollbar() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    const scrollbarWidth = window.innerWidth - document.documentElement.getBoundingClientRect().width;\n    const id = \"fancybox-style-noscroll\";\n\n    let $style = document.getElementById(id);\n\n    if ($style) {\n      return;\n    }\n\n    if (scrollbarWidth > 0) {\n      $style = document.createElement(\"style\");\n\n      $style.id = id;\n      $style.type = \"text/css\";\n      $style.innerHTML = `.compensate-for-scrollbar {padding-right: ${scrollbarWidth}px;}`;\n\n      document.getElementsByTagName(\"head\")[0].appendChild($style);\n\n      document.body.classList.add(\"compensate-for-scrollbar\");\n    }\n  }\n\n  /**\n   * Stop hiding vertical page scrollbar\n   */\n  revealScrollbar() {\n    document.body.classList.remove(\"compensate-for-scrollbar\");\n\n    const el = document.getElementById(\"fancybox-style-noscroll\");\n\n    if (el) {\n      el.remove();\n    }\n  }\n\n  /**\n   * Remove content for given slide\n   * @param {Object} slide - Carousel slide\n   */\n  clearContent(slide) {\n    // * Clear previously added content and class name\n    this.Carousel.trigger(\"removeSlide\", slide);\n\n    if (slide.$content) {\n      slide.$content.remove();\n      slide.$content = null;\n    }\n\n    if (slide.$closeButton) {\n      slide.$closeButton.remove();\n      slide.$closeButton = null;\n    }\n\n    if (slide._className) {\n      slide.$el.classList.remove(slide._className);\n    }\n  }\n\n  /**\n   * Set new content for given slide\n   * @param {Object} slide - Carousel slide\n   * @param {HTMLElement|String} html - HTML element or string containing HTML code\n   * @param {Object} [opts] - Options\n   */\n  setContent(slide, html, opts = {}) {\n    let $content;\n\n    const $el = slide.$el;\n\n    if (html instanceof HTMLElement) {\n      if ([\"img\", \"iframe\", \"video\", \"audio\"].indexOf(html.nodeName.toLowerCase()) > -1) {\n        $content = document.createElement(\"div\");\n        $content.appendChild(html);\n      } else {\n        $content = html;\n      }\n    } else {\n      const $fragment = document.createRange().createContextualFragment(html);\n\n      $content = document.createElement(\"div\");\n      $content.appendChild($fragment);\n    }\n\n    if (slide.filter && !slide.error) {\n      $content = $content.querySelector(slide.filter);\n    }\n\n    if (!($content instanceof Element)) {\n      this.setError(slide, \"{{ELEMENT_NOT_FOUND}}\");\n\n      return;\n    }\n\n    // * Add class name indicating content type, for example `has-image`\n    slide._className = `has-${opts.suffix || slide.type || \"unknown\"}`;\n\n    $el.classList.add(slide._className);\n\n    // * Set content\n    $content.classList.add(\"fancybox__content\");\n\n    // Make sure that content is not hidden and will be visible\n    if ($content.style.display === \"none\" || getComputedStyle($content).getPropertyValue(\"display\") === \"none\") {\n      $content.style.display = slide.display || this.option(\"defaultDisplay\") || \"flex\";\n    }\n\n    if (slide.id) {\n      $content.setAttribute(\"id\", slide.id);\n    }\n\n    slide.$content = $content;\n\n    $el.prepend($content);\n\n    this.manageCloseButton(slide);\n\n    if (slide.state !== \"loading\") {\n      this.revealContent(slide);\n    }\n\n    return $content;\n  }\n\n  /**\n   * Create close button if needed\n   * @param {Object} slide\n   */\n  manageCloseButton(slide) {\n    const position = slide.closeButton === undefined ? this.option(\"closeButton\") : slide.closeButton;\n\n    if (!position || (position === \"top\" && this.$closeButton)) {\n      return;\n    }\n\n    const $btn = document.createElement(\"button\");\n\n    $btn.classList.add(\"carousel__button\", \"is-close\");\n    $btn.setAttribute(\"title\", this.options.l10n.CLOSE);\n    $btn.innerHTML = this.option(\"template.closeButton\");\n\n    $btn.addEventListener(\"click\", (e) => this.close(e));\n\n    if (position === \"inside\") {\n      // Remove existing one to avoid scope issues\n      if (slide.$closeButton) {\n        slide.$closeButton.remove();\n      }\n\n      slide.$closeButton = slide.$content.appendChild($btn);\n    } else {\n      this.$closeButton = this.$container.insertBefore($btn, this.$container.firstChild);\n    }\n  }\n\n  /**\n   * Make content visible for given slide and optionally start CSS animation\n   * @param {Object} slide - Carousel slide\n   */\n  revealContent(slide) {\n    this.trigger(\"reveal\", slide);\n\n    slide.$content.style.visibility = \"\";\n\n    // Add CSS class name that reveals content (default animation is \"fadeIn\")\n    let showClass = false;\n\n    if (\n      !(\n        slide.error ||\n        slide.state === \"loading\" ||\n        this.Carousel.prevPage !== null ||\n        slide.index !== this.options.startIndex\n      )\n    ) {\n      showClass = slide.showClass === undefined ? this.option(\"showClass\") : slide.showClass;\n    }\n\n    if (!showClass) {\n      this.done(slide);\n\n      return;\n    }\n\n    slide.state = \"animating\";\n\n    this.animateCSS(slide.$content, showClass, () => {\n      this.done(slide);\n    });\n  }\n\n  /**\n   * Add class name to given HTML element and wait for `animationend` event to execute callback\n   * @param {HTMLElement} $el\n   * @param {String} className\n   * @param {Function} callback - A callback to run\n   */\n  animateCSS($element, className, callback) {\n    if ($element) {\n      $element.dispatchEvent(new CustomEvent(\"animationend\", { bubbles: true, cancelable: true }));\n    }\n\n    if (!$element || !className) {\n      if (typeof callback === \"function\") {\n        callback();\n      }\n\n      return;\n    }\n\n    const handleAnimationEnd = function (event) {\n      if (event.currentTarget === this) {\n        $element.removeEventListener(\"animationend\", handleAnimationEnd);\n\n        if (callback) {\n          callback();\n        }\n\n        $element.classList.remove(className);\n      }\n    };\n\n    $element.addEventListener(\"animationend\", handleAnimationEnd);\n    $element.classList.add(className);\n  }\n\n  /**\n   * Mark given slide as `done`, e.g., content is loaded and displayed completely\n   * @param {Object} slide - Carousel slide\n   */\n  done(slide) {\n    slide.state = \"done\";\n\n    this.trigger(\"done\", slide);\n\n    // Trigger focus for current slide (and ignore preloaded slides)\n    const currentSlide = this.getSlide();\n\n    if (currentSlide && slide.index === currentSlide.index && this.option(\"autoFocus\")) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Set error message as slide content\n   * @param {Object} slide - Carousel slide\n   * @param {String} message - Error message, can contain HTML code and template variables\n   */\n  setError(slide, message) {\n    slide.error = message;\n\n    this.hideLoading(slide);\n    this.clearContent(slide);\n\n    // Create new content\n    const div = document.createElement(\"div\");\n    div.classList.add(\"fancybox-error\");\n    div.innerHTML = this.localize(message || \"<p>{{ERROR}}</p>\");\n\n    this.setContent(slide, div, { suffix: \"error\" });\n  }\n\n  /**\n   * Create loading indicator inside given slide\n   * @param {Object} slide - Carousel slide\n   */\n  showLoading(slide) {\n    slide.state = \"loading\";\n\n    slide.$el.classList.add(\"is-loading\");\n\n    let $spinner = slide.$el.querySelector(\".fancybox__spinner\");\n\n    if ($spinner) {\n      return;\n    }\n\n    $spinner = document.createElement(\"div\");\n\n    $spinner.classList.add(\"fancybox__spinner\");\n    $spinner.innerHTML = this.option(\"template.spinner\");\n\n    $spinner.addEventListener(\"click\", () => {\n      if (!this.Carousel.Panzoom.velocity) this.close();\n    });\n\n    slide.$el.prepend($spinner);\n  }\n\n  /**\n   * Remove loading indicator from given slide\n   * @param {Object} slide - Carousel slide\n   */\n  hideLoading(slide) {\n    const $spinner = slide.$el && slide.$el.querySelector(\".fancybox__spinner\");\n\n    if ($spinner) {\n      $spinner.remove();\n\n      slide.$el.classList.remove(\"is-loading\");\n    }\n\n    if (slide.state === \"loading\") {\n      this.trigger(\"load\", slide);\n\n      slide.state = \"ready\";\n    }\n  }\n\n  /**\n   * Slide carousel to next page\n   */\n  next() {\n    const carousel = this.Carousel;\n\n    if (carousel && carousel.pages.length > 1) {\n      carousel.slideNext();\n    }\n  }\n\n  /**\n   * Slide carousel to previous page\n   */\n  prev() {\n    const carousel = this.Carousel;\n\n    if (carousel && carousel.pages.length > 1) {\n      carousel.slidePrev();\n    }\n  }\n\n  /**\n   * Slide carousel to selected page with optional parameters\n   * Examples:\n   *    Fancybox.getInstance().jumpTo(2);\n   *    Fancybox.getInstance().jumpTo(3, {friction: 0})\n   * @param  {...any} args - Arguments for Carousel `slideTo` method\n   */\n  jumpTo(...args) {\n    if (this.Carousel) this.Carousel.slideTo(...args);\n  }\n\n  /**\n   * Start closing the current instance\n   * @param {Event} [event] - Optional click event\n   */\n  close(event) {\n    if (event) event.preventDefault();\n\n    // First, stop further execution if this instance is already closing\n    // (this can happen if, for example, user clicks close button multiple times really fast)\n    if ([\"closing\", \"customClosing\", \"destroy\"].includes(this.state)) {\n      return;\n    }\n\n    // Allow callbacks and/or plugins to prevent closing\n    if (this.trigger(\"shouldClose\", event) === false) {\n      return;\n    }\n\n    this.state = \"closing\";\n\n    this.Carousel.Panzoom.destroy();\n\n    this.detachEvents();\n\n    this.trigger(\"closing\", event);\n\n    if (this.state === \"destroy\") {\n      return;\n    }\n\n    // Trigger default CSS closing animation for backdrop and interface elements\n    this.$container.setAttribute(\"aria-hidden\", \"true\");\n\n    this.$container.classList.add(\"is-closing\");\n\n    // Clear inactive slides\n    const currentSlide = this.getSlide();\n\n    this.Carousel.slides.forEach((slide) => {\n      if (slide.$content && slide.index !== currentSlide.index) {\n        this.Carousel.trigger(\"removeSlide\", slide);\n      }\n    });\n\n    // Start default closing animation\n    if (this.state === \"closing\") {\n      const hideClass = currentSlide.hideClass === undefined ? this.option(\"hideClass\") : currentSlide.hideClass;\n\n      this.animateCSS(\n        currentSlide.$content,\n        hideClass,\n        () => {\n          this.destroy();\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * Clean up after closing fancybox\n   */\n  destroy() {\n    if (this.state === \"destroy\") {\n      return;\n    }\n\n    this.state = \"destroy\";\n\n    this.trigger(\"destroy\");\n\n    const $trigger = this.option(\"placeFocusBack\") ? this.getSlide().$trigger : null;\n\n    // Destroy Carousel and then detach plugins;\n    // * Note: this order allows plugins to receive `removeSlide` event\n    this.Carousel.destroy();\n\n    this.detachPlugins();\n\n    this.Carousel = null;\n\n    this.options = {};\n    this.events = {};\n\n    this.$container.remove();\n\n    this.$container = this.$backdrop = this.$carousel = null;\n\n    if ($trigger) {\n      // `preventScroll` option is not yet supported by Safari\n      // https://bugs.webkit.org/show_bug.cgi?id=178583\n\n      if (Fancybox.preventScrollSupported) {\n        $trigger.focus({ preventScroll: true });\n      } else {\n        const scrollTop = document.body.scrollTop; // Save position\n        $trigger.focus();\n        document.body.scrollTop = scrollTop;\n      }\n    }\n\n    delete instances[this.id];\n\n    const nextInstance = Fancybox.getInstance();\n\n    if (nextInstance) {\n      nextInstance.focus();\n      return;\n    }\n\n    document.documentElement.classList.remove(\"with-fancybox\");\n    document.body.classList.remove(\"is-using-mouse\");\n\n    this.revealScrollbar();\n  }\n\n  /**\n   * Create new Fancybox instance with provided options\n   * Example:\n   *   Fancybox.show([{ src : 'https://lipsum.app/id/1/300x225' }]);\n   * @param {Array} items - Gallery items\n   * @param {Object} [options] - Optional custom options\n   * @returns {Object} Fancybox instance\n   */\n  static show(items, options = {}) {\n    return new Fancybox(items, options);\n  }\n\n  /**\n   * Starts Fancybox if event target matches any opener or target is `trigger element`\n   * @param {Event} event - Click event\n   * @param {Object} [options] - Optional custom options\n   */\n  static fromEvent(event, options = {}) {\n    //  Allow other scripts to prevent starting fancybox on click\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Don't run if right-click\n    if (event.button && event.button !== 0) {\n      return;\n    }\n\n    // Ignore command/control + click\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    // Support `trigger` element, e.g., start fancybox from different DOM element, for example,\n    // to have one preview image for hidden image gallery\n    let eventTarget = event.target;\n    let triggerGroupName;\n\n    if (\n      eventTarget.matches(\"[data-fancybox-trigger]\") ||\n      (eventTarget = eventTarget.closest(\"[data-fancybox-trigger]\"))\n    ) {\n      triggerGroupName = eventTarget && eventTarget.dataset && eventTarget.dataset.fancyboxTrigger;\n    }\n\n    if (triggerGroupName) {\n      const triggerItems = document.querySelectorAll(`[data-fancybox=\"${triggerGroupName}\"]`);\n      const triggerIndex = parseInt(eventTarget.dataset.fancyboxIndex, 10) || 0;\n\n      eventTarget = triggerItems.length ? triggerItems[triggerIndex] : eventTarget;\n    }\n\n    if (!eventTarget) {\n      eventTarget = event.target;\n    }\n\n    // * Try to find matching openener\n    let matchingOpener;\n    let target;\n\n    Array.from(Fancybox.openers.keys())\n      .reverse()\n      .some((opener) => {\n        target = eventTarget;\n\n        let found = false;\n\n        try {\n          if (target instanceof Element && (typeof opener === \"string\" || opener instanceof String)) {\n            // Chain closest() to event.target to find and return the parent element,\n            // regardless if clicking on the child elements (icon, label, etc)\n            found = target.matches(opener) || (target = target.closest(opener));\n          }\n        } catch (error) {}\n\n        if (found) {\n          event.preventDefault();\n          matchingOpener = opener;\n          return true;\n        }\n\n        return false;\n      });\n\n    let rez = false;\n\n    if (matchingOpener) {\n      options.event = event;\n      options.target = target;\n\n      target.origTarget = event.target;\n\n      rez = Fancybox.fromOpener(matchingOpener, options);\n\n      // Check if the mouse is being used\n      // Waiting for better browser support for `:focus-visible` -\n      // https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n      const nextInstance = Fancybox.getInstance();\n\n      if (nextInstance && nextInstance.state === \"ready\" && event.detail) {\n        document.body.classList.add(\"is-using-mouse\");\n      }\n    }\n\n    return rez;\n  }\n\n  /**\n   * Starts Fancybox using selector\n   * @param {String} opener - Valid CSS selector string\n   * @param {Object} [options] - Optional custom options\n   */\n  static fromOpener(opener, options = {}) {\n    // Callback function called once for each group element that\n    // 1) converts data attributes to boolean or JSON\n    // 2) removes values that could cause issues\n    const mapCallback = function (el) {\n      const falseValues = [\"false\", \"0\", \"no\", \"null\", \"undefined\"];\n      const trueValues = [\"true\", \"1\", \"yes\"];\n\n      const dataset = Object.assign({}, el.dataset);\n      const options = {};\n\n      for (let [key, value] of Object.entries(dataset)) {\n        if (key === \"fancybox\") {\n          continue;\n        }\n\n        if (key === \"width\" || key === \"height\") {\n          options[`_${key}`] = value;\n        } else if (typeof value === \"string\" || value instanceof String) {\n          if (falseValues.indexOf(value) > -1) {\n            options[key] = false;\n          } else if (trueValues.indexOf(options[key]) > -1) {\n            options[key] = true;\n          } else {\n            try {\n              options[key] = JSON.parse(value);\n            } catch (e) {\n              options[key] = value;\n            }\n          }\n        } else {\n          options[key] = value;\n        }\n      }\n\n      if (el instanceof Element) {\n        options.$trigger = el;\n      }\n\n      return options;\n    };\n\n    let items = [],\n      index = options.startIndex || 0,\n      target = options.target || null;\n\n    // Get options\n    options = extend({}, options, Fancybox.openers.get(opener));\n\n    // Get matching nodes\n    const groupAttr = options.groupAttr === undefined ? \"data-fancybox\" : options.groupAttr;\n    const groupValue = groupAttr && target && target.getAttribute(`${groupAttr}`);\n\n    const groupAll = options.groupAll === undefined ? false : options.groupAll;\n\n    if (groupAll || groupValue) {\n      items = [].slice.call(document.querySelectorAll(opener));\n\n      if (!groupAll) {\n        items = items.filter((el) => el.getAttribute(`${groupAttr}`) === groupValue);\n      }\n    } else {\n      items = [target];\n    }\n\n    if (!items.length) {\n      return false;\n    }\n\n    // Exit if current instance is triggered from the same element\n    const currentInstance = Fancybox.getInstance();\n\n    if (currentInstance && items.indexOf(currentInstance.options.$trigger) > -1) {\n      return false;\n    }\n\n    // Index of current item in the gallery\n    index = target ? items.indexOf(target) : index;\n\n    // Convert items in a format supported by fancybox\n    items = items.map(mapCallback);\n\n    // * Create new fancybox instance\n    return new Fancybox(\n      items,\n      extend({}, options, {\n        startIndex: index,\n        $trigger: target,\n      })\n    );\n  }\n\n  /**\n   * Attach a click handler function that starts Fancybox to the selected items, as well as to all future matching elements.\n   * @param {String} selector - Selector that should match trigger elements\n   * @param {Object} [options] - Custom options\n   */\n  static bind(selector, options = {}) {\n    function attachClickEvent() {\n      document.body.addEventListener(\"click\", Fancybox.fromEvent, false);\n    }\n\n    if (!canUseDOM) {\n      return;\n    }\n\n    if (!Fancybox.openers.size) {\n      if (/complete|interactive|loaded/.test(document.readyState)) {\n        attachClickEvent();\n      } else {\n        document.addEventListener(\"DOMContentLoaded\", attachClickEvent);\n      }\n    }\n\n    Fancybox.openers.set(selector, options);\n  }\n\n  /**\n   * Remove the click handler that was attached with `bind()`\n   * @param {String} selector - A selector which should match the one originally passed to .bind()\n   */\n  static unbind(selector) {\n    Fancybox.openers.delete(selector);\n\n    if (!Fancybox.openers.size) {\n      Fancybox.destroy();\n    }\n  }\n\n  /**\n   * Immediately destroy all instances (without closing animation) and clean up all bindings..\n   */\n  static destroy() {\n    let fb;\n\n    while ((fb = Fancybox.getInstance())) {\n      fb.destroy();\n    }\n\n    Fancybox.openers = new Map();\n\n    document.body.removeEventListener(\"click\", Fancybox.fromEvent, false);\n  }\n\n  /**\n   * Retrieve instance by identifier or the top most instance, if identifier is not provided\n   * @param {String|Numeric} [id] - Optional instance identifier\n   */\n  static getInstance(id) {\n    if (id) {\n      return instances[id];\n    }\n\n    const instance = Object.values(instances)\n      .reverse()\n      .find((instance) => {\n        if (![\"closing\", \"customClosing\", \"destroy\"].includes(instance.state)) {\n          return instance;\n        }\n\n        return false;\n      });\n\n    return instance || null;\n  }\n\n  /**\n   * Close all or topmost currently active instance.\n   * @param {boolean} [all] - All or only topmost active instance\n   */\n  static close(all = true) {\n    let instance = null;\n\n    while ((instance = Fancybox.getInstance())) {\n      instance.close();\n\n      if (!all) return;\n    }\n  }\n}\n\n// Expose version\nFancybox.version = \"__VERSION__\";\n\n// Expose defaults\nFancybox.defaults = defaults;\n\n// Expose openers\nFancybox.openers = new Map();\n\n// Add default plugins\nFancybox.Plugins = Plugins;\n\n// Auto init with default options\nFancybox.bind(\"[data-fancybox]\");\n\n// Prepare plugins\nfor (const [key, Plugin] of Object.entries(Fancybox.Plugins || {})) {\n  if (typeof Plugin.create === \"function\") {\n    Plugin.create(Fancybox);\n  }\n}\n\nexport { Fancybox };\n","export default {\r\n  CLOSE: \"Close\",\r\n  NEXT: \"Next\",\r\n  PREV: \"Previous\",\r\n  MODAL: \"You can close this modal content with the ESC key\",\r\n  ERROR: \"Something Went Wrong, Please Try Again Later\",\r\n  IMAGE_ERROR: \"Image Not Found\",\r\n  ELEMENT_NOT_FOUND: \"HTML Element Not Found\",\r\n  AJAX_NOT_FOUND: \"Error Loading AJAX : Not Found\",\r\n  AJAX_FORBIDDEN: \"Error Loading AJAX : Forbidden\",\r\n  IFRAME_ERROR: \"Error Loading Page\",\r\n  TOGGLE_ZOOM: \"Toggle zoom level\",\r\n  TOGGLE_THUMBS: \"Toggle thumbnails\",\r\n  TOGGLE_SLIDESHOW: \"Toggle slideshow\",\r\n  TOGGLE_FULLSCREEN: \"Toggle full-screen mode\",\r\n  DOWNLOAD: \"Download\",\r\n};\r\n","import { canUseDOM } from \"../../../shared/utils/canUseDOM.js\";\n\n/**\n * Helper method to split URL hash into useful pieces\n */\nconst getParsedURL = function () {\n  const hash = window.location.hash.substr(1),\n    tmp = hash.split(\"-\"),\n    index = tmp.length > 1 && /^\\+?\\d+$/.test(tmp[tmp.length - 1]) ? parseInt(tmp.pop(-1), 10) || null : null,\n    slug = tmp.join(\"-\");\n\n  return {\n    hash,\n    slug,\n    index,\n  };\n};\n\nexport class Hash {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n\n    for (const methodName of [\"onChange\", \"onClosing\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.events = {\n      initCarousel: this.onChange,\n      \"Carousel.change\": this.onChange,\n      closing: this.onClosing,\n    };\n\n    this.hasCreatedHistory = false;\n    this.origHash = \"\";\n    this.timer = null;\n  }\n\n  /**\n   * Process `Carousel.ready` and `Carousel.change` events to update URL hash\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   */\n  onChange() {\n    const fancybox = this.fancybox;\n    const carousel = fancybox.Carousel;\n\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    const firstRun = carousel.prevPage === null;\n\n    const slide = fancybox.getSlide();\n\n    const dataset = slide.$trigger && slide.$trigger.dataset;\n\n    const currentHash = window.location.hash.substr(1);\n\n    let newHash = false;\n\n    if (slide.slug) {\n      newHash = slide.slug;\n    } else {\n      let dataAttribute = dataset && dataset.fancybox;\n\n      if (dataAttribute && dataAttribute.length && dataAttribute !== \"true\") {\n        newHash = dataAttribute + (carousel.slides.length > 1 ? \"-\" + (slide.index + 1) : \"\");\n      }\n    }\n\n    if (firstRun) {\n      this.origHash = currentHash !== newHash ? this.origHash : \"\";\n    }\n\n    if (newHash && currentHash !== newHash) {\n      this.timer = setTimeout(() => {\n        try {\n          window.history[firstRun ? \"pushState\" : \"replaceState\"](\n            {},\n            document.title,\n            window.location.pathname + window.location.search + \"#\" + newHash\n          );\n\n          if (firstRun) {\n            this.hasCreatedHistory = true;\n          }\n        } catch (e) {}\n      }, 300);\n    }\n  }\n\n  /**\n   * Process `closing` event to clean up\n   */\n  onClosing() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    // Skip if closing is triggered by pressing  browser back button or by changing hash manually\n    if (this.hasSilentClose === true) {\n      return;\n    }\n\n    // Simply make browser to move back one page in the session history,\n    // if new history entry is successfully created\n    if (!this.hasCreatedHistory) {\n      try {\n        window.history.replaceState(\n          {},\n          document.title,\n          window.location.pathname + window.location.search + (this.origHash ? \"#\" + this.origHash : \"\")\n        );\n\n        return;\n      } catch (e) {}\n    }\n\n    window.history.back();\n  }\n\n  attach(fancybox) {\n    fancybox.on(this.events);\n  }\n\n  detach(fancybox) {\n    fancybox.off(this.events);\n  }\n\n  /**\n   * Start fancybox from current URL hash,\n   * this will be called on page load OR/AND after changing URL hash\n   * @param {Class} Fancybox\n   */\n  static startFromUrl() {\n    if (!Hash.Fancybox || Hash.Fancybox.getInstance()) {\n      return;\n    }\n\n    const { hash, slug, index } = getParsedURL();\n\n    if (!slug) {\n      return;\n    }\n\n    // Support custom slug\n    // ===\n    let selectedElem = document.querySelector(`[data-slug=\"${hash}\"]`);\n\n    if (selectedElem) {\n      selectedElem.dispatchEvent(new CustomEvent(\"click\", { bubbles: true, cancelable: true }));\n    }\n\n    if (Hash.Fancybox.getInstance()) {\n      return;\n    }\n\n    // If elements are not found by custom slug, Use URL hash value as group name\n    // ===\n    const groupElems = document.querySelectorAll(`[data-fancybox=\"${slug}\"]`);\n\n    if (!groupElems.length) {\n      return;\n    }\n\n    if (index === null && groupElems.length === 1) {\n      selectedElem = groupElems[0];\n    } else if (index) {\n      selectedElem = groupElems[index - 1];\n    }\n\n    if (selectedElem) {\n      selectedElem.dispatchEvent(new CustomEvent(\"click\", { bubbles: true, cancelable: true }));\n    }\n  }\n\n  /**\n   * Handle `hash` change, change gallery item to current index or start/close current instance\n   */\n  static onHashChange() {\n    const { slug, index } = getParsedURL();\n\n    const instance = Hash.Fancybox.getInstance();\n\n    if (instance) {\n      // Look if this is inside currently active gallery\n      if (slug) {\n        const carousel = instance.Carousel;\n        /**\n         * Check if URL hash matches `data-slug` value of active element\n         */\n        for (let slide of carousel.slides) {\n          if (slide.slug && slide.slug === slug) {\n            return carousel.slideTo(slide.index);\n          }\n        }\n\n        /**\n         * Check if URL hash matches `data-fancybox` value of active element\n         */\n        const slide = instance.getSlide();\n        const dataset = slide.$trigger && slide.$trigger.dataset;\n\n        if (dataset && dataset.fancybox === slug) {\n          return carousel.slideTo(index - 1);\n        }\n      }\n\n      /**\n       * Close if no matching element found\n       */\n      instance.plugins.Hash.hasSilentClose = true;\n\n      instance.close();\n    }\n\n    /**\n     * Attempt to start\n     */\n\n    Hash.startFromUrl();\n  }\n\n  /**\n   * Add event bindings that will start new Fancybox instance based in the current URL\n   */\n  static create(Fancybox) {\n    Hash.Fancybox = Fancybox;\n\n    function proceed() {\n      window.addEventListener(\"hashchange\", Hash.onHashChange, false);\n\n      Hash.startFromUrl();\n    }\n\n    if (canUseDOM) {\n      window.requestAnimationFrame(() => {\n        if (/complete|interactive|loaded/.test(document.readyState)) {\n          proceed();\n        } else {\n          document.addEventListener(\"DOMContentLoaded\", proceed);\n        }\n      });\n    }\n  }\n\n  static destroy() {\n    window.removeEventListener(\"hashchange\", Hash.onHashChange, false);\n  }\n}\n","import { extend } from \"../../../shared/utils/extend.js\";\n\nconst buildURLQuery = (obj) => {\n  return Object.entries(obj)\n    .map((pair) => pair.map(encodeURIComponent).join(\"=\"))\n    .join(\"&\");\n};\n\nconst defaults = {\n  // General options for any video content (Youtube, Vimeo, HTML5 video)\n  video: {\n    autoplay: true,\n    ratio: 16 / 9,\n  },\n  // Youtube embed parameters\n  youtube: {\n    autohide: 1,\n    fs: 1,\n    rel: 0,\n    hd: 1,\n    wmode: \"transparent\",\n    enablejsapi: 1,\n    html5: 1,\n  },\n  // Vimeo embed parameters\n  vimeo: {\n    hd: 1,\n    show_title: 1,\n    show_byline: 1,\n    show_portrait: 0,\n    fullscreen: 1,\n  },\n  // HTML5 video parameters\n  html5video: {\n    tpl: `<video class=\"fancybox__html5video\" playsinline controls controlsList=\"nodownload\" poster=\"{{poster}}\">\n  <source src=\"{{src}}\" type=\"{{format}}\" />Sorry, your browser doesn't support embedded videos.</video>`,\n    format: \"\",\n  },\n};\n\nexport class Html {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n\n    for (const methodName of [\n      \"onInit\",\n      \"onReady\",\n\n      \"onCreateSlide\",\n      \"onRemoveSlide\",\n\n      \"onSelectSlide\",\n      \"onUnselectSlide\",\n\n      \"onRefresh\",\n\n      // For communication with iframed video (youtube/vimeo)\n      \"onMessage\",\n    ]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.events = {\n      init: this.onInit,\n      ready: this.onReady,\n\n      \"Carousel.createSlide\": this.onCreateSlide,\n      \"Carousel.removeSlide\": this.onRemoveSlide,\n\n      \"Carousel.selectSlide\": this.onSelectSlide,\n      \"Carousel.unselectSlide\": this.onUnselectSlide,\n\n      \"Carousel.refresh\": this.onRefresh,\n    };\n  }\n\n  /**\n   * Check if each gallery item has type when fancybox starts\n   */\n  onInit() {\n    for (const slide of this.fancybox.items) {\n      this.processType(slide);\n    }\n  }\n\n  /**\n   * Set content type for the slide\n   * @param {Object} slide\n   */\n  processType(slide) {\n    // Add support for `new Fancybox({items : [{html : 'smth'}]});`\n    if (slide.html) {\n      slide.src = slide.html;\n      slide.type = \"html\";\n\n      delete slide.html;\n\n      return;\n    }\n\n    const src = slide.src || \"\";\n\n    let type = slide.type || this.fancybox.options.type,\n      rez = null;\n\n    if (src && typeof src !== \"string\") {\n      return;\n    }\n\n    if (\n      (rez = src.match(\n        /(?:youtube\\.com|youtu\\.be|youtube\\-nocookie\\.com)\\/(?:watch\\?(?:.*&)?v=|v\\/|u\\/|embed\\/?)?(videoseries\\?list=(?:.*)|[\\w-]{11}|\\?listType=(?:.*)&list=(?:.*))(?:.*)/i\n      ))\n    ) {\n      const params = buildURLQuery(this.fancybox.option(\"Html.youtube\"));\n      const videoId = encodeURIComponent(rez[1]);\n\n      slide.videoId = videoId;\n      slide.src = `https://www.youtube-nocookie.com/embed/${videoId}?${params}`;\n      slide.thumb = slide.thumb || `https://i.ytimg.com/vi/${videoId}/mqdefault.jpg`;\n      slide.vendor = \"youtube\";\n\n      type = \"video\";\n    } else if ((rez = src.match(/^.+vimeo.com\\/(?:\\/)?([\\d]+)(.*)?/))) {\n      const params = buildURLQuery(this.fancybox.option(\"Html.vimeo\"));\n      const videoId = encodeURIComponent(rez[1]);\n\n      slide.videoId = videoId;\n      slide.src = `https://player.vimeo.com/video/${videoId}?${params}`;\n      slide.vendor = \"vimeo\";\n\n      type = \"video\";\n    } else if (\n      (rez = src.match(\n        /(?:maps\\.)?google\\.([a-z]{2,3}(?:\\.[a-z]{2})?)\\/(?:(?:(?:maps\\/(?:place\\/(?:.*)\\/)?\\@(.*),(\\d+.?\\d+?)z))|(?:\\?ll=))(.*)?/i\n      ))\n    ) {\n      slide.src = `//maps.google.${rez[1]}/?ll=${(rez[2]\n        ? rez[2] + \"&z=\" + Math.floor(rez[3]) + (rez[4] ? rez[4].replace(/^\\//, \"&\") : \"\")\n        : rez[4] + \"\"\n      ).replace(/\\?/, \"&\")}&output=${rez[4] && rez[4].indexOf(\"layer=c\") > 0 ? \"svembed\" : \"embed\"}`;\n\n      type = \"map\";\n    } else if ((rez = src.match(/(?:maps\\.)?google\\.([a-z]{2,3}(?:\\.[a-z]{2})?)\\/(?:maps\\/search\\/)(.*)/i))) {\n      slide.src = `//maps.google.${rez[1]}/maps?q=${rez[2].replace(\"query=\", \"q=\").replace(\"api=1\", \"\")}&output=embed`;\n\n      type = \"map\";\n    }\n\n    // Guess content type\n    if (!type) {\n      if (src.charAt(0) === \"#\") {\n        type = \"inline\";\n      } else if ((rez = src.match(/\\.(mp4|mov|ogv|webm)((\\?|#).*)?$/i))) {\n        type = \"html5video\";\n\n        slide.format = slide.format || \"video/\" + (rez[1] === \"ogv\" ? \"ogg\" : rez[1]);\n      } else if (src.match(/(^data:image\\/[a-z0-9+\\/=]*,)|(\\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\\?|#).*)?$)/i)) {\n        type = \"image\";\n      } else if (src.match(/\\.(pdf)((\\?|#).*)?$/i)) {\n        type = \"pdf\";\n      }\n    }\n\n    slide.type = type || this.fancybox.option(\"defaultType\", \"image\");\n\n    if (type === \"html5video\" || type === \"video\") {\n      slide.video = extend({}, this.fancybox.option(\"Html.video\"), slide.video);\n\n      if (slide._width && slide._height) {\n        slide.ratio = parseFloat(slide._width) / parseFloat(slide._height);\n      } else {\n        slide.ratio = slide.ratio || slide.video.ratio || defaults.video.ratio;\n      }\n    }\n  }\n\n  /**\n   * Start loading content when Fancybox is ready\n   */\n  onReady() {\n    this.fancybox.Carousel.slides.forEach((slide) => {\n      if (slide.$el) {\n        this.setContent(slide);\n\n        if (slide.index === this.fancybox.getSlide().index) {\n          this.playVideo(slide);\n        }\n      }\n    });\n  }\n\n  /**\n   * Process `Carousel.createSlide` event to create image content\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onCreateSlide(fancybox, carousel, slide) {\n    if (this.fancybox.state !== \"ready\") {\n      return;\n    }\n\n    this.setContent(slide);\n  }\n\n  /**\n   * Retrieve and set slide content\n   * @param {Object} slide\n   */\n  loadInlineContent(slide) {\n    let $content;\n\n    if (slide.src instanceof HTMLElement) {\n      $content = slide.src;\n    } else if (typeof slide.src === \"string\") {\n      const tmp = slide.src.split(\"#\", 2);\n      const id = tmp.length === 2 && tmp[0] === \"\" ? tmp[1] : tmp[0];\n\n      $content = document.getElementById(id);\n    }\n\n    if ($content) {\n      if (slide.type === \"clone\" || $content.$placeHolder) {\n        $content = $content.cloneNode(true);\n        let attrId = $content.getAttribute(\"id\");\n\n        attrId = attrId ? `${attrId}--clone` : `clone-${this.fancybox.id}-${slide.index}`;\n\n        $content.setAttribute(\"id\", attrId);\n      } else {\n        const $placeHolder = document.createElement(\"div\");\n        $placeHolder.classList.add(\"fancybox-placeholder\");\n        $content.parentNode.insertBefore($placeHolder, $content);\n        $content.$placeHolder = $placeHolder;\n      }\n\n      this.fancybox.setContent(slide, $content);\n    } else {\n      this.fancybox.setError(slide, \"{{ELEMENT_NOT_FOUND}}\");\n    }\n  }\n\n  /**\n   * Makes AJAX request and sets response as slide content\n   * @param {Object} slide\n   */\n  loadAjaxContent(slide) {\n    const fancybox = this.fancybox;\n    const xhr = new XMLHttpRequest();\n\n    fancybox.showLoading(slide);\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (fancybox.state === \"ready\") {\n          fancybox.hideLoading(slide);\n\n          if (xhr.status === 200) {\n            fancybox.setContent(slide, xhr.responseText);\n          } else {\n            fancybox.setError(slide, xhr.status === 404 ? \"{{AJAX_NOT_FOUND}}\" : \"{{AJAX_FORBIDDEN}}\");\n          }\n        }\n      }\n    };\n\n    xhr.open(\"GET\", slide.src);\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n    xhr.send(slide.ajax || null);\n\n    slide.xhr = xhr;\n  }\n\n  /**\n   * Creates iframe as slide content, preloads if needed before displaying\n   * @param {Object} slide\n   */\n  loadIframeContent(slide) {\n    const fancybox = this.fancybox;\n    const $iframe = document.createElement(\"iframe\");\n\n    $iframe.className = \"fancybox__iframe\";\n\n    $iframe.setAttribute(\"id\", `fancybox__iframe_${fancybox.id}_${slide.index}`);\n\n    $iframe.setAttribute(\"allow\", \"autoplay; fullscreen\");\n    $iframe.setAttribute(\"scrolling\", \"auto\");\n\n    slide.$iframe = $iframe;\n\n    if (slide.type !== \"iframe\" || slide.preload === false) {\n      $iframe.setAttribute(\"src\", slide.src);\n\n      this.fancybox.setContent(slide, $iframe);\n\n      this.resizeIframe(slide);\n\n      return;\n    }\n\n    fancybox.showLoading(slide);\n\n    const $content = document.createElement(\"div\");\n    $content.style.visibility = \"hidden\";\n\n    this.fancybox.setContent(slide, $content);\n\n    $content.appendChild($iframe);\n\n    $iframe.onerror = () => {\n      fancybox.setError(slide, \"{{IFRAME_ERROR}}\");\n    };\n\n    $iframe.onload = () => {\n      fancybox.hideLoading(slide);\n\n      let isFirstLoad = false;\n\n      if (!$iframe.isReady) {\n        $iframe.isReady = true;\n        isFirstLoad = true;\n      }\n\n      if (!$iframe.src.length) {\n        return;\n      }\n\n      $iframe.parentNode.style.visibility = \"\";\n\n      this.resizeIframe(slide);\n\n      if (isFirstLoad) {\n        fancybox.revealContent(slide);\n      }\n    };\n\n    $iframe.setAttribute(\"src\", slide.src);\n  }\n\n  /**\n   * Set CSS max/min width/height properties of the content to have the correct aspect ratio\n   * @param {Object} slide\n   */\n  setAspectRatio(slide) {\n    const $content = slide.$content;\n    const ratio = slide.ratio;\n\n    if (!$content) {\n      return;\n    }\n\n    let width = slide._width;\n    let height = slide._height;\n\n    if (ratio || (width && height)) {\n      Object.assign($content.style, {\n        width: width && height ? \"100%\" : \"\",\n        height: width && height ? \"100%\" : \"\",\n        maxWidth: \"\",\n        maxHeight: \"\",\n      });\n\n      let maxWidth = $content.offsetWidth;\n      let maxHeight = $content.offsetHeight;\n\n      width = width || maxWidth;\n      height = height || maxHeight;\n\n      // Resize to fit\n      if (width > maxWidth || height > maxHeight) {\n        let maxRatio = Math.min(maxWidth / width, maxHeight / height);\n\n        width = width * maxRatio;\n        height = height * maxRatio;\n      }\n\n      // Recheck ratio\n      if (Math.abs(width / height - ratio) > 0.01) {\n        if (ratio < width / height) {\n          width = height * ratio;\n        } else {\n          height = width / ratio;\n        }\n      }\n\n      Object.assign($content.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n      });\n    }\n  }\n\n  /**\n   * Adjust the width and height of the iframe according to the content dimensions, or defined sizes\n   * @param {Object} slide\n   */\n  resizeIframe(slide) {\n    const $iframe = slide.$iframe;\n\n    if (!$iframe) {\n      return;\n    }\n\n    let width_ = slide._width || 0;\n    let height_ = slide._height || 0;\n\n    if (width_ && height_) {\n      slide.autoSize = false;\n    }\n\n    const $parent = $iframe.parentNode;\n    const parentStyle = $parent.style;\n\n    if (slide.preload !== false && slide.autoSize !== false) {\n      try {\n        const compStyles = window.getComputedStyle($parent),\n          paddingX = parseFloat(compStyles.paddingLeft) + parseFloat(compStyles.paddingRight),\n          paddingY = parseFloat(compStyles.paddingTop) + parseFloat(compStyles.paddingBottom);\n\n        const document = $iframe.contentWindow.document,\n          $html = document.getElementsByTagName(\"html\")[0],\n          $body = document.body;\n\n        // Get rid of vertical scrollbar\n        $body.style.overflow = \"hidden\";\n\n        width_ = width_ || $html.scrollWidth + paddingX;\n\n        parentStyle.width = `${width_}px`;\n\n        $body.style.overflow = \"\";\n\n        parentStyle.flex = \"0 0 auto\";\n        parentStyle.height = `${$body.scrollHeight}px`;\n\n        height_ = $html.scrollHeight + paddingY;\n      } catch (error) {\n        //\n      }\n    }\n\n    if (width_ || height_) {\n      const newStyle = {\n        flex: \"0 1 auto\",\n      };\n\n      if (width_) {\n        newStyle.width = `${width_}px`;\n      }\n\n      if (height_) {\n        newStyle.height = `${height_}px`;\n      }\n\n      Object.assign(parentStyle, newStyle);\n    }\n  }\n\n  /**\n   * Process `Carousel.onRefresh` event,\n   * trigger iframe autosizing and set content aspect ratio for each slide\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   */\n  onRefresh(fancybox, carousel) {\n    carousel.slides.forEach((slide) => {\n      if (!slide.$el) {\n        return;\n      }\n\n      if (slide.$iframe) {\n        this.resizeIframe(slide);\n      }\n\n      if (slide.ratio) {\n        this.setAspectRatio(slide);\n      }\n    });\n  }\n\n  /**\n   * Process `Carousel.onCreateSlide` event to set content\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  setContent(slide) {\n    if (!slide || slide.isDom) {\n      return;\n    }\n\n    switch (slide.type) {\n      case \"html\":\n        this.fancybox.setContent(slide, slide.src);\n        break;\n\n      case \"html5video\":\n        this.fancybox.setContent(\n          slide,\n          this.fancybox\n            .option(\"Html.html5video.tpl\")\n            .replace(/\\{\\{src\\}\\}/gi, slide.src)\n            .replace(\"{{format}}\", slide.format || (slide.html5video && slide.html5video.format) || \"\")\n            .replace(\"{{poster}}\", slide.poster || slide.thumb || \"\")\n        );\n\n        break;\n\n      case \"inline\":\n      case \"clone\":\n        this.loadInlineContent(slide);\n        break;\n\n      case \"ajax\":\n        this.loadAjaxContent(slide);\n        break;\n\n      case \"iframe\":\n      case \"pdf\":\n      case \"video\":\n      case \"map\":\n        this.loadIframeContent(slide);\n\n        break;\n    }\n\n    if (slide.ratio) {\n      this.setAspectRatio(slide);\n    }\n  }\n\n  /**\n   * Process `Carousel.onSelectSlide` event to start video\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onSelectSlide(fancybox, carousel, slide) {\n    if (fancybox.state === \"ready\") {\n      this.playVideo(slide);\n    }\n  }\n\n  /**\n   * Attempts to begin playback of the media\n   * @param {Object} slide\n   */\n  playVideo(slide) {\n    if (slide.type === \"html5video\" && slide.video.autoplay) {\n      try {\n        const $video = slide.$el.querySelector(\"video\");\n\n        if ($video) {\n          const promise = $video.play();\n\n          if (promise !== undefined) {\n            promise\n              .then(() => {\n                // Autoplay started\n              })\n              .catch((error) => {\n                // Autoplay was prevented.\n                $video.muted = true;\n                $video.play();\n              });\n          }\n        }\n      } catch (err) {}\n    }\n\n    if (slide.type !== \"video\" || !(slide.$iframe && slide.$iframe.contentWindow)) {\n      return;\n    }\n\n    // This function will be repeatedly called to check\n    // if video iframe has been loaded to send message to start the video\n    const poller = () => {\n      if (slide.state === \"done\" && slide.$iframe && slide.$iframe.contentWindow) {\n        let command;\n\n        if (slide.$iframe.isReady) {\n          if (slide.video && slide.video.autoplay) {\n            if (slide.vendor == \"youtube\") {\n              command = {\n                event: \"command\",\n                func: \"playVideo\",\n              };\n            } else {\n              command = {\n                method: \"play\",\n                value: \"true\",\n              };\n            }\n          }\n\n          if (command) {\n            slide.$iframe.contentWindow.postMessage(JSON.stringify(command), \"*\");\n          }\n\n          return;\n        }\n\n        if (slide.vendor === \"youtube\") {\n          command = {\n            event: \"listening\",\n            id: slide.$iframe.getAttribute(\"id\"),\n          };\n\n          slide.$iframe.contentWindow.postMessage(JSON.stringify(command), \"*\");\n        }\n      }\n\n      slide.poller = setTimeout(poller, 250);\n    };\n\n    poller();\n  }\n\n  /**\n   * Process `Carousel.onUnselectSlide` event to pause video\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onUnselectSlide(fancybox, carousel, slide) {\n    if (slide.type === \"html5video\") {\n      try {\n        slide.$el.querySelector(\"video\").pause();\n      } catch (error) {}\n\n      return;\n    }\n\n    let command = false;\n\n    if (slide.vendor == \"vimeo\") {\n      command = {\n        method: \"pause\",\n        value: \"true\",\n      };\n    } else if (slide.vendor === \"youtube\") {\n      command = {\n        event: \"command\",\n        func: \"pauseVideo\",\n      };\n    }\n\n    if (command && slide.$iframe && slide.$iframe.contentWindow) {\n      slide.$iframe.contentWindow.postMessage(JSON.stringify(command), \"*\");\n    }\n\n    clearTimeout(slide.poller);\n  }\n\n  /**\n   * Process `Carousel.onRemoveSlide` event to do clean up\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onRemoveSlide(fancybox, carousel, slide) {\n    // Abort ajax request if exists\n    if (slide.xhr) {\n      slide.xhr.abort();\n      slide.xhr = null;\n    }\n\n    // Unload iframe content if exists\n    if (slide.$iframe) {\n      slide.$iframe.onload = slide.$iframe.onerror = null;\n\n      slide.$iframe.src = \"//about:blank\";\n      slide.$iframe = null;\n    }\n\n    // Clear inline content\n    const $content = slide.$content;\n\n    if (slide.type === \"inline\" && $content) {\n      $content.classList.remove(\"fancybox__content\");\n\n      if ($content.style.display !== \"none\") {\n        $content.style.display = \"none\";\n      }\n    }\n\n    if (slide.$closeButton) {\n      slide.$closeButton.remove();\n      slide.$closeButton = null;\n    }\n\n    const $placeHolder = $content && $content.$placeHolder;\n\n    if ($placeHolder) {\n      $placeHolder.parentNode.insertBefore($content, $placeHolder);\n      $placeHolder.remove();\n      $content.$placeHolder = null;\n    }\n  }\n\n  /**\n   * Process `window.message` event to mark video iframe element as `ready`\n   * @param {Object} e - Event\n   */\n  onMessage(e) {\n    try {\n      let data = JSON.parse(e.data);\n\n      if (e.origin === \"https://player.vimeo.com\") {\n        if (data.event === \"ready\") {\n          for (let $iframe of document.getElementsByClassName(\"fancybox__iframe\")) {\n            if ($iframe.contentWindow === e.source) {\n              $iframe.isReady = 1;\n            }\n          }\n        }\n      } else if (e.origin === \"https://www.youtube-nocookie.com\") {\n        if (data.event === \"onReady\") {\n          document.getElementById(data.id).isReady = 1;\n        }\n      }\n    } catch (ex) {}\n  }\n\n  attach() {\n    this.fancybox.on(this.events);\n\n    window.addEventListener(\"message\", this.onMessage, false);\n  }\n\n  detach() {\n    this.fancybox.off(this.events);\n\n    window.removeEventListener(\"message\", this.onMessage, false);\n  }\n}\n\n// Expose defaults\nHtml.defaults = defaults;\n","import { extend } from \"../../../shared/utils/extend.js\";\r\n\r\nimport { Panzoom } from \"../../../Panzoom/Panzoom.js\";\r\n\r\nconst defaults = {\r\n  // Class name for slide element indicating that content can be zoomed in\r\n  canZoomInClass: \"can-zoom_in\",\r\n\r\n  // Class name for slide element indicating that content can be zoomed out\r\n  canZoomOutClass: \"can-zoom_out\",\r\n\r\n  // Do zoom animation from thumbnail image when starting or closing fancybox\r\n  zoom: true,\r\n\r\n  // Animate opacity while zooming\r\n  zoomOpacity: \"auto\", // \"auto\" | true | false,\r\n\r\n  // Zoom animation friction\r\n  zoomFriction: 0.82,\r\n\r\n  // Disable zoom animation if thumbnail is visible only partly\r\n  ignoreCoveredThumbnail: false,\r\n\r\n  // Enable guestures\r\n  touch: true,\r\n\r\n  // Action to be performed when user clicks on the image\r\n  click: \"toggleZoom\", // \"toggleZoom\" | \"next\" | \"close\" | null\r\n\r\n  // Action to be performed when double-click event is detected on the image\r\n  doubleClick: null, // \"toggleZoom\" | null\r\n\r\n  // Action to be performed when user rotates a wheel button on a pointing device\r\n  wheel: \"zoom\", // \"zoom\" | \"slide\" | \"close\" | null\r\n\r\n  // How image should be resized to fit its container\r\n  fit: \"contain\", // \"contain\" | \"contain-w\" | \"cover\"\r\n\r\n  // Should create wrapping element around the image\r\n  wrap: false,\r\n\r\n  // Custom Panzoom options\r\n  Panzoom: {\r\n    ratio: 1,\r\n  },\r\n};\r\n\r\nexport class Image {\r\n  constructor(fancybox) {\r\n    this.fancybox = fancybox;\r\n\r\n    for (const methodName of [\r\n      // Fancybox\r\n      \"onReady\",\r\n      \"onClosing\",\r\n      \"onDone\",\r\n\r\n      // Fancybox.Carousel\r\n      \"onPageChange\",\r\n      \"onCreateSlide\",\r\n      \"onRemoveSlide\",\r\n\r\n      // Image load/error\r\n      \"onImageStatusChange\",\r\n    ]) {\r\n      this[methodName] = this[methodName].bind(this);\r\n    }\r\n\r\n    this.events = {\r\n      ready: this.onReady,\r\n      closing: this.onClosing,\r\n      done: this.onDone,\r\n\r\n      \"Carousel.change\": this.onPageChange,\r\n      \"Carousel.createSlide\": this.onCreateSlide,\r\n      \"Carousel.removeSlide\": this.onRemoveSlide,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handle `ready` event to start loading content\r\n   */\r\n  onReady() {\r\n    this.fancybox.Carousel.slides.forEach((slide) => {\r\n      if (slide.$el) {\r\n        this.setContent(slide);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle `done` event to update cursor\r\n   * @param {Object} fancybox\r\n   * @param {Object} slide\r\n   */\r\n  onDone(fancybox, slide) {\r\n    this.handleCursor(slide);\r\n  }\r\n\r\n  /**\r\n   * Handle `closing` event to clean up all slides and to start zoom-out animation\r\n   * @param {Object} fancybox\r\n   */\r\n  onClosing(fancybox) {\r\n    clearTimeout(this.clickTimer);\r\n    this.clickTimer = null;\r\n\r\n    // Remove events\r\n    fancybox.Carousel.slides.forEach((slide) => {\r\n      if (slide.$image) {\r\n        slide.state = \"destroy\";\r\n      }\r\n\r\n      if (slide.Panzoom) {\r\n        slide.Panzoom.detachEvents();\r\n      }\r\n    });\r\n\r\n    // If possible, start the zoom animation, it will interrupt the default closing process\r\n    if (this.fancybox.state === \"closing\" && this.canZoom(fancybox.getSlide())) {\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process `Carousel.createSlide` event to create image content\r\n   * @param {Object} fancybox\r\n   * @param {Object} carousel\r\n   * @param {Object} slide\r\n   */\r\n  onCreateSlide(fancybox, carousel, slide) {\r\n    if (this.fancybox.state !== \"ready\") {\r\n      return;\r\n    }\r\n\r\n    this.setContent(slide);\r\n  }\r\n\r\n  /**\r\n   * Handle `Carousel.removeSlide` event to do clean up the slide\r\n   * @param {Object} fancybox\r\n   * @param {Object} carousel\r\n   * @param {Object} slide\r\n   */\r\n  onRemoveSlide(fancybox, carousel, slide) {\r\n    if (slide.$image) {\r\n      slide.$el.classList.remove(fancybox.option(\"Image.canZoomInClass\"));\r\n\r\n      slide.$image.remove();\r\n      slide.$image = null;\r\n    }\r\n\r\n    if (slide.Panzoom) {\r\n      slide.Panzoom.destroy();\r\n      slide.Panzoom = null;\r\n    }\r\n\r\n    if (slide.$el && slide.$el.dataset) {\r\n      delete slide.$el.dataset.imageFit;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build DOM elements and add event listeners\r\n   * @param {Object} slide\r\n   */\r\n  setContent(slide) {\r\n    // Check if this slide should contain an image\r\n    if (slide.isDom || slide.html || (slide.type && slide.type !== \"image\")) {\r\n      return;\r\n    }\r\n\r\n    if (slide.$image) {\r\n      return;\r\n    }\r\n\r\n    slide.type = \"image\";\r\n    slide.state = \"loading\";\r\n\r\n    // * Build layout\r\n    // Container\r\n    const $content = document.createElement(\"div\");\r\n    $content.style.visibility = \"hidden\";\r\n\r\n    // Image element\r\n    const $image = document.createElement(\"img\");\r\n\r\n    $image.addEventListener(\"load\", (event) => {\r\n      event.stopImmediatePropagation();\r\n\r\n      this.onImageStatusChange(slide);\r\n    });\r\n\r\n    $image.addEventListener(\"error\", () => {\r\n      this.onImageStatusChange(slide);\r\n    });\r\n\r\n    $image.src = slide.src;\r\n    $image.alt = \"\";\r\n    $image.draggable = false;\r\n\r\n    $image.classList.add(\"fancybox__image\");\r\n\r\n    if (slide.srcset) {\r\n      $image.setAttribute(\"srcset\", slide.srcset);\r\n    }\r\n\r\n    if (slide.sizes) {\r\n      $image.setAttribute(\"sizes\", slide.sizes);\r\n    }\r\n\r\n    slide.$image = $image;\r\n\r\n    const shouldWrap = this.fancybox.option(\"Image.wrap\");\r\n\r\n    if (shouldWrap) {\r\n      const $wrap = document.createElement(\"div\");\r\n      $wrap.classList.add(typeof shouldWrap === \"string\" ? shouldWrap : \"fancybox__image-wrap\");\r\n\r\n      $wrap.appendChild($image);\r\n\r\n      $content.appendChild($wrap);\r\n\r\n      slide.$wrap = $wrap;\r\n    } else {\r\n      $content.appendChild($image);\r\n    }\r\n\r\n    // Set data attribute if other that default\r\n    // for example, set `[data-image-fit=\"contain-w\"]`\r\n    slide.$el.dataset.imageFit = this.fancybox.option(\"Image.fit\");\r\n\r\n    // Append content\r\n    this.fancybox.setContent(slide, $content);\r\n\r\n    // Display loading icon\r\n    if ($image.complete || $image.error) {\r\n      this.onImageStatusChange(slide);\r\n    } else {\r\n      this.fancybox.showLoading(slide);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle image state change, display error or start revealing image\r\n   * @param {Object} slide\r\n   */\r\n  onImageStatusChange(slide) {\r\n    const $image = slide.$image;\r\n\r\n    if (!$image || slide.state !== \"loading\") {\r\n      return;\r\n    }\r\n\r\n    if (!($image.complete && $image.naturalWidth && $image.naturalHeight)) {\r\n      this.fancybox.setError(slide, \"{{IMAGE_ERROR}}\");\r\n\r\n      return;\r\n    }\r\n\r\n    this.fancybox.hideLoading(slide);\r\n\r\n    if (this.fancybox.option(\"Image.fit\") === \"contain\") {\r\n      this.initSlidePanzoom(slide);\r\n    }\r\n\r\n    // Add `wheel` and `click` event handler\r\n    slide.$el.addEventListener(\"wheel\", (event) => this.onWheel(slide, event), { passive: false });\r\n    slide.$content.addEventListener(\"click\", (event) => this.onClick(slide, event), { passive: false });\r\n\r\n    this.revealContent(slide);\r\n  }\r\n\r\n  /**\r\n   * Make image zoomable and draggable using Panzoom\r\n   * @param {Object} slide\r\n   */\r\n  initSlidePanzoom(slide) {\r\n    if (slide.Panzoom) {\r\n      return;\r\n    }\r\n\r\n    //* Initialize Panzoom\r\n    slide.Panzoom = new Panzoom(\r\n      slide.$el,\r\n      extend(true, this.fancybox.option(\"Image.Panzoom\", {}), {\r\n        viewport: slide.$wrap,\r\n        content: slide.$image,\r\n\r\n        wrapInner: false,\r\n\r\n        // Allow to select caption text\r\n        textSelection: true,\r\n\r\n        // Toggle gestures\r\n        touch: this.fancybox.option(\"Image.touch\"),\r\n\r\n        // This will prevent click conflict with fancybox main carousel\r\n        panOnlyZoomed: true,\r\n\r\n        // Disable default click / wheel events as custom event listeners will replace them,\r\n        // because click and wheel events should work without Panzoom\r\n        click: false,\r\n        wheel: false,\r\n      })\r\n    );\r\n\r\n    slide.Panzoom.on(\"startAnimation\", () => {\r\n      this.fancybox.trigger(\"Image.startAnimation\", slide);\r\n    });\r\n\r\n    slide.Panzoom.on(\"endAnimation\", () => {\r\n      if (slide.state === \"zoomIn\") {\r\n        this.fancybox.done(slide);\r\n      }\r\n\r\n      this.handleCursor(slide);\r\n\r\n      this.fancybox.trigger(\"Image.endAnimation\", slide);\r\n    });\r\n\r\n    slide.Panzoom.on(\"afterUpdate\", () => {\r\n      this.handleCursor(slide);\r\n\r\n      this.fancybox.trigger(\"Image.afterUpdate\", slide);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start zoom-in animation if possible, or simply reveal content\r\n   * @param {Object} slide\r\n   */\r\n  revealContent(slide) {\r\n    // Animate only on first run\r\n    if (\r\n      this.fancybox.Carousel.prevPage === null &&\r\n      slide.index === this.fancybox.options.startIndex &&\r\n      this.canZoom(slide)\r\n    ) {\r\n      this.zoomIn();\r\n    } else {\r\n      this.fancybox.revealContent(slide);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get zoom info for selected slide\r\n   * @param {Object} slide\r\n   */\r\n  getZoomInfo(slide) {\r\n    const $thumb = slide.$thumb,\r\n      thumbRect = $thumb.getBoundingClientRect(),\r\n      thumbWidth = thumbRect.width,\r\n      thumbHeight = thumbRect.height,\r\n      //\r\n      contentRect = slide.$content.getBoundingClientRect(),\r\n      contentWidth = contentRect.width,\r\n      contentHeight = contentRect.height,\r\n      //\r\n      shiftedTop = contentRect.top - thumbRect.top,\r\n      shiftedLeft = contentRect.left - thumbRect.left;\r\n\r\n    // Check if need to update opacity\r\n    let opacity = this.fancybox.option(\"Image.zoomOpacity\");\r\n\r\n    if (opacity === \"auto\") {\r\n      opacity = Math.abs(thumbWidth / thumbHeight - contentWidth / contentHeight) > 0.1;\r\n    }\r\n\r\n    return {\r\n      top: shiftedTop,\r\n      left: shiftedLeft,\r\n      scale: thumbRect.width / contentWidth,\r\n      opacity: opacity,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Determine if it is possible to do zoom-in animation\r\n   */\r\n  canZoom(slide) {\r\n    const fancybox = this.fancybox,\r\n      $container = fancybox.$container;\r\n\r\n    if (window.visualViewport && window.visualViewport.scale !== 1) {\r\n      return false;\r\n    }\r\n\r\n    if (!fancybox.option(\"Image.zoom\") || fancybox.option(\"Image.fit\") !== \"contain\") {\r\n      return false;\r\n    }\r\n\r\n    const $thumb = slide.$thumb;\r\n\r\n    if (!$thumb || slide.state === \"loading\") {\r\n      return false;\r\n    }\r\n\r\n    // * Check if thumbnail image is really visible\r\n    $container.classList.add(\"fancybox__no-click\");\r\n\r\n    const rect = $thumb.getBoundingClientRect();\r\n\r\n    let rez;\r\n\r\n    // Check if thumbnail image is actually visible on the screen\r\n    if (this.fancybox.option(\"Image.ignoreCoveredThumbnail\")) {\r\n      const visibleTopLeft = document.elementFromPoint(rect.left + 1, rect.top + 1) === $thumb;\r\n      const visibleBottomRight = document.elementFromPoint(rect.right - 1, rect.bottom - 1) === $thumb;\r\n\r\n      rez = visibleTopLeft && visibleBottomRight;\r\n    } else {\r\n      rez = document.elementFromPoint(rect.left + rect.width * 0.5, rect.top + rect.height * 0.5) === $thumb;\r\n    }\r\n\r\n    $container.classList.remove(\"fancybox__no-click\");\r\n\r\n    return rez;\r\n  }\r\n\r\n  /**\r\n   * Perform zoom-in animation\r\n   */\r\n  zoomIn() {\r\n    const fancybox = this.fancybox,\r\n      slide = fancybox.getSlide(),\r\n      Panzoom = slide.Panzoom;\r\n\r\n    const { top, left, scale, opacity } = this.getZoomInfo(slide);\r\n\r\n    slide.state = \"zoomIn\";\r\n\r\n    fancybox.trigger(\"reveal\", slide);\r\n\r\n    // Scale and move to start position\r\n    Panzoom.panTo({\r\n      x: left * -1,\r\n      y: top * -1,\r\n      scale: scale,\r\n      friction: 0,\r\n      ignoreBounds: true,\r\n    });\r\n\r\n    slide.$content.style.visibility = \"\";\r\n\r\n    if (opacity === true) {\r\n      Panzoom.on(\"afterTransform\", (panzoom) => {\r\n        if (slide.state === \"zoomIn\" || slide.state === \"zoomOut\") {\r\n          panzoom.$content.style.opacity = Math.min(1, 1 - (1 - panzoom.content.scale) / (1 - scale));\r\n        }\r\n      });\r\n    }\r\n\r\n    // Animate back to original position\r\n    Panzoom.panTo({\r\n      x: 0,\r\n      y: 0,\r\n      scale: 1,\r\n      friction: this.fancybox.option(\"Image.zoomFriction\"),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Perform zoom-out animation\r\n   */\r\n  zoomOut() {\r\n    const fancybox = this.fancybox,\r\n      slide = fancybox.getSlide(),\r\n      Panzoom = slide.Panzoom;\r\n\r\n    if (!Panzoom) {\r\n      return;\r\n    }\r\n\r\n    slide.state = \"zoomOut\";\r\n    fancybox.state = \"customClosing\";\r\n\r\n    if (slide.$caption) {\r\n      slide.$caption.style.visibility = \"hidden\";\r\n    }\r\n\r\n    let friction = this.fancybox.option(\"Image.zoomFriction\");\r\n\r\n    const animatePosition = (event) => {\r\n      const { top, left, scale, opacity } = this.getZoomInfo(slide);\r\n\r\n      // Increase speed on the first run if opacity is not animated\r\n      if (!event && !opacity) {\r\n        friction *= 0.82;\r\n      }\r\n\r\n      Panzoom.panTo({\r\n        x: left * -1,\r\n        y: top * -1,\r\n        scale,\r\n        friction,\r\n        ignoreBounds: true,\r\n      });\r\n\r\n      // Gradually increase speed\r\n      friction *= 0.98;\r\n    };\r\n\r\n    // Page scrolling will cause thumbnail to change position on the display,\r\n    // therefore animation end position has to be recalculated after each page scroll\r\n    window.addEventListener(\"scroll\", animatePosition);\r\n\r\n    Panzoom.once(\"endAnimation\", () => {\r\n      window.removeEventListener(\"scroll\", animatePosition);\r\n      fancybox.destroy();\r\n    });\r\n\r\n    animatePosition();\r\n  }\r\n\r\n  /**\r\n   * Set the type of mouse cursor to indicate if content is zoomable\r\n   * @param {Object} slide\r\n   */\r\n  handleCursor(slide) {\r\n    if (slide.type !== \"image\" || !slide.$el) {\r\n      return;\r\n    }\r\n\r\n    const panzoom = slide.Panzoom;\r\n    const clickAction = this.fancybox.option(\"Image.click\", false, slide);\r\n    const touchIsEnabled = this.fancybox.option(\"Image.touch\");\r\n\r\n    const classList = slide.$el.classList;\r\n\r\n    const zoomInClass = this.fancybox.option(\"Image.canZoomInClass\");\r\n    const zoomOutClass = this.fancybox.option(\"Image.canZoomOutClass\");\r\n\r\n    if (panzoom && clickAction === \"toggleZoom\") {\r\n      const canZoomIn =\r\n        panzoom && panzoom.content.scale === 1 && panzoom.option(\"maxScale\") - panzoom.content.scale > 0.01;\r\n\r\n      if (canZoomIn) {\r\n        classList.remove(zoomOutClass);\r\n        classList.add(zoomInClass);\r\n      } else if (panzoom.content.scale > 1 && !touchIsEnabled) {\r\n        classList.add(zoomOutClass);\r\n      }\r\n    } else if (clickAction === \"close\") {\r\n      classList.add(zoomOutClass);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle `wheel` event\r\n   * @param {Object} slide\r\n   * @param {Object} event\r\n   */\r\n  onWheel(slide, event) {\r\n    if (this.fancybox.state !== \"ready\") {\r\n      return;\r\n    }\r\n\r\n    if (this.fancybox.trigger(\"Image.wheel\", event) === false) {\r\n      return;\r\n    }\r\n\r\n    switch (this.fancybox.option(\"Image.wheel\")) {\r\n      case \"zoom\":\r\n        slide.Panzoom && slide.Panzoom.zoomWithWheel(event);\r\n\r\n        break;\r\n\r\n      case \"close\":\r\n        this.fancybox.close();\r\n\r\n        break;\r\n\r\n      case \"slide\":\r\n        this.fancybox[event.deltaY < 0 ? \"prev\" : \"next\"]();\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle `click` and `dblclick` events\r\n   * @param {Object} slide\r\n   * @param {Object} event\r\n   */\r\n  onClick(slide, event) {\r\n    // Check that clicks should be allowed\r\n    if (this.fancybox.state !== \"ready\") {\r\n      return;\r\n    }\r\n\r\n    const panzoom = slide.Panzoom;\r\n\r\n    if (\r\n      panzoom &&\r\n      (panzoom.dragPosition.midPoint ||\r\n        panzoom.dragOffset.x !== 0 ||\r\n        panzoom.dragOffset.y !== 0 ||\r\n        panzoom.dragOffset.scale !== 1)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.fancybox.Carousel.Panzoom.lockAxis) {\r\n      return false;\r\n    }\r\n\r\n    const process = (action) => {\r\n      switch (action) {\r\n        case \"toggleZoom\":\r\n          event.stopPropagation();\r\n\r\n          slide.Panzoom && slide.Panzoom.zoomWithClick(event);\r\n\r\n          break;\r\n\r\n        case \"close\":\r\n          this.fancybox.close();\r\n\r\n          break;\r\n\r\n        case \"next\":\r\n          event.stopPropagation();\r\n\r\n          this.fancybox.next();\r\n\r\n          break;\r\n      }\r\n    };\r\n\r\n    const clickAction = this.fancybox.option(\"Image.click\");\r\n    const dblclickAction = this.fancybox.option(\"Image.doubleClick\");\r\n\r\n    if (dblclickAction) {\r\n      if (this.clickTimer) {\r\n        clearTimeout(this.clickTimer);\r\n        this.clickTimer = null;\r\n\r\n        process(dblclickAction);\r\n      } else {\r\n        this.clickTimer = setTimeout(() => {\r\n          this.clickTimer = null;\r\n          process(clickAction);\r\n        }, 300);\r\n      }\r\n    } else {\r\n      process(clickAction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle `Carousel.change` event to reset zoom level for any zoomed in/out content\r\n   * and to revel content of the current page\r\n   * @param {Object} fancybox\r\n   * @param {Object} carousel\r\n   */\r\n  onPageChange(fancybox, carousel) {\r\n    const currSlide = fancybox.getSlide();\r\n\r\n    carousel.slides.forEach((slide) => {\r\n      if (!slide.Panzoom || slide.state !== \"done\") {\r\n        return;\r\n      }\r\n\r\n      if (slide.index !== currSlide.index) {\r\n        slide.Panzoom.panTo({\r\n          x: 0,\r\n          y: 0,\r\n          scale: 1,\r\n          friction: 0.8,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  attach() {\r\n    this.fancybox.on(this.events);\r\n  }\r\n\r\n  detach() {\r\n    this.fancybox.off(this.events);\r\n  }\r\n}\r\n\r\n// Expose defaults\r\nImage.defaults = defaults;\r\n","import { isScrollable } from \"../../../../src/shared/utils/isScrollable.js\";\n\nexport class ScrollLock {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n    this.viewport = null;\n\n    this.pendingUpdate = null;\n\n    for (const methodName of [\"onReady\", \"onResize\", \"onTouchstart\", \"onTouchmove\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n  }\n\n  /**\n   * Process `initLayout` event to attach event listeners and resize viewport if needed\n   */\n  onReady() {\n    //* Support Visual Viewport API\n    // https://developer.mozilla.org/en-US/docs/Web/API/Visual_Viewport_API\n    const viewport = window.visualViewport;\n\n    if (viewport) {\n      this.viewport = viewport;\n      this.startY = 0;\n\n      viewport.addEventListener(\"resize\", this.onResize);\n\n      this.updateViewport();\n    }\n\n    //* Prevent bouncing while scrolling on mobile devices\n    window.addEventListener(\"touchstart\", this.onTouchstart, { passive: false });\n    window.addEventListener(\"touchmove\", this.onTouchmove, { passive: false });\n  }\n\n  /**\n   * Handle `resize` event to call `updateViewport`\n   */\n  onResize() {\n    this.updateViewport();\n  }\n\n  /**\n   * Scale $container proportionally to actually fit inside browser,\n   * e.g., disable viewport zooming\n   */\n  updateViewport() {\n    const fancybox = this.fancybox,\n      viewport = this.viewport,\n      scale = viewport.scale || 1,\n      $container = fancybox.$container;\n\n    if (!$container) {\n      return;\n    }\n\n    let width = \"\",\n      height = \"\",\n      transform = \"\";\n\n    if (scale - 1 > 0.1) {\n      width = `${viewport.width * scale}px`;\n      height = `${viewport.height * scale}px`;\n      transform = `translate3d(${viewport.offsetLeft}px, ${viewport.offsetTop}px, 0) scale(${1 / scale})`;\n    }\n\n    $container.style.width = width;\n    $container.style.height = height;\n    $container.style.transform = transform;\n  }\n\n  /**\n   * Handle `touchstart` event to mark drag start position\n   * @param {Object} event\n   */\n  onTouchstart(event) {\n    this.startY = event.touches ? event.touches[0].screenY : event.screenY;\n  }\n\n  /**\n   * Handle `touchmove` event to fix scrolling on mobile devices (iOS)\n   * @param {Object} event\n   */\n  onTouchmove(event) {\n    const startY = this.startY;\n    const zoom = window.innerWidth / window.document.documentElement.clientWidth;\n\n    if (!event.cancelable) {\n      return;\n    }\n\n    if (event.touches.length > 1 || zoom !== 1) {\n      return;\n    }\n\n    const target = event.target;\n    const el = isScrollable(target);\n\n    if (!el) {\n      event.preventDefault();\n      return;\n    }\n\n    const style = window.getComputedStyle(el);\n    const height = parseInt(style.getPropertyValue(\"height\"), 10);\n\n    const curY = event.touches ? event.touches[0].screenY : event.screenY;\n\n    const isAtTop = startY <= curY && el.scrollTop === 0;\n    const isAtBottom = startY >= curY && el.scrollHeight - el.scrollTop === height;\n\n    if (isAtTop || isAtBottom) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Clean everything up\n   */\n  cleanup() {\n    if (this.pendingUpdate) {\n      cancelAnimationFrame(this.pendingUpdate);\n      this.pendingUpdate = null;\n    }\n\n    const viewport = this.viewport;\n\n    if (viewport) {\n      viewport.removeEventListener(\"resize\", this.onResize);\n      this.viewport = null;\n    }\n\n    window.removeEventListener(\"touchstart\", this.onTouchstart, false);\n    window.removeEventListener(\"touchmove\", this.onTouchmove, false);\n  }\n\n  attach() {\n    this.fancybox.on(\"initLayout\", this.onReady);\n  }\n\n  detach() {\n    this.fancybox.off(\"initLayout\", this.onReady);\n\n    this.cleanup();\n  }\n}\n","import { extend } from \"../../../shared/utils/extend.js\";\nimport { Carousel } from \"../../../Carousel/Carousel.js\";\n\nconst defaults = {\n  // The minimum number of images in the gallery to display thumbnails\n  minSlideCount: 2,\n\n  // Minimum screen height to display thumbnails\n  minScreenHeight: 500,\n\n  // Automatically show thumbnails when opened\n  autoStart: true,\n\n  // Keyboard shortcut to toggle thumbnail container\n  key: \"t\",\n\n  // Customize Carousel instance\n  Carousel: {},\n};\n\nexport class Thumbs {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n\n    this.$container = null;\n    this.state = \"init\";\n\n    for (const methodName of [\"onPrepare\", \"onClosing\", \"onKeydown\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.events = {\n      prepare: this.onPrepare,\n      closing: this.onClosing,\n      keydown: this.onKeydown,\n    };\n  }\n\n  /**\n   * Process `prepare` event to build the layout\n   */\n  onPrepare() {\n    // Get slides, skip if the total number is less than the minimum\n    const slides = this.getSlides();\n\n    if (slides.length < this.fancybox.option(\"Thumbs.minSlideCount\")) {\n      this.state = \"disabled\";\n      return;\n    }\n\n    if (\n      this.fancybox.option(\"Thumbs.autoStart\") === true &&\n      this.fancybox.Carousel.Panzoom.content.height >= this.fancybox.option(\"Thumbs.minScreenHeight\")\n    ) {\n      this.build();\n    }\n  }\n\n  /**\n   * Process `closing` event to disable all events\n   */\n  onClosing() {\n    if (this.Carousel) {\n      this.Carousel.Panzoom.detachEvents();\n    }\n  }\n\n  /**\n   * Process `keydown` event to enable thumbnail list toggling using keyboard key\n   * @param {Object} fancybox\n   * @param {String} key\n   */\n  onKeydown(fancybox, key) {\n    if (key === fancybox.option(\"Thumbs.key\")) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * Build layout and init thumbnail Carousel\n   */\n  build() {\n    if (this.$container) {\n      return;\n    }\n\n    // Create wrapping element and append to layout\n    const $container = document.createElement(\"div\");\n\n    $container.classList.add(\"fancybox__thumbs\");\n\n    this.fancybox.$carousel.parentNode.insertBefore($container, this.fancybox.$carousel.nextSibling);\n\n    // Initialise thumbnail carousel with all slides\n    this.Carousel = new Carousel(\n      $container,\n      extend(\n        true,\n        {\n          Dots: false,\n          Navigation: false,\n          Sync: {\n            friction: 0,\n          },\n          infinite: false,\n          center: true,\n          fill: true,\n          dragFree: true,\n          slidesPerPage: 1,\n          preload: 1,\n        },\n        this.fancybox.option(\"Thumbs.Carousel\"),\n        {\n          Sync: {\n            target: this.fancybox.Carousel,\n          },\n          slides: this.getSlides(),\n        }\n      )\n    );\n\n    // Slide carousel on wheel event\n    this.Carousel.Panzoom.on(\"wheel\", (panzoom, event) => {\n      event.preventDefault();\n\n      this.fancybox[event.deltaY < 0 ? \"prev\" : \"next\"]();\n    });\n\n    this.$container = $container;\n\n    this.state = \"visible\";\n  }\n\n  /**\n   * Process all fancybox slides to get all thumbnail images\n   */\n  getSlides() {\n    const slides = [];\n\n    for (const slide of this.fancybox.items) {\n      const thumb = slide.thumb;\n\n      if (thumb) {\n        slides.push({\n          html: `<div class=\"fancybox__thumb\" style=\"background-image:url('${thumb}')\"></div>`,\n          customClass: `has-thumb has-${slide.type || \"image\"}`,\n        });\n      }\n    }\n\n    return slides;\n  }\n\n  /**\n   * Toggle visibility of thumbnail list\n   * Tip: you can use `Fancybox.getInstance().plugins.Thumbs.toggle()` from anywhere in your code\n   */\n  toggle() {\n    if (this.state === \"visible\") {\n      this.hide();\n    } else if (this.state === \"hidden\") {\n      this.show();\n    } else {\n      this.build();\n    }\n  }\n\n  /**\n   * Show thumbnail list\n   */\n  show() {\n    if (this.state === \"hidden\") {\n      this.$container.style.display = \"\";\n\n      this.Carousel.Panzoom.attachEvents();\n\n      this.state = \"visible\";\n    }\n  }\n\n  /**\n   * Hide thumbnail list\n   */\n  hide() {\n    if (this.state === \"visible\") {\n      this.Carousel.Panzoom.detachEvents();\n\n      this.$container.style.display = \"none\";\n\n      this.state = \"hidden\";\n    }\n  }\n\n  /**\n   * Reset the state\n   */\n  cleanup() {\n    if (this.Carousel) {\n      this.Carousel.destroy();\n      this.Carousel = null;\n    }\n\n    if (this.$container) {\n      this.$container.remove();\n      this.$container = null;\n    }\n\n    this.state = \"init\";\n  }\n\n  attach() {\n    this.fancybox.on(this.events);\n  }\n\n  detach() {\n    this.fancybox.off(this.events);\n\n    this.cleanup();\n  }\n}\n\n// Expose defaults\nThumbs.defaults = defaults;\n","import { isPlainObject } from \"../../../shared/utils/isPlainObject.js\";\r\nimport { extend } from \"../../../shared/utils/extend.js\";\r\n\r\nimport { Fullscreen } from \"../../../shared/utils/Fullscreen.js\";\r\nimport { Slideshow } from \"../../../shared/utils/Slideshow.js\";\r\n\r\nconst defaults = {\r\n  // What toolbar items to display\r\n  display: [\"counter\", \"zoom\", \"slideshow\", \"fullscreen\", \"thumbs\", \"close\"],\r\n\r\n  // Only create a toolbar item if there is at least one image in the group\r\n  autoEnable: true,\r\n\r\n  // Toolbar items; can be links, buttons or `div` elements\r\n  items: {\r\n    counter: {\r\n      type: \"div\",\r\n      class: \"fancybox__counter\",\r\n      html: '<span data-fancybox-index=\"\"></span>&nbsp;/&nbsp;<span data-fancybox-count=\"\"></span>',\r\n      tabindex: -1,\r\n      position: \"left\",\r\n    },\r\n    prev: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--prev\",\r\n      label: \"PREV\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M15 4l-8 8 8 8\"/></svg>',\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        this.fancybox.prev();\r\n      },\r\n    },\r\n    next: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--next\",\r\n      label: \"NEXT\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M8 4l8 8-8 8\"/></svg>',\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        this.fancybox.next();\r\n      },\r\n    },\r\n    fullscreen: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--fullscreen\",\r\n      label: \"TOGGLE_FULLSCREEN\",\r\n      html: `<svg viewBox=\"0 0 24 24\">\r\n                <g><path d=\"M3 8 V3h5\"></path><path d=\"M21 8V3h-5\"></path><path d=\"M8 21H3v-5\"></path><path d=\"M16 21h5v-5\"></path></g>\r\n                <g><path d=\"M7 2v5H2M17 2v5h5M2 17h5v5M22 17h-5v5\"/></g>\r\n            </svg>`,\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        if (Fullscreen.element()) {\r\n          Fullscreen.deactivate();\r\n        } else {\r\n          Fullscreen.activate(this.fancybox.$container);\r\n        }\r\n      },\r\n    },\r\n    slideshow: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--slideshow\",\r\n      label: \"TOGGLE_SLIDESHOW\",\r\n      html: `<svg viewBox=\"0 0 24 24\">\r\n                <g><path d=\"M6 4v16\"/><path d=\"M20 12L6 20\"/><path d=\"M20 12L6 4\"/></g>\r\n                <g><path d=\"M7 4v15M17 4v15\"/></g>\r\n            </svg>`,\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        this.Slideshow.toggle();\r\n      },\r\n    },\r\n    zoom: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--zoom\",\r\n      label: \"TOGGLE_ZOOM\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><circle cx=\"10\" cy=\"10\" r=\"7\"></circle><path d=\"M16 16 L21 21\"></svg>',\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        const panzoom = this.fancybox.getSlide().Panzoom;\r\n\r\n        if (panzoom) {\r\n          panzoom.toggleZoom();\r\n        }\r\n      },\r\n    },\r\n    download: {\r\n      type: \"link\",\r\n      label: \"DOWNLOAD\",\r\n      class: \"fancybox__button--download\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M12 15V3m0 12l-4-4m4 4l4-4M2 17l.62 2.48A2 2 0 004.56 21h14.88a2 2 0 001.94-1.51L22 17\"/></svg>',\r\n      click: function (event) {\r\n        event.stopPropagation();\r\n      },\r\n    },\r\n    thumbs: {\r\n      type: \"button\",\r\n      label: \"TOGGLE_THUMBS\",\r\n      class: \"fancybox__button--thumbs\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><circle cx=\"4\" cy=\"4\" r=\"1\" /><circle cx=\"12\" cy=\"4\" r=\"1\" transform=\"rotate(90 12 4)\"/><circle cx=\"20\" cy=\"4\" r=\"1\" transform=\"rotate(90 20 4)\"/><circle cx=\"4\" cy=\"12\" r=\"1\" transform=\"rotate(90 4 12)\"/><circle cx=\"12\" cy=\"12\" r=\"1\" transform=\"rotate(90 12 12)\"/><circle cx=\"20\" cy=\"12\" r=\"1\" transform=\"rotate(90 20 12)\"/><circle cx=\"4\" cy=\"20\" r=\"1\" transform=\"rotate(90 4 20)\"/><circle cx=\"12\" cy=\"20\" r=\"1\" transform=\"rotate(90 12 20)\"/><circle cx=\"20\" cy=\"20\" r=\"1\" transform=\"rotate(90 20 20)\"/></svg>',\r\n      click: function (event) {\r\n        event.stopPropagation();\r\n\r\n        const thumbs = this.fancybox.plugins.Thumbs;\r\n\r\n        if (thumbs) {\r\n          thumbs.toggle();\r\n        }\r\n      },\r\n    },\r\n    close: {\r\n      type: \"button\",\r\n      label: \"CLOSE\",\r\n      class: \"fancybox__button--close\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M20 20L4 4m16 0L4 20\"></path></svg>',\r\n      tabindex: 0,\r\n      click: function (event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        this.fancybox.close();\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport class Toolbar {\r\n  constructor(fancybox) {\r\n    this.fancybox = fancybox;\r\n\r\n    this.$container = null;\r\n    this.state = \"init\";\r\n\r\n    for (const methodName of [\r\n      \"onInit\",\r\n      \"onPrepare\",\r\n      \"onDone\",\r\n      \"onKeydown\",\r\n      \"onClosing\",\r\n      \"onChange\",\r\n      \"onSettle\",\r\n      \"onRefresh\",\r\n    ]) {\r\n      this[methodName] = this[methodName].bind(this);\r\n    }\r\n\r\n    this.events = {\r\n      init: this.onInit,\r\n      prepare: this.onPrepare,\r\n      done: this.onDone,\r\n      keydown: this.onKeydown,\r\n      closing: this.onClosing,\r\n\r\n      // Clear Slideshow when user strts to change current slide\r\n      \"Carousel.change\": this.onChange,\r\n\r\n      // Set timer after carousel changes current slide; deactive if last slide is reached\r\n      \"Carousel.settle\": this.onSettle,\r\n\r\n      // Deactivate Slideshow on user interaction\r\n      \"Carousel.Panzoom.touchStart\": () => this.onRefresh(),\r\n\r\n      \"Image.startAnimation\": (fancybox, slide) => this.onRefresh(slide),\r\n      \"Image.afterUpdate\": (fancybox, slide) => this.onRefresh(slide),\r\n    };\r\n  }\r\n\r\n  onInit() {\r\n    // Disable self if current group does not contain at least one image\r\n    if (this.fancybox.option(\"Toolbar.autoEnable\")) {\r\n      let hasImage = false;\r\n\r\n      for (const item of this.fancybox.items) {\r\n        if (item.type === \"image\") {\r\n          hasImage = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!hasImage) {\r\n        this.state = \"disabled\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Disable the creation of a close button, if one exists in the toolbar\r\n    for (const key of this.fancybox.option(\"Toolbar.display\")) {\r\n      const id = isPlainObject(key) ? key.id : key;\r\n\r\n      if (id === \"close\") {\r\n        this.fancybox.options.closeButton = false;\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onPrepare() {\r\n    // Skip if disabled\r\n    if (this.state !== \"init\") {\r\n      return;\r\n    }\r\n\r\n    this.build();\r\n\r\n    this.update();\r\n\r\n    this.Slideshow = new Slideshow(this.fancybox);\r\n\r\n    if (!this.fancybox.Carousel.prevPage) {\r\n      if (this.fancybox.option(\"slideshow.autoStart\")) {\r\n        this.Slideshow.activate();\r\n      }\r\n\r\n      if (this.fancybox.option(\"fullscreen.autoStart\") && !Fullscreen.element()) {\r\n        try {\r\n          Fullscreen.activate(this.fancybox.$container);\r\n        } catch (error) {}\r\n      }\r\n    }\r\n  }\r\n\r\n  onFsChange() {\r\n    window.scrollTo(Fullscreen.pageXOffset, Fullscreen.pageYOffset);\r\n  }\r\n\r\n  onSettle() {\r\n    if (this.Slideshow && this.Slideshow.isActive()) {\r\n      if (\r\n        this.fancybox.getSlide().index === this.fancybox.Carousel.slides.length - 1 &&\r\n        !this.fancybox.option(\"infinite\")\r\n      ) {\r\n        this.Slideshow.deactivate();\r\n      } else if (this.fancybox.getSlide().state === \"done\") {\r\n        this.Slideshow.setTimer();\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange() {\r\n    this.update();\r\n\r\n    if (this.Slideshow && this.Slideshow.isActive()) {\r\n      this.Slideshow.clearTimer();\r\n    }\r\n  }\r\n\r\n  onDone(fancybox, slide) {\r\n    if (slide.index === fancybox.getSlide().index) {\r\n      this.update();\r\n\r\n      if (this.Slideshow && this.Slideshow.isActive()) {\r\n        if (!this.fancybox.option(\"infinite\") && slide.index === this.fancybox.Carousel.slides.length - 1) {\r\n          this.Slideshow.deactivate();\r\n        } else {\r\n          this.Slideshow.setTimer();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRefresh(slide) {\r\n    if (!slide || slide.index === this.fancybox.getSlide().index) {\r\n      this.update();\r\n\r\n      if (this.Slideshow && this.Slideshow.isActive() && (!slide || slide.state === \"done\")) {\r\n        this.Slideshow.deactivate();\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeydown(fancybox, key, event) {\r\n    if (key === \" \" && this.Slideshow) {\r\n      this.Slideshow.toggle();\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onClosing() {\r\n    if (this.Slideshow) {\r\n      this.Slideshow.deactivate();\r\n    }\r\n\r\n    document.removeEventListener(\"fullscreenchange\", this.onFsChange);\r\n  }\r\n\r\n  /**\r\n   * Create link, button or `div` element for the toolbar\r\n   * @param {Object} obj\r\n   * @returns HTMLElement\r\n   */\r\n  createElement(obj) {\r\n    let $el;\r\n\r\n    if (obj.type === \"div\") {\r\n      $el = document.createElement(\"div\");\r\n    } else {\r\n      $el = document.createElement(obj.type === \"link\" ? \"a\" : \"button\");\r\n      $el.classList.add(\"carousel__button\");\r\n    }\r\n\r\n    $el.innerHTML = obj.html;\r\n\r\n    $el.setAttribute(\"tabindex\", obj.tabindex || 0);\r\n\r\n    if (obj.class) {\r\n      $el.classList.add(...obj.class.split(\" \"));\r\n    }\r\n\r\n    if (obj.label) {\r\n      $el.setAttribute(\"title\", this.fancybox.localize(`{{${obj.label}}}`));\r\n    }\r\n\r\n    if (obj.click) {\r\n      $el.addEventListener(\"click\", obj.click.bind(this));\r\n    }\r\n\r\n    if (obj.id === \"prev\") {\r\n      $el.setAttribute(\"data-fancybox-prev\", \"\");\r\n    }\r\n\r\n    if (obj.id === \"next\") {\r\n      $el.setAttribute(\"data-fancybox-next\", \"\");\r\n    }\r\n\r\n    const $svg = $el.querySelector(\"svg\");\r\n\r\n    if ($svg) {\r\n      $svg.setAttribute(\"role\", \"img\");\r\n      $svg.setAttribute(\"tabindex\", \"-1\");\r\n      $svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n    }\r\n\r\n    return $el;\r\n  }\r\n\r\n  /**\r\n   * Create all DOM elements\r\n   */\r\n  build() {\r\n    this.cleanup();\r\n\r\n    const all_items = this.fancybox.option(\"Toolbar.items\");\r\n    const all_groups = [\r\n      {\r\n        position: \"left\",\r\n        items: [],\r\n      },\r\n      {\r\n        position: \"center\",\r\n        items: [],\r\n      },\r\n      {\r\n        position: \"right\",\r\n        items: [],\r\n      },\r\n    ];\r\n\r\n    const thumbs = this.fancybox.plugins.Thumbs;\r\n\r\n    // 1st step - group toolbar elements by position\r\n    for (const key of this.fancybox.option(\"Toolbar.display\")) {\r\n      let id, item;\r\n\r\n      if (isPlainObject(key)) {\r\n        id = key.id;\r\n        item = extend({}, all_items[id], key);\r\n      } else {\r\n        id = key;\r\n        item = all_items[id];\r\n      }\r\n\r\n      if ([\"counter\", \"next\", \"prev\", \"slideshow\"].includes(id) && this.fancybox.items.length < 2) {\r\n        continue;\r\n      }\r\n\r\n      if (id === \"fullscreen\") {\r\n        if (!document.fullscreenEnabled || window.fullScreen) {\r\n          continue;\r\n        }\r\n\r\n        document.addEventListener(\"fullscreenchange\", this.onFsChange);\r\n      }\r\n\r\n      if (id === \"thumbs\" && (!thumbs || thumbs.state === \"disabled\")) {\r\n        continue;\r\n      }\r\n\r\n      if (!item) {\r\n        continue;\r\n      }\r\n\r\n      let position = item.position || \"right\";\r\n\r\n      let group = all_groups.find((obj) => obj.position === position);\r\n\r\n      if (group) {\r\n        group.items.push(item);\r\n      }\r\n    }\r\n\r\n    // 2st step - create DOM elements\r\n    const $container = document.createElement(\"div\");\r\n    $container.classList.add(\"fancybox__toolbar\");\r\n\r\n    for (const group of all_groups) {\r\n      if (group.items.length) {\r\n        const $wrap = document.createElement(\"div\");\r\n        $wrap.classList.add(\"fancybox__toolbar__items\");\r\n        $wrap.classList.add(`fancybox__toolbar__items--${group.position}`);\r\n\r\n        for (const obj of group.items) {\r\n          $wrap.appendChild(this.createElement(obj));\r\n        }\r\n\r\n        $container.appendChild($wrap);\r\n      }\r\n    }\r\n\r\n    // Add toolbar container to DOM\r\n    this.fancybox.$carousel.parentNode.insertBefore($container, this.fancybox.$carousel);\r\n\r\n    this.$container = $container;\r\n  }\r\n\r\n  /**\r\n   * Update element state depending on index of current slide\r\n   */\r\n  update() {\r\n    const slide = this.fancybox.getSlide();\r\n    const idx = slide.index;\r\n    const cnt = this.fancybox.items.length;\r\n\r\n    // Download links\r\n    // ====\r\n    const src = slide.downloadSrc || (slide.type === \"image\" && !slide.error ? slide.src : null);\r\n\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\"a.fancybox__button--download\")) {\r\n      if (src) {\r\n        $el.removeAttribute(\"disabled\");\r\n        $el.removeAttribute(\"tabindex\");\r\n\r\n        $el.setAttribute(\"href\", src);\r\n        $el.setAttribute(\"download\", src);\r\n        $el.setAttribute(\"target\", \"_blank\");\r\n      } else {\r\n        $el.setAttribute(\"disabled\", \"\");\r\n        $el.setAttribute(\"tabindex\", -1);\r\n\r\n        $el.removeAttribute(\"href\");\r\n        $el.removeAttribute(\"download\");\r\n      }\r\n    }\r\n\r\n    // Zoom buttons\r\n    // ===\r\n    const panzoom = slide.Panzoom;\r\n    const canZoom = panzoom && panzoom.option(\"maxScale\") > panzoom.option(\"baseScale\");\r\n\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\".fancybox__button--zoom\")) {\r\n      if (canZoom) {\r\n        $el.removeAttribute(\"disabled\");\r\n      } else {\r\n        $el.setAttribute(\"disabled\", \"\");\r\n      }\r\n    }\r\n\r\n    // Counter\r\n    // ====\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-index]\")) {\r\n      $el.innerHTML = slide.index + 1;\r\n    }\r\n\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-count]\")) {\r\n      $el.innerHTML = cnt;\r\n    }\r\n\r\n    // Disable prev/next links if gallery is not infinite and reached start/end\r\n    if (!this.fancybox.option(\"infinite\")) {\r\n      for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-prev]\")) {\r\n        if (idx === 0) {\r\n          $el.setAttribute(\"disabled\", \"\");\r\n        } else {\r\n          $el.removeAttribute(\"disabled\");\r\n        }\r\n      }\r\n\r\n      for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-next]\")) {\r\n        if (idx === cnt - 1) {\r\n          $el.setAttribute(\"disabled\", \"\");\r\n        } else {\r\n          $el.removeAttribute(\"disabled\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  cleanup() {\r\n    if (this.Slideshow && this.Slideshow.isActive()) {\r\n      this.Slideshow.clearTimer();\r\n    }\r\n\r\n    if (this.$container) {\r\n      this.$container.remove();\r\n    }\r\n\r\n    this.$container = null;\r\n  }\r\n\r\n  attach() {\r\n    this.fancybox.on(this.events);\r\n  }\r\n\r\n  detach() {\r\n    this.fancybox.off(this.events);\r\n\r\n    this.cleanup();\r\n  }\r\n}\r\n\r\n// Expose defaults\r\nToolbar.defaults = defaults;\r\n","import { ScrollLock } from \"./ScrollLock/ScrollLock.js\";\nimport { Thumbs } from \"./Thumbs/Thumbs.js\";\nimport { Html } from \"./Html/Html.js\";\nimport { Image } from \"./Image/Image.js\";\nimport { Hash } from \"./Hash/Hash.js\";\nimport { Toolbar } from \"./Toolbar/Toolbar.js\";\n\nexport const Plugins = {\n  ScrollLock,\n  Thumbs,\n  Html,\n  Toolbar,\n  Image,\n  Hash,\n};\n","import { extend } from \"../shared/utils/extend.js\";\nimport { round } from \"../shared/utils/round.js\";\n\nimport { ResizeObserver } from \"../shared/utils/ResizeObserver.js\";\nimport { PointerTracker, getMidpoint, getDistance } from \"../shared/utils/PointerTracker.js\";\n\nimport { isScrollable } from \"../shared/utils/isScrollable.js\";\nimport { getTextNodeFromPoint } from \"../shared/utils/getTextNodeFromPoint.js\";\n\nimport { getFullWidth, getFullHeight, calculateAspectRatioFit } from \"../shared/utils/getDimensions.js\";\n\nimport { Base } from \"../shared/Base/Base.js\";\n\nimport { Plugins } from \"./plugins/index.js\";\n\nconst defaults = {\n  // Enable touch guestures\n  touch: true,\n\n  // Enable zooming\n  zoom: true,\n\n  // Enable pinch gesture to zoom in/out using two fingers\n  pinchToZoom: true,\n\n  // Disable dragging if scale level is equal to value of `baseScale` option\n  panOnlyZoomed: false,\n\n  // Lock axis while dragging,\n  // possible values: false | \"x\" | \"y\" | \"xy\"\n  lockAxis: false,\n\n  // * All friction values are inside [0, 1) interval,\n  // * where 0 would change instantly, but 0.99 would update extremely slowly\n\n  // Friction while panning/dragging\n  friction: 0.64,\n\n  // Friction while decelerating after drag end\n  decelFriction: 0.88,\n\n  // Friction while scaling\n  zoomFriction: 0.74,\n\n  // Bounciness after hitting the edge\n  bounceForce: 0.2,\n\n  // Initial scale level\n  baseScale: 1,\n\n  // Minimum scale level\n  minScale: 1,\n\n  // Maximum scale level\n  maxScale: 2,\n\n  // Default scale step while zooming\n  step: 0.5,\n\n  // Allow to select text,\n  // if enabled, dragging will be disabled when text selection is detected\n  textSelection: false,\n\n  // Add `click` event listener,\n  // possible values: true | false | function | \"toggleZoom\"\n  click: \"toggleZoom\",\n\n  // Add `wheel` event listener,\n  // possible values: true | false | function |  \"zoom\"\n  wheel: \"zoom\",\n\n  // Value for zoom on mouse wheel\n  wheelFactor: 42,\n\n  // Number of wheel events after which it should stop preventing default behaviour of mouse wheel\n  wheelLimit: 5,\n\n  // Class name added to `$viewport` element to indicate if content is draggable\n  draggableClass: \"is-draggable\",\n\n  // Class name added to `$viewport` element to indicate that user is currently dragging\n  draggingClass: \"is-dragging\",\n\n  // Content will be scaled by this number,\n  // this can also be a function which should return a number, for example:\n  // ratio: function() { return 1 / (window.devicePixelRatio || 1) }\n  ratio: 1,\n};\n\nexport class Panzoom extends Base {\n  /**\n   * Panzoom constructor\n   * @constructs Panzoom\n   * @param {HTMLElement} $viewport Panzoom container\n   * @param {Object} [options] Options for Panzoom\n   */\n  constructor($container, options = {}) {\n    super(extend(true, {}, defaults, options));\n\n    this.state = \"init\";\n\n    this.$container = $container;\n\n    // Bind event handlers for referencability\n    for (const methodName of [\"onLoad\", \"onWheel\", \"onClick\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.initLayout();\n\n    this.resetValues();\n\n    this.attachPlugins(Panzoom.Plugins);\n\n    this.trigger(\"init\");\n\n    this.updateMetrics();\n\n    this.attachEvents();\n\n    this.trigger(\"ready\");\n\n    if (this.option(\"centerOnStart\") === false) {\n      this.state = \"ready\";\n    } else {\n      this.panTo({\n        friction: 0,\n      });\n    }\n  }\n\n  /**\n   * Create references to container, viewport and content elements\n   */\n  initLayout() {\n    const $container = this.$container;\n\n    // Make sure content element exists\n    if (!($container instanceof HTMLElement)) {\n      throw new Error(\"Panzoom: Container not found\");\n    }\n\n    const $content = this.option(\"content\") || $container.querySelector(\".panzoom__content\");\n\n    // Make sure content element exists\n    if (!$content) {\n      throw new Error(\"Panzoom: Content not found\");\n    }\n\n    this.$content = $content;\n\n    let $viewport = this.option(\"viewport\") || $container.querySelector(\".panzoom__viewport\");\n\n    if (!$viewport && this.option(\"wrapInner\") !== false) {\n      $viewport = document.createElement(\"div\");\n      $viewport.classList.add(\"panzoom__viewport\");\n\n      $viewport.append(...$container.childNodes);\n\n      $container.appendChild($viewport);\n    }\n\n    this.$viewport = $viewport || $content.parentNode;\n  }\n\n  /**\n   * Restore instance variables to default values\n   */\n  resetValues() {\n    this.updateRate = this.option(\"updateRate\", /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) ? 250 : 24);\n\n    this.container = {\n      width: 0,\n      height: 0,\n    };\n\n    this.viewport = {\n      width: 0,\n      height: 0,\n    };\n\n    this.content = {\n      // Full content dimensions (naturalWidth/naturalHeight for images)\n      origHeight: 0,\n      origWidth: 0,\n\n      // Current dimensions of the content\n      width: 0,\n      height: 0,\n\n      // Current position; these values reflect CSS `transform` value\n      x: this.option(\"x\", 0),\n      y: this.option(\"y\", 0),\n\n      // Current scale; does not reflect CSS `transform` value\n      scale: this.option(\"baseScale\"),\n    };\n\n    // End values of current pan / zoom animation\n    this.transform = {\n      x: 0,\n      y: 0,\n      scale: 1,\n    };\n\n    this.resetDragPosition();\n  }\n\n  /**\n   * Handle `load` event\n   * @param {Event} event\n   */\n  onLoad(event) {\n    this.updateMetrics();\n\n    this.panTo({ scale: this.option(\"baseScale\"), friction: 0 });\n\n    this.trigger(\"load\", event);\n  }\n\n  /**\n   * Handle `click` event\n   * @param {Event} event\n   */\n  onClick(event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Skip if text is selected\n    if (this.option(\"textSelection\") && window.getSelection().toString().length) {\n      event.stopPropagation();\n      return;\n    }\n\n    const rect = this.$content.getClientRects()[0];\n\n    // Check if container has changed position (for example, when current instance is inside another one)\n    if (this.state !== \"ready\") {\n      if (\n        this.dragPosition.midPoint ||\n        Math.abs(rect.top - this.dragStart.rect.top) > 1 ||\n        Math.abs(rect.left - this.dragStart.rect.left) > 1\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        return;\n      }\n    }\n\n    if (this.trigger(\"click\", event) === false) {\n      return;\n    }\n\n    if (this.option(\"zoom\") && this.option(\"click\") === \"toggleZoom\") {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.zoomWithClick(event);\n    }\n  }\n\n  /**\n   * Handle `wheel` event\n   * @param {Event} event\n   */\n  onWheel(event) {\n    if (this.trigger(\"wheel\", event) === false) {\n      return;\n    }\n\n    if (this.option(\"zoom\") && this.option(\"wheel\")) {\n      this.zoomWithWheel(event);\n    }\n  }\n\n  /**\n   * Change zoom level depending on scroll direction\n   * @param {Event} event `wheel` event\n   */\n  zoomWithWheel(event) {\n    if (this.changedDelta === undefined) {\n      this.changedDelta = 0;\n    }\n\n    const delta = Math.max(-1, Math.min(1, -event.deltaY || -event.deltaX || event.wheelDelta || -event.detail));\n    const scale = this.content.scale;\n\n    let newScale = (scale * (100 + delta * this.option(\"wheelFactor\"))) / 100;\n\n    if (\n      (delta < 0 && Math.abs(scale - this.option(\"minScale\")) < 0.01) ||\n      (delta > 0 && Math.abs(scale - this.option(\"maxScale\")) < 0.01)\n    ) {\n      this.changedDelta += Math.abs(delta);\n      newScale = scale;\n    } else {\n      this.changedDelta = 0;\n      newScale = Math.max(Math.min(newScale, this.option(\"maxScale\")), this.option(\"minScale\"));\n    }\n\n    if (this.changedDelta > this.option(\"wheelLimit\")) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (newScale === scale) {\n      return;\n    }\n\n    const rect = this.$content.getBoundingClientRect();\n\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    this.zoomTo(newScale, { x, y });\n  }\n\n  /**\n   * Change zoom level depending on click coordinates\n   * @param {Event} event `click` event\n   */\n  zoomWithClick(event) {\n    const rect = this.$content.getClientRects()[0];\n\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    this.toggleZoom({ x, y });\n  }\n\n  /**\n   * Attach load, wheel and click event listeners, initialize `resizeObserver` and `PointerTracker`\n   */\n  attachEvents() {\n    this.$content.addEventListener(\"load\", this.onLoad);\n\n    this.$container.addEventListener(\"wheel\", this.onWheel, { passive: false });\n    this.$container.addEventListener(\"click\", this.onClick, { passive: false });\n\n    this.initObserver();\n\n    const pointerTracker = new PointerTracker(this.$container, {\n      start: (pointer, event) => {\n        if (!this.option(\"touch\")) {\n          return false;\n        }\n\n        if (this.velocity.scale < 0) {\n          return;\n        }\n\n        if (!pointerTracker.currentPointers.length) {\n          const ignoreClickedElement =\n            [\"BUTTON\", \"TEXTAREA\", \"OPTION\", \"INPUT\", \"SELECT\", \"VIDEO\"].indexOf(event.target.nodeName) !== -1;\n\n          if (ignoreClickedElement) {\n            return false;\n          }\n\n          // Allow text selection\n          if (this.option(\"textSelection\") && getTextNodeFromPoint(event.target, event.clientX, event.clientY)) {\n            return false;\n          }\n          // Allow scrolling\n          if (isScrollable(event.target)) {\n            return false;\n          }\n        }\n\n        if (this.trigger(\"touchStart\", event) === false) {\n          return false;\n        }\n\n        this.state = \"pointerdown\";\n\n        this.resetDragPosition();\n\n        this.dragPosition.midPoint = null;\n        this.dragPosition.time = Date.now();\n\n        return true;\n      },\n      move: (previousPointers, currentPointers, event) => {\n        if (this.state !== \"pointerdown\") {\n          return;\n        }\n\n        if (this.trigger(\"touchMove\", event) == false) {\n          event.preventDefault();\n          return;\n        }\n\n        // Disable touch action if current zoom level is below base level\n        if (\n          currentPointers.length < 2 &&\n          this.option(\"panOnlyZoomed\") == true &&\n          this.content.width <= this.viewport.width &&\n          this.content.height <= this.viewport.height &&\n          this.transform.scale <= this.option(\"baseScale\")\n        ) {\n          return;\n        }\n\n        if (currentPointers.length > 1 && (!this.option(\"zoom\") || this.option(\"pinchToZoom\") === false)) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        const prevMidpoint = getMidpoint(previousPointers[0], previousPointers[1]);\n        const newMidpoint = getMidpoint(currentPointers[0], currentPointers[1]);\n\n        const panX = newMidpoint.clientX - prevMidpoint.clientX;\n        const panY = newMidpoint.clientY - prevMidpoint.clientY;\n\n        const prevDistance = getDistance(previousPointers[0], previousPointers[1]);\n        const newDistance = getDistance(currentPointers[0], currentPointers[1]);\n\n        const scaleDiff = prevDistance ? newDistance / prevDistance : 1;\n\n        this.dragOffset.x += panX;\n        this.dragOffset.y += panY;\n\n        this.dragOffset.scale *= scaleDiff;\n\n        this.dragOffset.time = Date.now() - this.dragPosition.time;\n\n        const axisToLock = this.dragStart.scale === 1 && this.option(\"lockAxis\");\n\n        if (axisToLock && !this.lockAxis) {\n          if (Math.abs(this.dragOffset.x) < 6 && Math.abs(this.dragOffset.y) < 6) {\n            return;\n          }\n\n          if (axisToLock === \"xy\") {\n            const angle = Math.abs((Math.atan2(this.dragOffset.y, this.dragOffset.x) * 180) / Math.PI);\n\n            this.lockAxis = angle > 45 && angle < 135 ? \"y\" : \"x\";\n          } else {\n            this.lockAxis = axisToLock;\n          }\n        }\n\n        if (this.lockAxis) {\n          this.dragOffset[this.lockAxis === \"x\" ? \"y\" : \"x\"] = 0;\n        }\n\n        this.$container.classList.add(this.option(\"draggingClass\"));\n\n        if (!(this.transform.scale === this.option(\"baseScale\") && this.lockAxis === \"y\")) {\n          this.dragPosition.x = this.dragStart.x + this.dragOffset.x;\n        }\n\n        if (!(this.transform.scale === this.option(\"baseScale\") && this.lockAxis === \"x\")) {\n          this.dragPosition.y = this.dragStart.y + this.dragOffset.y;\n        }\n\n        this.dragPosition.scale = this.dragStart.scale * this.dragOffset.scale;\n\n        if (currentPointers.length > 1) {\n          const startPoint = getMidpoint(pointerTracker.startPointers[0], pointerTracker.startPointers[1]);\n\n          const xPos = startPoint.clientX - this.dragStart.rect.x;\n          const yPos = startPoint.clientY - this.dragStart.rect.y;\n\n          const { deltaX, deltaY } = this.getZoomDelta(this.content.scale * this.dragOffset.scale, xPos, yPos);\n\n          this.dragPosition.x -= deltaX;\n          this.dragPosition.y -= deltaY;\n\n          this.dragPosition.midPoint = newMidpoint;\n        } else {\n          this.setDragResistance();\n        }\n\n        // Update final position\n        this.transform = {\n          x: this.dragPosition.x,\n          y: this.dragPosition.y,\n          scale: this.dragPosition.scale,\n        };\n\n        this.startAnimation();\n      },\n      end: (pointer, event) => {\n        if (this.state !== \"pointerdown\") {\n          return;\n        }\n\n        this._dragOffset = { ...this.dragOffset };\n\n        if (pointerTracker.currentPointers.length) {\n          this.resetDragPosition();\n\n          return;\n        }\n\n        this.state = \"decel\";\n        this.friction = this.option(\"decelFriction\");\n\n        this.recalculateTransform();\n\n        this.$container.classList.remove(this.option(\"draggingClass\"));\n\n        if (this.trigger(\"touchEnd\", event) === false) {\n          return;\n        }\n\n        if (this.state !== \"decel\") {\n          return;\n        }\n\n        // * Check if scaled content past limits\n\n        // Below minimum\n        const minScale = this.option(\"minScale\");\n\n        if (this.transform.scale < minScale) {\n          this.zoomTo(minScale, { friction: 0.64 });\n\n          return;\n        }\n\n        // Exceed maximum\n        const maxScale = this.option(\"maxScale\");\n\n        if (this.transform.scale - maxScale > 0.01) {\n          const last = this.dragPosition.midPoint || pointer;\n          const rect = this.$content.getClientRects()[0];\n\n          this.zoomTo(maxScale, {\n            friction: 0.64,\n            x: last.clientX - rect.left,\n            y: last.clientY - rect.top,\n          });\n\n          return;\n        }\n      },\n    });\n\n    this.pointerTracker = pointerTracker;\n  }\n\n  initObserver() {\n    if (this.resizeObserver) {\n      return;\n    }\n\n    this.resizeObserver = new ResizeObserver(() => {\n      if (this.updateTimer) {\n        return;\n      }\n\n      this.updateTimer = setTimeout(() => {\n        const rect = this.$container.getBoundingClientRect();\n\n        if (!(rect.width && rect.height)) {\n          this.updateTimer = null;\n          return;\n        }\n\n        // Check to see if there are any changes\n        if (Math.abs(rect.width - this.container.width) > 1 || Math.abs(rect.height - this.container.height) > 1) {\n          if (this.isAnimating()) {\n            this.endAnimation(true);\n          }\n\n          this.updateMetrics();\n\n          this.panTo({\n            x: this.content.x,\n            y: this.content.y,\n            scale: this.option(\"baseScale\"),\n            friction: 0,\n          });\n        }\n\n        this.updateTimer = null;\n      }, this.updateRate);\n    });\n\n    this.resizeObserver.observe(this.$container);\n  }\n\n  /**\n   * Restore drag related variables to default values\n   */\n  resetDragPosition() {\n    this.lockAxis = null;\n    this.friction = this.option(\"friction\");\n\n    this.velocity = {\n      x: 0,\n      y: 0,\n      scale: 0,\n    };\n\n    const { x, y, scale } = this.content;\n\n    this.dragStart = {\n      rect: this.$content.getBoundingClientRect(),\n      x,\n      y,\n      scale,\n    };\n\n    this.dragPosition = {\n      ...this.dragPosition,\n      x,\n      y,\n      scale,\n    };\n\n    this.dragOffset = {\n      x: 0,\n      y: 0,\n      scale: 1,\n      time: 0,\n    };\n  }\n\n  /**\n   * Trigger update events before/after resizing content and viewport\n   */\n  updateMetrics(silently) {\n    if (silently !== true) {\n      this.trigger(\"beforeUpdate\");\n    }\n\n    const $container = this.$container;\n    const $content = this.$content;\n    const $viewport = this.$viewport;\n\n    const contentIsImage = this.$content instanceof HTMLImageElement;\n    const contentIsZoomable = this.option(\"zoom\");\n    const shouldResizeParent = this.option(\"resizeParent\", contentIsZoomable);\n\n    let origWidth = getFullWidth(this.$content);\n    let origHeight = getFullHeight(this.$content);\n\n    Object.assign($content.style, {\n      width: \"\",\n      height: \"\",\n      maxWidth: \"\",\n      maxHeight: \"\",\n    });\n\n    if (shouldResizeParent) {\n      Object.assign($viewport.style, { width: \"\", height: \"\" });\n    }\n\n    const ratio = this.option(\"ratio\");\n\n    origWidth = round(origWidth * ratio);\n    origHeight = round(origHeight * ratio);\n\n    let width = origWidth;\n    let height = origHeight;\n\n    const contentRect = $content.getBoundingClientRect();\n    const viewportRect = $viewport.getBoundingClientRect();\n\n    const containerRect = $viewport == $container ? viewportRect : $container.getBoundingClientRect();\n\n    let viewportWidth = Math.max($viewport.offsetWidth, round(viewportRect.width));\n    let viewportHeight = Math.max($viewport.offsetHeight, round(viewportRect.height));\n\n    let viewportStyles = window.getComputedStyle($viewport);\n    viewportWidth -= parseFloat(viewportStyles.paddingLeft) + parseFloat(viewportStyles.paddingRight);\n    viewportHeight -= parseFloat(viewportStyles.paddingTop) + parseFloat(viewportStyles.paddingBottom);\n\n    this.viewport.width = viewportWidth;\n    this.viewport.height = viewportHeight;\n\n    if (contentIsZoomable) {\n      if (Math.abs(origWidth - contentRect.width) > 0.1 || Math.abs(origHeight - contentRect.height) > 0.1) {\n        const rez = calculateAspectRatioFit(\n          origWidth,\n          origHeight,\n          Math.min(origWidth, contentRect.width),\n          Math.min(origHeight, contentRect.height)\n        );\n\n        width = round(rez.width);\n        height = round(rez.height);\n      }\n\n      Object.assign($content.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: \"\",\n      });\n    }\n\n    if (shouldResizeParent) {\n      Object.assign($viewport.style, { width: `${width}px`, height: `${height}px` });\n\n      this.viewport = { ...this.viewport, width, height };\n    }\n\n    if (contentIsImage && contentIsZoomable && typeof this.options.maxScale !== \"function\") {\n      const maxScale = this.option(\"maxScale\");\n\n      this.options.maxScale = function () {\n        return this.content.origWidth > 0 && this.content.fitWidth > 0\n          ? this.content.origWidth / this.content.fitWidth\n          : maxScale;\n      };\n    }\n\n    this.content = {\n      ...this.content,\n      origWidth,\n      origHeight,\n      fitWidth: width,\n      fitHeight: height,\n      width,\n      height,\n      scale: 1,\n      isZoomable: contentIsZoomable,\n    };\n\n    this.container = { width: containerRect.width, height: containerRect.height };\n\n    if (silently !== true) {\n      this.trigger(\"afterUpdate\");\n    }\n  }\n\n  /**\n   * Increase zoom level\n   * @param {Number} [step] Zoom ratio; `0.5` would increase scale from 1 to 1.5\n   */\n  zoomIn(step) {\n    this.zoomTo(this.content.scale + (step || this.option(\"step\")));\n  }\n\n  /**\n   * Decrease zoom level\n   * @param {Number} [step] Zoom ratio; `0.5` would decrease scale from 1.5 to 1\n   */\n  zoomOut(step) {\n    this.zoomTo(this.content.scale - (step || this.option(\"step\")));\n  }\n\n  /**\n   * Toggles zoom level between max and base levels\n   * @param {Object} [options] Additional options\n   */\n  toggleZoom(props = {}) {\n    const maxScale = this.option(\"maxScale\");\n    const baseScale = this.option(\"baseScale\");\n\n    const scale = this.content.scale > baseScale + (maxScale - baseScale) * 0.5 ? baseScale : maxScale;\n\n    this.zoomTo(scale, props);\n  }\n\n  /**\n   * Animate to given zoom level\n   * @param {Number} scale New zoom level\n   * @param {Object} [options] Additional options\n   */\n  zoomTo(scale = this.option(\"baseScale\"), { x = null, y = null } = {}) {\n    scale = Math.max(Math.min(scale, this.option(\"maxScale\")), this.option(\"minScale\"));\n\n    // Adjust zoom position\n    const currentScale = round(this.content.scale / (this.content.width / this.content.fitWidth), 10000000);\n\n    if (x === null) {\n      x = this.content.width * currentScale * 0.5;\n    }\n\n    if (y === null) {\n      y = this.content.height * currentScale * 0.5;\n    }\n\n    const { deltaX, deltaY } = this.getZoomDelta(scale, x, y);\n\n    x = this.content.x - deltaX;\n    y = this.content.y - deltaY;\n\n    this.panTo({ x, y, scale, friction: this.option(\"zoomFriction\") });\n  }\n\n  /**\n   * Calculate difference for top/left values if content would scale at given coordinates\n   * @param {Number} scale\n   * @param {Number} x\n   * @param {Number} y\n   * @returns {Object}\n   */\n  getZoomDelta(scale, x = 0, y = 0) {\n    const currentWidth = this.content.fitWidth * this.content.scale;\n    const currentHeight = this.content.fitHeight * this.content.scale;\n\n    const percentXInCurrentBox = x > 0 && currentWidth ? x / currentWidth : 0;\n    const percentYInCurrentBox = y > 0 && currentHeight ? y / currentHeight : 0;\n\n    const nextWidth = this.content.fitWidth * scale;\n    const nextHeight = this.content.fitHeight * scale;\n\n    const deltaX = (nextWidth - currentWidth) * percentXInCurrentBox;\n    const deltaY = (nextHeight - currentHeight) * percentYInCurrentBox;\n\n    return { deltaX, deltaY };\n  }\n\n  /**\n   * Animate to given positon and/or zoom level\n   * @param {Object} [options] Additional options\n   */\n  panTo({\n    x = this.content.x,\n    y = this.content.y,\n    scale,\n    friction = this.option(\"friction\"),\n    ignoreBounds = false,\n  } = {}) {\n    scale = scale || this.content.scale || 1;\n\n    if (!ignoreBounds) {\n      const { boundX, boundY } = this.getBounds(scale);\n\n      if (boundX) {\n        x = Math.max(Math.min(x, boundX.to), boundX.from);\n      }\n\n      if (boundY) {\n        y = Math.max(Math.min(y, boundY.to), boundY.from);\n      }\n    }\n\n    this.friction = friction;\n\n    this.transform = {\n      ...this.transform,\n      x,\n      y,\n      scale,\n    };\n\n    if (friction) {\n      this.state = \"panning\";\n\n      this.velocity = {\n        x: (1 / this.friction - 1) * (x - this.content.x),\n        y: (1 / this.friction - 1) * (y - this.content.y),\n        scale: (1 / this.friction - 1) * (scale - this.content.scale),\n      };\n\n      this.startAnimation();\n    } else {\n      this.endAnimation();\n    }\n  }\n\n  /**\n   * Start animation loop\n   */\n  startAnimation() {\n    if (!this.rAF) {\n      this.trigger(\"startAnimation\");\n    } else {\n      cancelAnimationFrame(this.rAF);\n    }\n\n    this.rAF = requestAnimationFrame(() => this.animate());\n  }\n\n  /**\n   * Process animation frame\n   */\n  animate() {\n    this.setEdgeForce();\n    this.setDragForce();\n\n    this.velocity.x *= this.friction;\n    this.velocity.y *= this.friction;\n\n    this.velocity.scale *= this.friction;\n\n    this.content.x += this.velocity.x;\n    this.content.y += this.velocity.y;\n\n    this.content.scale += this.velocity.scale;\n\n    if (this.isAnimating()) {\n      this.setTransform();\n    } else if (this.state !== \"pointerdown\") {\n      this.endAnimation();\n\n      return;\n    }\n\n    this.rAF = requestAnimationFrame(() => this.animate());\n  }\n\n  /**\n   * Calculate boundaries\n   */\n  getBounds(scale) {\n    let boundX = this.boundX;\n    let boundY = this.boundY;\n\n    if (boundX !== undefined && boundY !== undefined) {\n      return { boundX, boundY };\n    }\n\n    boundX = { from: 0, to: 0 };\n    boundY = { from: 0, to: 0 };\n\n    scale = scale || this.transform.scale;\n\n    const fitWidth = this.content.fitWidth;\n    const fitHeight = this.content.fitHeight;\n\n    const width = fitWidth * scale;\n    const height = fitHeight * scale;\n\n    const viewportWidth = this.viewport.width;\n    const viewportHeight = this.viewport.height;\n\n    if (fitWidth <= viewportWidth) {\n      const deltaX1 = (viewportWidth - width) * 0.5;\n      const deltaX2 = (width - fitWidth) * 0.5;\n\n      boundX.from = round(deltaX1 - deltaX2);\n      boundX.to = round(deltaX1 + deltaX2);\n    } else {\n      boundX.from = round(viewportWidth - width);\n    }\n\n    if (fitHeight <= viewportHeight) {\n      const deltaY1 = (viewportHeight - height) * 0.5;\n      const deltaY2 = (height - fitHeight) * 0.5;\n\n      boundY.from = round(deltaY1 - deltaY2);\n      boundY.to = round(deltaY1 + deltaY2);\n    } else {\n      boundY.from = round(viewportHeight - width);\n    }\n\n    return { boundX, boundY };\n  }\n\n  /**\n   * Change animation velocity if boundary is reached\n   */\n  setEdgeForce() {\n    if (this.state !== \"decel\") {\n      return;\n    }\n\n    const bounceForce = this.option(\"bounceForce\");\n\n    const { boundX, boundY } = this.getBounds(Math.max(this.transform.scale, this.content.scale));\n\n    let pastLeft, pastRight, pastTop, pastBottom;\n\n    if (boundX) {\n      pastLeft = this.content.x < boundX.from;\n      pastRight = this.content.x > boundX.to;\n    }\n\n    if (boundY) {\n      pastTop = this.content.y < boundY.from;\n      pastBottom = this.content.y > boundY.to;\n    }\n\n    if (pastLeft || pastRight) {\n      const bound = pastLeft ? boundX.from : boundX.to;\n      const distance = bound - this.content.x;\n\n      let force = distance * bounceForce;\n\n      const restX = this.content.x + (this.velocity.x + force) / this.friction;\n\n      if (restX >= boundX.from && restX <= boundX.to) {\n        force += this.velocity.x;\n      }\n\n      this.velocity.x = force;\n\n      this.recalculateTransform();\n    }\n\n    if (pastTop || pastBottom) {\n      const bound = pastTop ? boundY.from : boundY.to;\n      const distance = bound - this.content.y;\n\n      let force = distance * bounceForce;\n\n      const restY = this.content.y + (force + this.velocity.y) / this.friction;\n\n      if (restY >= boundY.from && restY <= boundY.to) {\n        force += this.velocity.y;\n      }\n\n      this.velocity.y = force;\n\n      this.recalculateTransform();\n    }\n  }\n\n  /**\n   * Change dragging position if boundary is reached\n   */\n  setDragResistance() {\n    if (this.state !== \"pointerdown\") {\n      return;\n    }\n\n    const { boundX, boundY } = this.getBounds(this.dragPosition.scale);\n\n    let pastLeft, pastRight, pastTop, pastBottom;\n\n    if (boundX) {\n      pastLeft = this.dragPosition.x < boundX.from;\n      pastRight = this.dragPosition.x > boundX.to;\n    }\n\n    if (boundY) {\n      pastTop = this.dragPosition.y < boundY.from;\n      pastBottom = this.dragPosition.y > boundY.to;\n    }\n\n    if ((pastLeft || pastRight) && !(pastLeft && pastRight)) {\n      const bound = pastLeft ? boundX.from : boundX.to;\n      const distance = bound - this.dragPosition.x;\n\n      this.dragPosition.x = bound - distance * 0.3;\n    }\n\n    if ((pastTop || pastBottom) && !(pastTop && pastBottom)) {\n      const bound = pastTop ? boundY.from : boundY.to;\n      const distance = bound - this.dragPosition.y;\n\n      this.dragPosition.y = bound - distance * 0.3;\n    }\n  }\n\n  /**\n   * Set velocity to move content to drag position\n   */\n  setDragForce() {\n    if (this.state === \"pointerdown\") {\n      this.velocity.x = this.dragPosition.x - this.content.x;\n      this.velocity.y = this.dragPosition.y - this.content.y;\n      this.velocity.scale = this.dragPosition.scale - this.content.scale;\n    }\n  }\n\n  /**\n   * Update end values based on current velocity and friction;\n   */\n  recalculateTransform() {\n    this.transform.x = this.content.x + this.velocity.x / (1 / this.friction - 1);\n    this.transform.y = this.content.y + this.velocity.y / (1 / this.friction - 1);\n    this.transform.scale = this.content.scale + this.velocity.scale / (1 / this.friction - 1);\n  }\n\n  /**\n   * Check if content is currently animating\n   * @returns {Boolean}\n   */\n  isAnimating() {\n    return !!(\n      this.friction &&\n      (Math.abs(this.velocity.x) > 0.05 || Math.abs(this.velocity.y) > 0.05 || Math.abs(this.velocity.scale) > 0.05)\n    );\n  }\n\n  /**\n   * Set content `style.transform` value based on current animation frame\n   */\n  setTransform(final) {\n    let x, y, scale;\n\n    if (final) {\n      x = round(this.transform.x);\n      y = round(this.transform.y);\n\n      scale = this.transform.scale;\n\n      this.content = { ...this.content, x, y, scale };\n    } else {\n      x = round(this.content.x);\n      y = round(this.content.y);\n\n      scale = this.content.scale / (this.content.width / this.content.fitWidth);\n\n      this.content = { ...this.content, x, y };\n    }\n\n    this.trigger(\"beforeTransform\");\n\n    x = round(this.content.x);\n    y = round(this.content.y);\n\n    if (final && this.option(\"zoom\")) {\n      let width;\n      let height;\n\n      width = round(this.content.fitWidth * scale);\n      height = round(this.content.fitHeight * scale);\n\n      this.content.width = width;\n      this.content.height = height;\n\n      this.transform = { ...this.transform, width, height, scale };\n\n      Object.assign(this.$content.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n        maxWidth: \"none\",\n        maxHeight: \"none\",\n        transform: `translate3d(${x}px, ${y}px, 0) scale(1)`,\n      });\n    } else {\n      this.$content.style.transform = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\n    }\n\n    this.trigger(\"afterTransform\");\n  }\n\n  /**\n   * Stop animation loop\n   */\n  endAnimation(silently) {\n    cancelAnimationFrame(this.rAF);\n    this.rAF = null;\n\n    this.velocity = {\n      x: 0,\n      y: 0,\n      scale: 0,\n    };\n\n    this.setTransform(true);\n\n    this.state = \"ready\";\n\n    this.handleCursor();\n\n    if (silently !== true) {\n      this.trigger(\"endAnimation\");\n    }\n  }\n\n  /**\n   * Update the class name depending on whether the content is scaled\n   */\n  handleCursor() {\n    const draggableClass = this.option(\"draggableClass\");\n\n    if (!draggableClass || !this.option(\"touch\")) {\n      return;\n    }\n\n    if (\n      this.option(\"panOnlyZoomed\") == true &&\n      this.content.width <= this.viewport.width &&\n      this.content.height <= this.viewport.height &&\n      this.transform.scale <= this.option(\"baseScale\")\n    ) {\n      this.$container.classList.remove(draggableClass);\n    } else {\n      this.$container.classList.add(draggableClass);\n    }\n  }\n\n  /**\n   * Remove observation and detach event listeners\n   */\n  detachEvents() {\n    this.$content.removeEventListener(\"load\", this.onLoad);\n\n    this.$container.removeEventListener(\"wheel\", this.onWheel, { passive: false });\n    this.$container.removeEventListener(\"click\", this.onClick, { passive: false });\n\n    if (this.pointerTracker) {\n      this.pointerTracker.stop();\n      this.pointerTracker = null;\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n  }\n\n  /**\n   * Clean up\n   */\n  destroy() {\n    if (this.state === \"destroy\") {\n      return;\n    }\n\n    this.state = \"destroy\";\n\n    clearTimeout(this.updateTimer);\n    this.updateTimer = null;\n\n    cancelAnimationFrame(this.rAF);\n    this.rAF = null;\n\n    this.detachEvents();\n\n    this.detachPlugins();\n\n    this.resetDragPosition();\n  }\n}\n\n// Expose version\nPanzoom.version = \"__VERSION__\";\n\n// Static properties are a recent addition that dont work in all browsers yet\nPanzoom.Plugins = Plugins;\n","export const Plugins = {};\n","import { extend } from \"../utils/extend.js\";\nimport { resolve } from \"../utils/resolve.js\";\nimport { isPlainObject } from \"../utils/isPlainObject.js\";\n\n/**\n * Base class, all components inherit from this class\n */\nexport class Base {\n  /**\n   * Base constructor\n   * @param {Object} [options] - Options as `key: value` pairs\n   */\n  constructor(options = {}) {\n    this.options = extend(true, {}, options);\n\n    this.plugins = [];\n    this.events = {};\n\n    // * Prefill with initial events\n    for (const type of [\"on\", \"once\"]) {\n      for (const args of Object.entries(this.options[type] || {})) {\n        this[type](...args);\n      }\n    }\n  }\n\n  /**\n   * Retrieve option value by key, supports subkeys\n   * @param {String} key Option name\n   * @param {*} [fallback] Fallback value for non-existing key\n   * @returns {*}\n   */\n  option(key, fallback, ...rest) {\n    // Make sure it is string\n    key = String(key);\n\n    let value = resolve(key, this.options);\n\n    // Allow to have functions as options\n    if (typeof value === \"function\") {\n      value = value.call(this, this, ...rest);\n    }\n\n    return value === undefined ? fallback : value;\n  }\n\n  /**\n   * Simple l10n support - replaces object keys\n   * found in template with corresponding values\n   * @param {String} str String containing values to localize\n   * @param {Array} params Substitute parameters\n   * @returns {String}\n   */\n  localize(str, params = []) {\n    return String(str).replace(/\\{\\{(\\w+).?(\\w+)?\\}\\}/g, (match, key, subkey) => {\n      let rez = false;\n\n      // Plugins have `Plugin.l10n.KEY`\n      if (subkey) {\n        rez = this.option(`${key[0] + key.toLowerCase().substring(1)}.l10n.${subkey}`);\n      } else {\n        rez = this.option(`l10n.${key}`);\n      }\n\n      if (!rez) {\n        return key;\n      }\n\n      for (let index = 0; index < params.length; index++) {\n        rez = rez.split(params[index][0]).join(params[index][1]);\n      }\n\n      return rez;\n    });\n  }\n\n  /**\n   * Subscribe to an event\n   * @param {String} name\n   * @param {Function} callback\n   * @returns {Object}\n   */\n  on(name, callback) {\n    if (isPlainObject(name)) {\n      for (const args of Object.entries(name)) {\n        this.on(...args);\n      }\n\n      return this;\n    }\n\n    String(name)\n      .split(\" \")\n      .forEach((item) => {\n        const listeners = (this.events[item] = this.events[item] || []);\n\n        if (listeners.indexOf(callback) == -1) {\n          listeners.push(callback);\n        }\n      });\n\n    return this;\n  }\n\n  /**\n   * Subscribe to an event only once\n   * @param {String} name\n   * @param {Function} callback\n   * @returns {Object}\n   */\n  once(name, callback) {\n    if (isPlainObject(name)) {\n      for (const args of Object.entries(name)) {\n        this.once(...args);\n      }\n\n      return this;\n    }\n\n    String(name)\n      .split(\" \")\n      .forEach((item) => {\n        const listener = (...details) => {\n          this.off(item, listener);\n          callback.call(this, this, ...details);\n        };\n\n        listener._ = callback;\n\n        this.on(item, listener);\n      });\n\n    return this;\n  }\n\n  /**\n   * Unsubscribe event with name and callback\n   * @param {String} name\n   * @param {Function} callback\n   * @returns {Object}\n   */\n  off(name, callback) {\n    if (isPlainObject(name)) {\n      for (const args of Object.entries(name)) {\n        this.off(...args);\n      }\n\n      return;\n    }\n\n    name.split(\" \").forEach((item) => {\n      const listeners = this.events[item];\n\n      if (!listeners || !listeners.length) {\n        return this;\n      }\n\n      let index = -1;\n\n      for (let i = 0, len = listeners.length; i < len; i++) {\n        const listener = listeners[i];\n\n        if (listener && (listener === callback || listener._ === callback)) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index != -1) {\n        listeners.splice(index, 1);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Emit an event.\n   * If present, `\"*\"` handlers are invoked after name-matched handlers.\n   * @param {String} name\n   * @param  {...any} details\n   * @returns {Boolean}\n   */\n  trigger(name, ...details) {\n    for (const listener of [...(this.events[name] || [])].slice()) {\n      if (listener && listener.call(this, this, ...details) === false) {\n        return false;\n      }\n    }\n\n    // A wildcard \"*\" event type\n    for (const listener of [...(this.events[\"*\"] || [])].slice()) {\n      if (listener && listener.call(this, name, this, ...details) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Add given plugins to this instance,\n   * this will end up calling `attach` method of each plugin\n   * @param {Object} Plugins\n   * @returns {Object}\n   */\n  attachPlugins(plugins) {\n    const newPlugins = {};\n\n    for (const [key, Plugin] of Object.entries(plugins || {})) {\n      // Check if this plugin is not disabled by option\n      if (this.options[key] !== false && !this.plugins[key]) {\n        // Populate options with defaults from the plugin\n        this.options[key] = extend({}, Plugin.defaults || {}, this.options[key]);\n\n        // Initialise plugin\n        newPlugins[key] = new Plugin(this);\n      }\n    }\n\n    for (const [key, plugin] of Object.entries(newPlugins)) {\n      plugin.attach(this);\n    }\n\n    this.plugins = Object.assign({}, this.plugins, newPlugins);\n\n    return this;\n  }\n\n  /**\n   * Remove all plugin instances from this instance,\n   * this will end up calling `detach` method of each plugin\n   * @returns {Object}\n   */\n  detachPlugins() {\n    for (const key in this.plugins) {\n      let plugin;\n\n      if ((plugin = this.plugins[key]) && typeof plugin.detach === \"function\") {\n        plugin.detach(this);\n      }\n    }\n\n    this.plugins = {};\n\n    return this;\n  }\n}\n","export const Fullscreen = {\r\n  pageXOffset: 0,\r\n  pageYOffset: 0,\r\n\r\n  element() {\r\n    return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n  },\r\n\r\n  activate(element) {\r\n    Fullscreen.pageXOffset = window.pageXOffset;\r\n    Fullscreen.pageYOffset = window.pageYOffset;\r\n\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen(); // W3C spec\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen(); // Firefox\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen(); // Safari\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen(); // IE/Edge\r\n    }\r\n  },\r\n\r\n  deactivate() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  },\r\n};\r\n","import { clearTextSelection } from \"./clearTextSelection.js\";\r\n\r\nclass Pointer {\r\n  constructor(nativePointer) {\r\n    this.id = -1;\r\n\r\n    this.id = nativePointer.pointerId || nativePointer.identifier || -1;\r\n\r\n    this.pageX = nativePointer.pageX;\r\n    this.pageY = nativePointer.pageY;\r\n\r\n    this.clientX = nativePointer.clientX;\r\n    this.clientY = nativePointer.clientY;\r\n\r\n    this.nativePointer = nativePointer;\r\n  }\r\n}\r\n\r\nfunction getDistance(a, b) {\r\n  if (!b) {\r\n    return 0;\r\n  }\r\n\r\n  return Math.sqrt((b.clientX - a.clientX) ** 2 + (b.clientY - a.clientY) ** 2);\r\n}\r\n\r\nfunction getMidpoint(a, b) {\r\n  if (!b) {\r\n    return a;\r\n  }\r\n\r\n  return {\r\n    clientX: (a.clientX + b.clientX) / 2,\r\n    clientY: (a.clientY + b.clientY) / 2,\r\n  };\r\n}\r\n\r\nclass PointerTracker {\r\n  constructor(element, { start = () => true, move = () => {}, end = () => {} } = {}) {\r\n    this.element = element;\r\n\r\n    this.startPointers = [];\r\n    this.currentPointers = [];\r\n\r\n    this.startCallback = start;\r\n    this.moveCallback = move;\r\n    this.endCallback = end;\r\n\r\n    this.onStart = (event) => {\r\n      if (event.button && event.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      const pointer = new Pointer(event);\r\n\r\n      if (this.startCallback(pointer, event) === false) {\r\n        return false;\r\n      }\r\n\r\n      event.preventDefault();\r\n\r\n      clearTextSelection();\r\n\r\n      this.currentPointers.push(pointer);\r\n      this.startPointers.push(pointer);\r\n\r\n      const capturingElement = event.target && \"setPointerCapture\" in event.target ? event.target : this.element;\r\n\r\n      capturingElement.setPointerCapture(event.pointerId);\r\n\r\n      this.element.addEventListener(\"pointermove\", this.onMove);\r\n      this.element.addEventListener(\"pointerup\", this.onEnd);\r\n      this.element.addEventListener(\"pointercancel\", this.onEnd);\r\n    };\r\n\r\n    this.onMove = (event) => {\r\n      const previousPointers = this.currentPointers.slice();\r\n      const trackedChangedPointers = [];\r\n\r\n      for (const pointer of [new Pointer(event)]) {\r\n        const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n\r\n        if (index < 0) {\r\n          continue;\r\n        }\r\n\r\n        trackedChangedPointers.push(pointer);\r\n\r\n        this.currentPointers[index] = pointer;\r\n      }\r\n\r\n      if (trackedChangedPointers.length) {\r\n        this.moveCallback(previousPointers, this.currentPointers, event);\r\n      }\r\n    };\r\n\r\n    this.onEnd = (event) => {\r\n      const pointer = new Pointer(event);\r\n      const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n\r\n      if (index === -1) {\r\n        return false;\r\n      }\r\n\r\n      this.currentPointers.splice(index, 1);\r\n      this.startPointers.splice(index, 1);\r\n\r\n      this.endCallback(pointer, event);\r\n\r\n      if (!this.currentPointers.length) {\r\n        this.element.removeEventListener(\"pointermove\", this.onMove);\r\n        this.element.removeEventListener(\"pointerup\", this.onEnd);\r\n        this.element.removeEventListener(\"pointercancel\", this.onEnd);\r\n      }\r\n    };\r\n\r\n    this.element.addEventListener(\"pointerdown\", this.onStart);\r\n  }\r\n\r\n  stop() {\r\n    this.element.removeEventListener(\"pointerdown\", this.onStart);\r\n    this.element.removeEventListener(\"pointermove\", this.onMove);\r\n    this.element.removeEventListener(\"pointerup\", this.onEnd);\r\n    this.element.removeEventListener(\"pointercancel\", this.onEnd);\r\n  }\r\n}\r\n\r\nexport { PointerTracker, getDistance, getMidpoint };\r\n","/**\n * ResizeObserver Polyfill\n */\nexport const ResizeObserver =\n  (typeof window !== \"undefined\" && window.ResizeObserver) ||\n  class {\n    constructor(callback) {\n      this.observables = [];\n      // Array of observed elements that looks like this:\n      // [{\n      //   el: domNode,\n      //   size: {height: x, width: y}\n      // }]\n      this.boundCheck = this.check.bind(this);\n      this.boundCheck();\n      this.callback = callback;\n    }\n\n    observe(el) {\n      if (this.observables.some((observable) => observable.el === el)) {\n        return;\n      }\n\n      const newObservable = {\n        el: el,\n        size: {\n          height: el.clientHeight,\n          width: el.clientWidth,\n        },\n      };\n\n      this.observables.push(newObservable);\n    }\n\n    unobserve(el) {\n      this.observables = this.observables.filter((obj) => obj.el !== el);\n    }\n\n    disconnect() {\n      this.observables = [];\n    }\n\n    check() {\n      const changedEntries = this.observables\n        .filter((obj) => {\n          const currentHeight = obj.el.clientHeight;\n          const currentWidth = obj.el.clientWidth;\n          if (obj.size.height !== currentHeight || obj.size.width !== currentWidth) {\n            obj.size.height = currentHeight;\n            obj.size.width = currentWidth;\n            return true;\n          }\n        })\n        .map((obj) => obj.el);\n\n      if (changedEntries.length > 0) {\n        this.callback(changedEntries);\n      }\n\n      window.requestAnimationFrame(this.boundCheck);\n    }\n  };\n","export class Slideshow {\r\n  constructor(fancybox) {\r\n    this.fancybox = fancybox;\r\n    this.active = false;\r\n\r\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n  }\r\n\r\n  isActive() {\r\n    return this.active;\r\n  }\r\n\r\n  setTimer() {\r\n    if (!this.active || this.timer) {\r\n      return;\r\n    }\r\n\r\n    const delay = this.fancybox.option(\"slideshow.delay\", 3000);\r\n\r\n    this.timer = setTimeout(() => {\r\n      this.timer = null;\r\n\r\n      if (\r\n        !this.fancybox.option(\"infinite\") &&\r\n        this.fancybox.getSlide().index === this.fancybox.Carousel.slides.length - 1\r\n      ) {\r\n        this.fancybox.jumpTo(0, { friction: 0 });\r\n      } else {\r\n        this.fancybox.next();\r\n      }\r\n    }, delay);\r\n\r\n    let $progress = this.$progress;\r\n\r\n    if (!$progress) {\r\n      $progress = document.createElement(\"div\");\r\n      $progress.classList.add(\"fancybox__progress\");\r\n\r\n      this.fancybox.$carousel.parentNode.insertBefore($progress, this.fancybox.$carousel);\r\n\r\n      this.$progress = $progress;\r\n\r\n      $progress.offsetHeight; /* trigger reflow */\r\n    }\r\n\r\n    $progress.style.transitionDuration = `${delay}ms`;\r\n    $progress.style.transform = \"scaleX(1)\";\r\n  }\r\n\r\n  clearTimer() {\r\n    clearTimeout(this.timer);\r\n    this.timer = null;\r\n\r\n    if (this.$progress) {\r\n      this.$progress.style.transitionDuration = \"\";\r\n      this.$progress.style.transform = \"\";\r\n\r\n      this.$progress.offsetHeight; /* trigger reflow */\r\n    }\r\n  }\r\n\r\n  activate() {\r\n    if (this.active) {\r\n      return;\r\n    }\r\n\r\n    this.active = true;\r\n    this.fancybox.$container.classList.add(\"has-slideshow\");\r\n\r\n    if (this.fancybox.getSlide().state === \"done\") {\r\n      this.setTimer();\r\n    }\r\n\r\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange, false);\r\n  }\r\n\r\n  handleVisibilityChange() {\r\n    this.deactivate();\r\n  }\r\n\r\n  deactivate() {\r\n    this.active = false;\r\n\r\n    this.clearTimer();\r\n\r\n    this.fancybox.$container.classList.remove(\"has-slideshow\");\r\n\r\n    document.removeEventListener(\"visibilitychange\", this.handleVisibilityChange, false);\r\n  }\r\n\r\n  toggle() {\r\n    if (this.active) {\r\n      this.deactivate();\r\n    } else if (this.fancybox.Carousel.slides.length > 1) {\r\n      this.activate();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Detect if rendering from the client or the server\r\n */\r\nexport const canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\r\n","/**\n *  Deselect any text which may be selected on a page\n */\nexport const clearTextSelection = () => {\n  const selection = window.getSelection ? window.getSelection() : document.selection;\n\n  if (selection && selection.rangeCount && selection.getRangeAt(0).getClientRects().length) {\n    if (selection.removeAllRanges) {\n      selection.removeAllRanges();\n    } else if (selection.empty) {\n      selection.empty();\n    }\n  }\n};\n","import { isPlainObject } from \"./isPlainObject.js\";\n\n/**\n * Merge the contents of two or more objects together into the first object.\n * If passing \"true\" for first argument, the merge becomes recursive (aka. deep copy).\n * @param  {...any} args\n * @returns {Object}\n */\nexport const extend = (...args) => {\n  let deep = false;\n\n  if (typeof args[0] == \"boolean\") {\n    deep = args.shift();\n  }\n\n  let result = args[0];\n\n  if (!result || typeof result !== \"object\") {\n    throw new Error(\"extendee must be an object\");\n  }\n\n  const extenders = args.slice(1);\n  const len = extenders.length;\n\n  for (let i = 0; i < len; i++) {\n    const extender = extenders[i];\n\n    for (let key in extender) {\n      if (extender.hasOwnProperty(key)) {\n        const value = extender[key];\n\n        if (deep && (Array.isArray(value) || isPlainObject(value))) {\n          const base = Array.isArray(value) ? [] : {};\n\n          result[key] = extend(true, result.hasOwnProperty(key) ? result[key] : base, value);\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n\n  return result;\n};\n","/**\n * Get actual width of the element, regardless of how much of content is currently visible\n * @param {Element} elem\n * @returns {Integer}\n */\nexport const getFullWidth = (elem) => {\n  return Math.max(\n    parseFloat(elem.naturalWidth || 0),\n    parseFloat((elem.width && elem.width.baseVal && elem.width.baseVal.value) || 0),\n    parseFloat(elem.offsetWidth || 0),\n    parseFloat(elem.scrollWidth || 0)\n  );\n};\n\n/**\n * Get actual height of the element, regardless of how much of content is currently visible\n * @param {Element} elem\n * @returns {Integer}\n */\nexport const getFullHeight = (elem) => {\n  return Math.max(\n    parseFloat(elem.naturalHeight || 0),\n    parseFloat((elem.height && elem.height.baseVal && elem.height.baseVal.value) || 0),\n    parseFloat(elem.offsetHeight || 0),\n    parseFloat(elem.scrollHeight || 0)\n  );\n};\n\n/**\n * Calculate bounding size to fit dimensions while preserving aspect ratio\n * @param {Number} srcWidth\n * @param {Number} srcHeight\n * @param {Number} maxWidth\n * @param {Number} maxHeight\n * @returns {Object}\n */\nexport const calculateAspectRatioFit = (srcWidth, srcHeight, maxWidth, maxHeight) => {\n  const ratio = Math.min(maxWidth / srcWidth || 0, maxHeight / srcHeight);\n\n  return { width: srcWidth * ratio || 0, height: srcHeight * ratio || 0 };\n};\n","/**\n * Get element child node at the given coordinates\n * @param {Element} HTML element\n * @param {Float|Integer} x\n * @param {Float|Integer} y\n * @returns {Node|Boolean}}\n */\nexport const getTextNodeFromPoint = (element, x, y) => {\n  const nodes = element.childNodes;\n  const range = document.createRange();\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    if (node.nodeType !== Node.TEXT_NODE) {\n      continue;\n    }\n\n    range.selectNodeContents(node);\n\n    const rect = range.getBoundingClientRect();\n\n    if (x >= rect.left && y >= rect.top && x <= rect.right && y <= rect.bottom) {\n      return node;\n    }\n  }\n\n  return false;\n};\n","/**\n * Check to see if an object is a plain object (created using \"{}\" or \"new Object\").\n * @param {*} obj Variable of any type\n * @returns {Boolean}\n */\nexport const isPlainObject = (obj) => {\n  return (\n    // separate from primitives\n    typeof obj === \"object\" &&\n    // is obvious\n    obj !== null &&\n    // separate instances (Array, DOM, ...)\n    obj.constructor === Object &&\n    // separate build-in like Math\n    Object.prototype.toString.call(obj) === \"[object Object]\"\n  );\n};\n","/**\n * Check if  element has scrollable content\n * @param {Node} node\n * @returns {Boolean}\n */\nexport const hasScrollbars = function (node) {\n  const overflowY = getComputedStyle(node)[\"overflow-y\"],\n    overflowX = getComputedStyle(node)[\"overflow-x\"],\n    vertical = (overflowY === \"scroll\" || overflowY === \"auto\") && Math.abs(node.scrollHeight - node.clientHeight) > 1,\n    horizontal = (overflowX === \"scroll\" || overflowX === \"auto\") && Math.abs(node.scrollWidth - node.clientWidth) > 1;\n\n  return vertical || horizontal;\n};\n\n/**\n * Check if element or one of the parents is scrollable\n * @param {Node} node  DOM Node element\n * @returns {Boolean}\n */\nexport const isScrollable = function (node) {\n  if (!node || !(typeof node === \"object\" && node instanceof Element) || node === document.body) {\n    return false;\n  }\n\n  if (hasScrollbars(node)) {\n    return node;\n  }\n\n  return isScrollable(node.parentNode);\n};\n","/**\n * Access nested JavaScript objects by string path.\n * Example: `resolve(\"a.b.c\", {a:{b:{c:\"d\"}})` would return `d`\n * @param {String} path\n * @param {Object} obj\n * @returns {*}\n */\nexport const resolve = function (path, obj) {\n  return path.split(\".\").reduce(function (prev, curr) {\n    return prev && prev[curr];\n  }, obj);\n};\n","/**\n * Round half up; to be more specific and to ensure things like 1.005 round correctly\n * @param {Float} value\n * @param {Integer} precision\n * @returns {Float}\n */\nexport const round = (value, precision = 10000) => {\n  value = parseFloat(value) || 0;\n\n  return Math.round((value + Number.EPSILON) * precision) / precision;\n};\n","/**\n * Throttling enforces a maximum number of times a function can be called over time\n * @param {Function} func Callback function\n * @param {Integer} limit Milliseconds\n * @returns {Function}\n */\nexport const throttle = (func, limit) => {\n  let lastCall = 0;\n\n  return function (...args) {\n    const now = new Date().getTime();\n\n    if (now - lastCall < limit) {\n      return;\n    }\n\n    lastCall = now;\n\n    return func(...args);\n  };\n};\n","/**\n * Swiper 7.2.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: October 27, 2021\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n    /**\n     * SSR Window 4.0.1\n     * Better handling for window object in SSR environment\n     * https://github.com/nolimits4web/ssr-window\n     *\n     * Copyright 2021, Vladimir Kharlampidi\n     *\n     * Licensed under MIT\n     *\n     * Released on: October 27, 2021\n     */\n\n    /* eslint-disable no-param-reassign */\n    function isObject$1(obj) {\n      return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n    }\n\n    function extend$1(target = {}, src = {}) {\n      Object.keys(src).forEach(key => {\n        if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n          extend$1(target[key], src[key]);\n        }\n      });\n    }\n\n    const ssrDocument = {\n      body: {},\n\n      addEventListener() {},\n\n      removeEventListener() {},\n\n      activeElement: {\n        blur() {},\n\n        nodeName: ''\n      },\n\n      querySelector() {\n        return null;\n      },\n\n      querySelectorAll() {\n        return [];\n      },\n\n      getElementById() {\n        return null;\n      },\n\n      createEvent() {\n        return {\n          initEvent() {}\n\n        };\n      },\n\n      createElement() {\n        return {\n          children: [],\n          childNodes: [],\n          style: {},\n\n          setAttribute() {},\n\n          getElementsByTagName() {\n            return [];\n          }\n\n        };\n      },\n\n      createElementNS() {\n        return {};\n      },\n\n      importNode() {\n        return null;\n      },\n\n      location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: ''\n      }\n    };\n\n    function getDocument() {\n      const doc = typeof document !== 'undefined' ? document : {};\n      extend$1(doc, ssrDocument);\n      return doc;\n    }\n\n    const ssrWindow = {\n      document: ssrDocument,\n      navigator: {\n        userAgent: ''\n      },\n      location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: ''\n      },\n      history: {\n        replaceState() {},\n\n        pushState() {},\n\n        go() {},\n\n        back() {}\n\n      },\n      CustomEvent: function CustomEvent() {\n        return this;\n      },\n\n      addEventListener() {},\n\n      removeEventListener() {},\n\n      getComputedStyle() {\n        return {\n          getPropertyValue() {\n            return '';\n          }\n\n        };\n      },\n\n      Image() {},\n\n      Date() {},\n\n      screen: {},\n\n      setTimeout() {},\n\n      clearTimeout() {},\n\n      matchMedia() {\n        return {};\n      },\n\n      requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n          callback();\n          return null;\n        }\n\n        return setTimeout(callback, 0);\n      },\n\n      cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n          return;\n        }\n\n        clearTimeout(id);\n      }\n\n    };\n\n    function getWindow() {\n      const win = typeof window !== 'undefined' ? window : {};\n      extend$1(win, ssrWindow);\n      return win;\n    }\n\n    /**\n     * Dom7 4.0.1\n     * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n     * https://framework7.io/docs/dom7.html\n     *\n     * Copyright 2021, Vladimir Kharlampidi\n     *\n     * Licensed under MIT\n     *\n     * Released on: October 27, 2021\n     */\n    /* eslint-disable no-proto */\n\n    function makeReactive(obj) {\n      const proto = obj.__proto__;\n      Object.defineProperty(obj, '__proto__', {\n        get() {\n          return proto;\n        },\n\n        set(value) {\n          proto.__proto__ = value;\n        }\n\n      });\n    }\n\n    class Dom7 extends Array {\n      constructor(items) {\n        super(...(items || []));\n        makeReactive(this);\n      }\n\n    }\n\n    function arrayFlat(arr = []) {\n      const res = [];\n      arr.forEach(el => {\n        if (Array.isArray(el)) {\n          res.push(...arrayFlat(el));\n        } else {\n          res.push(el);\n        }\n      });\n      return res;\n    }\n\n    function arrayFilter(arr, callback) {\n      return Array.prototype.filter.call(arr, callback);\n    }\n\n    function arrayUnique(arr) {\n      const uniqueArray = [];\n\n      for (let i = 0; i < arr.length; i += 1) {\n        if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n      }\n\n      return uniqueArray;\n    }\n\n\n    function qsa(selector, context) {\n      if (typeof selector !== 'string') {\n        return [selector];\n      }\n\n      const a = [];\n      const res = context.querySelectorAll(selector);\n\n      for (let i = 0; i < res.length; i += 1) {\n        a.push(res[i]);\n      }\n\n      return a;\n    }\n\n    function $(selector, context) {\n      const window = getWindow();\n      const document = getDocument();\n      let arr = [];\n\n      if (!context && selector instanceof Dom7) {\n        return selector;\n      }\n\n      if (!selector) {\n        return new Dom7(arr);\n      }\n\n      if (typeof selector === 'string') {\n        const html = selector.trim();\n\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          let toCreate = 'div';\n          if (html.indexOf('<li') === 0) toCreate = 'ul';\n          if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n          if (html.indexOf('<tbody') === 0) toCreate = 'table';\n          if (html.indexOf('<option') === 0) toCreate = 'select';\n          const tempParent = document.createElement(toCreate);\n          tempParent.innerHTML = html;\n\n          for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          arr = qsa(selector.trim(), context || document);\n        } // arr = qsa(selector, document);\n\n      } else if (selector.nodeType || selector === window || selector === document) {\n        arr.push(selector);\n      } else if (Array.isArray(selector)) {\n        if (selector instanceof Dom7) return selector;\n        arr = selector;\n      }\n\n      return new Dom7(arrayUnique(arr));\n    }\n\n    $.fn = Dom7.prototype; // eslint-disable-next-line\n\n    function addClass(...classes) {\n      const classNames = arrayFlat(classes.map(c => c.split(' ')));\n      this.forEach(el => {\n        el.classList.add(...classNames);\n      });\n      return this;\n    }\n\n    function removeClass(...classes) {\n      const classNames = arrayFlat(classes.map(c => c.split(' ')));\n      this.forEach(el => {\n        el.classList.remove(...classNames);\n      });\n      return this;\n    }\n\n    function toggleClass(...classes) {\n      const classNames = arrayFlat(classes.map(c => c.split(' ')));\n      this.forEach(el => {\n        classNames.forEach(className => {\n          el.classList.toggle(className);\n        });\n      });\n    }\n\n    function hasClass(...classes) {\n      const classNames = arrayFlat(classes.map(c => c.split(' ')));\n      return arrayFilter(this, el => {\n        return classNames.filter(className => el.classList.contains(className)).length > 0;\n      }).length > 0;\n    }\n\n    function attr(attrs, value) {\n      if (arguments.length === 1 && typeof attrs === 'string') {\n        // Get attr\n        if (this[0]) return this[0].getAttribute(attrs);\n        return undefined;\n      } // Set attrs\n\n\n      for (let i = 0; i < this.length; i += 1) {\n        if (arguments.length === 2) {\n          // String\n          this[i].setAttribute(attrs, value);\n        } else {\n          // Object\n          for (const attrName in attrs) {\n            this[i][attrName] = attrs[attrName];\n            this[i].setAttribute(attrName, attrs[attrName]);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function removeAttr(attr) {\n      for (let i = 0; i < this.length; i += 1) {\n        this[i].removeAttribute(attr);\n      }\n\n      return this;\n    }\n\n    function transform(transform) {\n      for (let i = 0; i < this.length; i += 1) {\n        this[i].style.transform = transform;\n      }\n\n      return this;\n    }\n\n    function transition$1(duration) {\n      for (let i = 0; i < this.length; i += 1) {\n        this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n      }\n\n      return this;\n    }\n\n    function on(...args) {\n      let [eventType, targetSelector, listener, capture] = args;\n\n      if (typeof args[1] === 'function') {\n        [eventType, listener, capture] = args;\n        targetSelector = undefined;\n      }\n\n      if (!capture) capture = false;\n\n      function handleLiveEvent(e) {\n        const target = e.target;\n        if (!target) return;\n        const eventData = e.target.dom7EventData || [];\n\n        if (eventData.indexOf(e) < 0) {\n          eventData.unshift(e);\n        }\n\n        if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n          const parents = $(target).parents(); // eslint-disable-line\n\n          for (let k = 0; k < parents.length; k += 1) {\n            if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n          }\n        }\n      }\n\n      function handleEvent(e) {\n        const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n        if (eventData.indexOf(e) < 0) {\n          eventData.unshift(e);\n        }\n\n        listener.apply(this, eventData);\n      }\n\n      const events = eventType.split(' ');\n      let j;\n\n      for (let i = 0; i < this.length; i += 1) {\n        const el = this[i];\n\n        if (!targetSelector) {\n          for (j = 0; j < events.length; j += 1) {\n            const event = events[j];\n            if (!el.dom7Listeners) el.dom7Listeners = {};\n            if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n            el.dom7Listeners[event].push({\n              listener,\n              proxyListener: handleEvent\n            });\n            el.addEventListener(event, handleEvent, capture);\n          }\n        } else {\n          // Live events\n          for (j = 0; j < events.length; j += 1) {\n            const event = events[j];\n            if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n            if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n            el.dom7LiveListeners[event].push({\n              listener,\n              proxyListener: handleLiveEvent\n            });\n            el.addEventListener(event, handleLiveEvent, capture);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function off(...args) {\n      let [eventType, targetSelector, listener, capture] = args;\n\n      if (typeof args[1] === 'function') {\n        [eventType, listener, capture] = args;\n        targetSelector = undefined;\n      }\n\n      if (!capture) capture = false;\n      const events = eventType.split(' ');\n\n      for (let i = 0; i < events.length; i += 1) {\n        const event = events[i];\n\n        for (let j = 0; j < this.length; j += 1) {\n          const el = this[j];\n          let handlers;\n\n          if (!targetSelector && el.dom7Listeners) {\n            handlers = el.dom7Listeners[event];\n          } else if (targetSelector && el.dom7LiveListeners) {\n            handlers = el.dom7LiveListeners[event];\n          }\n\n          if (handlers && handlers.length) {\n            for (let k = handlers.length - 1; k >= 0; k -= 1) {\n              const handler = handlers[k];\n\n              if (listener && handler.listener === listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              } else if (!listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              }\n            }\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function trigger(...args) {\n      const window = getWindow();\n      const events = args[0].split(' ');\n      const eventData = args[1];\n\n      for (let i = 0; i < events.length; i += 1) {\n        const event = events[i];\n\n        for (let j = 0; j < this.length; j += 1) {\n          const el = this[j];\n\n          if (window.CustomEvent) {\n            const evt = new window.CustomEvent(event, {\n              detail: eventData,\n              bubbles: true,\n              cancelable: true\n            });\n            el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n            el.dispatchEvent(evt);\n            el.dom7EventData = [];\n            delete el.dom7EventData;\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function transitionEnd$1(callback) {\n      const dom = this;\n\n      function fireCallBack(e) {\n        if (e.target !== this) return;\n        callback.call(this, e);\n        dom.off('transitionend', fireCallBack);\n      }\n\n      if (callback) {\n        dom.on('transitionend', fireCallBack);\n      }\n\n      return this;\n    }\n\n    function outerWidth(includeMargins) {\n      if (this.length > 0) {\n        if (includeMargins) {\n          const styles = this.styles();\n          return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n        }\n\n        return this[0].offsetWidth;\n      }\n\n      return null;\n    }\n\n    function outerHeight(includeMargins) {\n      if (this.length > 0) {\n        if (includeMargins) {\n          const styles = this.styles();\n          return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n        }\n\n        return this[0].offsetHeight;\n      }\n\n      return null;\n    }\n\n    function offset() {\n      if (this.length > 0) {\n        const window = getWindow();\n        const document = getDocument();\n        const el = this[0];\n        const box = el.getBoundingClientRect();\n        const body = document.body;\n        const clientTop = el.clientTop || body.clientTop || 0;\n        const clientLeft = el.clientLeft || body.clientLeft || 0;\n        const scrollTop = el === window ? window.scrollY : el.scrollTop;\n        const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n        return {\n          top: box.top + scrollTop - clientTop,\n          left: box.left + scrollLeft - clientLeft\n        };\n      }\n\n      return null;\n    }\n\n    function styles() {\n      const window = getWindow();\n      if (this[0]) return window.getComputedStyle(this[0], null);\n      return {};\n    }\n\n    function css(props, value) {\n      const window = getWindow();\n      let i;\n\n      if (arguments.length === 1) {\n        if (typeof props === 'string') {\n          // .css('width')\n          if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n        } else {\n          // .css({ width: '100px' })\n          for (i = 0; i < this.length; i += 1) {\n            for (const prop in props) {\n              this[i].style[prop] = props[prop];\n            }\n          }\n\n          return this;\n        }\n      }\n\n      if (arguments.length === 2 && typeof props === 'string') {\n        // .css('width', '100px')\n        for (i = 0; i < this.length; i += 1) {\n          this[i].style[props] = value;\n        }\n\n        return this;\n      }\n\n      return this;\n    }\n\n    function each(callback) {\n      if (!callback) return this;\n      this.forEach((el, index) => {\n        callback.apply(el, [el, index]);\n      });\n      return this;\n    }\n\n    function filter(callback) {\n      const result = arrayFilter(this, callback);\n      return $(result);\n    }\n\n    function html(html) {\n      if (typeof html === 'undefined') {\n        return this[0] ? this[0].innerHTML : null;\n      }\n\n      for (let i = 0; i < this.length; i += 1) {\n        this[i].innerHTML = html;\n      }\n\n      return this;\n    }\n\n    function text(text) {\n      if (typeof text === 'undefined') {\n        return this[0] ? this[0].textContent.trim() : null;\n      }\n\n      for (let i = 0; i < this.length; i += 1) {\n        this[i].textContent = text;\n      }\n\n      return this;\n    }\n\n    function is(selector) {\n      const window = getWindow();\n      const document = getDocument();\n      const el = this[0];\n      let compareWith;\n      let i;\n      if (!el || typeof selector === 'undefined') return false;\n\n      if (typeof selector === 'string') {\n        if (el.matches) return el.matches(selector);\n        if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n        if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n        compareWith = $(selector);\n\n        for (i = 0; i < compareWith.length; i += 1) {\n          if (compareWith[i] === el) return true;\n        }\n\n        return false;\n      }\n\n      if (selector === document) {\n        return el === document;\n      }\n\n      if (selector === window) {\n        return el === window;\n      }\n\n      if (selector.nodeType || selector instanceof Dom7) {\n        compareWith = selector.nodeType ? [selector] : selector;\n\n        for (i = 0; i < compareWith.length; i += 1) {\n          if (compareWith[i] === el) return true;\n        }\n\n        return false;\n      }\n\n      return false;\n    }\n\n    function index() {\n      let child = this[0];\n      let i;\n\n      if (child) {\n        i = 0; // eslint-disable-next-line\n\n        while ((child = child.previousSibling) !== null) {\n          if (child.nodeType === 1) i += 1;\n        }\n\n        return i;\n      }\n\n      return undefined;\n    }\n\n    function eq(index) {\n      if (typeof index === 'undefined') return this;\n      const length = this.length;\n\n      if (index > length - 1) {\n        return $([]);\n      }\n\n      if (index < 0) {\n        const returnIndex = length + index;\n        if (returnIndex < 0) return $([]);\n        return $([this[returnIndex]]);\n      }\n\n      return $([this[index]]);\n    }\n\n    function append(...els) {\n      let newChild;\n      const document = getDocument();\n\n      for (let k = 0; k < els.length; k += 1) {\n        newChild = els[k];\n\n        for (let i = 0; i < this.length; i += 1) {\n          if (typeof newChild === 'string') {\n            const tempDiv = document.createElement('div');\n            tempDiv.innerHTML = newChild;\n\n            while (tempDiv.firstChild) {\n              this[i].appendChild(tempDiv.firstChild);\n            }\n          } else if (newChild instanceof Dom7) {\n            for (let j = 0; j < newChild.length; j += 1) {\n              this[i].appendChild(newChild[j]);\n            }\n          } else {\n            this[i].appendChild(newChild);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function prepend(newChild) {\n      const document = getDocument();\n      let i;\n      let j;\n\n      for (i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          const tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (j = 0; j < newChild.length; j += 1) {\n            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n          }\n        } else {\n          this[i].insertBefore(newChild, this[i].childNodes[0]);\n        }\n      }\n\n      return this;\n    }\n\n    function next(selector) {\n      if (this.length > 0) {\n        if (selector) {\n          if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n            return $([this[0].nextElementSibling]);\n          }\n\n          return $([]);\n        }\n\n        if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n        return $([]);\n      }\n\n      return $([]);\n    }\n\n    function nextAll(selector) {\n      const nextEls = [];\n      let el = this[0];\n      if (!el) return $([]);\n\n      while (el.nextElementSibling) {\n        const next = el.nextElementSibling; // eslint-disable-line\n\n        if (selector) {\n          if ($(next).is(selector)) nextEls.push(next);\n        } else nextEls.push(next);\n\n        el = next;\n      }\n\n      return $(nextEls);\n    }\n\n    function prev(selector) {\n      if (this.length > 0) {\n        const el = this[0];\n\n        if (selector) {\n          if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n            return $([el.previousElementSibling]);\n          }\n\n          return $([]);\n        }\n\n        if (el.previousElementSibling) return $([el.previousElementSibling]);\n        return $([]);\n      }\n\n      return $([]);\n    }\n\n    function prevAll(selector) {\n      const prevEls = [];\n      let el = this[0];\n      if (!el) return $([]);\n\n      while (el.previousElementSibling) {\n        const prev = el.previousElementSibling; // eslint-disable-line\n\n        if (selector) {\n          if ($(prev).is(selector)) prevEls.push(prev);\n        } else prevEls.push(prev);\n\n        el = prev;\n      }\n\n      return $(prevEls);\n    }\n\n    function parent(selector) {\n      const parents = []; // eslint-disable-line\n\n      for (let i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode !== null) {\n          if (selector) {\n            if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n          } else {\n            parents.push(this[i].parentNode);\n          }\n        }\n      }\n\n      return $(parents);\n    }\n\n    function parents(selector) {\n      const parents = []; // eslint-disable-line\n\n      for (let i = 0; i < this.length; i += 1) {\n        let parent = this[i].parentNode; // eslint-disable-line\n\n        while (parent) {\n          if (selector) {\n            if ($(parent).is(selector)) parents.push(parent);\n          } else {\n            parents.push(parent);\n          }\n\n          parent = parent.parentNode;\n        }\n      }\n\n      return $(parents);\n    }\n\n    function closest(selector) {\n      let closest = this; // eslint-disable-line\n\n      if (typeof selector === 'undefined') {\n        return $([]);\n      }\n\n      if (!closest.is(selector)) {\n        closest = closest.parents(selector).eq(0);\n      }\n\n      return closest;\n    }\n\n    function find(selector) {\n      const foundElements = [];\n\n      for (let i = 0; i < this.length; i += 1) {\n        const found = this[i].querySelectorAll(selector);\n\n        for (let j = 0; j < found.length; j += 1) {\n          foundElements.push(found[j]);\n        }\n      }\n\n      return $(foundElements);\n    }\n\n    function children(selector) {\n      const children = []; // eslint-disable-line\n\n      for (let i = 0; i < this.length; i += 1) {\n        const childNodes = this[i].children;\n\n        for (let j = 0; j < childNodes.length; j += 1) {\n          if (!selector || $(childNodes[j]).is(selector)) {\n            children.push(childNodes[j]);\n          }\n        }\n      }\n\n      return $(children);\n    }\n\n    function remove() {\n      for (let i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n      }\n\n      return this;\n    }\n\n    const Methods = {\n      addClass,\n      removeClass,\n      hasClass,\n      toggleClass,\n      attr,\n      removeAttr,\n      transform,\n      transition: transition$1,\n      on,\n      off,\n      trigger,\n      transitionEnd: transitionEnd$1,\n      outerWidth,\n      outerHeight,\n      styles,\n      offset,\n      css,\n      each,\n      html,\n      text,\n      is,\n      index,\n      eq,\n      append,\n      prepend,\n      next,\n      nextAll,\n      prev,\n      prevAll,\n      parent,\n      parents,\n      closest,\n      find,\n      children,\n      filter,\n      remove\n    };\n    Object.keys(Methods).forEach(methodName => {\n      Object.defineProperty($.fn, methodName, {\n        value: Methods[methodName],\n        writable: true\n      });\n    });\n\n    function deleteProps(obj) {\n      const object = obj;\n      Object.keys(object).forEach(key => {\n        try {\n          object[key] = null;\n        } catch (e) {// no getter for object\n        }\n\n        try {\n          delete object[key];\n        } catch (e) {// something got wrong\n        }\n      });\n    }\n\n    function nextTick(callback, delay = 0) {\n      return setTimeout(callback, delay);\n    }\n\n    function now() {\n      return Date.now();\n    }\n\n    function getComputedStyle$1(el) {\n      const window = getWindow();\n      let style;\n\n      if (window.getComputedStyle) {\n        style = window.getComputedStyle(el, null);\n      }\n\n      if (!style && el.currentStyle) {\n        style = el.currentStyle;\n      }\n\n      if (!style) {\n        style = el.style;\n      }\n\n      return style;\n    }\n\n    function getTranslate(el, axis = 'x') {\n      const window = getWindow();\n      let matrix;\n      let curTransform;\n      let transformMatrix;\n      const curStyle = getComputedStyle$1(el);\n\n      if (window.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n        } // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n\n\n        transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n      }\n\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n      }\n\n      return curTransform || 0;\n    }\n\n    function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n    }\n\n    function isNode(node) {\n      // eslint-disable-next-line\n      if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n        return node instanceof HTMLElement;\n      }\n\n      return node && (node.nodeType === 1 || node.nodeType === 11);\n    }\n\n    function extend(...args) {\n      const to = Object(args[0]);\n      const noExtend = ['__proto__', 'constructor', 'prototype'];\n\n      for (let i = 1; i < args.length; i += 1) {\n        const nextSource = args[i];\n\n        if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n          const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n\n          for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            const nextKey = keysArray[nextIndex];\n            const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n            if (desc !== undefined && desc.enumerable) {\n              if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                if (nextSource[nextKey].__swiper__) {\n                  to[nextKey] = nextSource[nextKey];\n                } else {\n                  extend(to[nextKey], nextSource[nextKey]);\n                }\n              } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n\n                if (nextSource[nextKey].__swiper__) {\n                  to[nextKey] = nextSource[nextKey];\n                } else {\n                  extend(to[nextKey], nextSource[nextKey]);\n                }\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n\n      return to;\n    }\n\n    function setCSSProperty(el, varName, varValue) {\n      el.style.setProperty(varName, varValue);\n    }\n\n    function animateCSSModeScroll({\n      swiper,\n      targetPosition,\n      side\n    }) {\n      const window = getWindow();\n      const startPosition = -swiper.translate;\n      let startTime = null;\n      let time;\n      const duration = swiper.params.speed;\n      swiper.wrapperEl.style.scrollSnapType = 'none';\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n      const isOutOfBound = (current, target) => {\n        return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n      };\n\n      const animate = () => {\n        time = new Date().getTime();\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n        const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n        let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n        if (isOutOfBound(currentPosition, targetPosition)) {\n          currentPosition = targetPosition;\n        }\n\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n\n        if (isOutOfBound(currentPosition, targetPosition)) {\n          swiper.wrapperEl.style.overflow = 'hidden';\n          swiper.wrapperEl.style.scrollSnapType = '';\n          setTimeout(() => {\n            swiper.wrapperEl.style.overflow = '';\n            swiper.wrapperEl.scrollTo({\n              [side]: currentPosition\n            });\n          });\n          window.cancelAnimationFrame(swiper.cssModeFrameID);\n          return;\n        }\n\n        swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n      };\n\n      animate();\n    }\n\n    let support;\n\n    function calcSupport() {\n      const window = getWindow();\n      const document = getDocument();\n      return {\n        smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n        touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n        passiveListener: function checkPassiveListener() {\n          let supportsPassive = false;\n\n          try {\n            const opts = Object.defineProperty({}, 'passive', {\n              // eslint-disable-next-line\n              get() {\n                supportsPassive = true;\n              }\n\n            });\n            window.addEventListener('testPassiveListener', null, opts);\n          } catch (e) {// No support\n          }\n\n          return supportsPassive;\n        }(),\n        gestures: function checkGestures() {\n          return 'ongesturestart' in window;\n        }()\n      };\n    }\n\n    function getSupport() {\n      if (!support) {\n        support = calcSupport();\n      }\n\n      return support;\n    }\n\n    let deviceCached;\n\n    function calcDevice({\n      userAgent\n    } = {}) {\n      const support = getSupport();\n      const window = getWindow();\n      const platform = window.navigator.platform;\n      const ua = userAgent || window.navigator.userAgent;\n      const device = {\n        ios: false,\n        android: false\n      };\n      const screenWidth = window.screen.width;\n      const screenHeight = window.screen.height;\n      const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n      let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n      const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n      const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n      const windows = platform === 'Win32';\n      let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n      const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n      if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\n        if (!ipad) ipad = [0, 1, '13_0_0'];\n        macos = false;\n      } // Android\n\n\n      if (android && !windows) {\n        device.os = 'android';\n        device.android = true;\n      }\n\n      if (ipad || iphone || ipod) {\n        device.os = 'ios';\n        device.ios = true;\n      } // Export object\n\n\n      return device;\n    }\n\n    function getDevice(overrides = {}) {\n      if (!deviceCached) {\n        deviceCached = calcDevice(overrides);\n      }\n\n      return deviceCached;\n    }\n\n    let browser;\n\n    function calcBrowser() {\n      const window = getWindow();\n\n      function isSafari() {\n        const ua = window.navigator.userAgent.toLowerCase();\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n      }\n\n      return {\n        isSafari: isSafari(),\n        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n      };\n    }\n\n    function getBrowser() {\n      if (!browser) {\n        browser = calcBrowser();\n      }\n\n      return browser;\n    }\n\n    function Resize({\n      swiper,\n      on,\n      emit\n    }) {\n      const window = getWindow();\n      let observer = null;\n\n      const resizeHandler = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit('beforeResize');\n        emit('resize');\n      };\n\n      const createObserver = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        observer = new ResizeObserver(entries => {\n          const {\n            width,\n            height\n          } = swiper;\n          let newWidth = width;\n          let newHeight = height;\n          entries.forEach(({\n            contentBoxSize,\n            contentRect,\n            target\n          }) => {\n            if (target && target !== swiper.el) return;\n            newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n            newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n          });\n\n          if (newWidth !== width || newHeight !== height) {\n            resizeHandler();\n          }\n        });\n        observer.observe(swiper.el);\n      };\n\n      const removeObserver = () => {\n        if (observer && observer.unobserve && swiper.el) {\n          observer.unobserve(swiper.el);\n          observer = null;\n        }\n      };\n\n      const orientationChangeHandler = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit('orientationchange');\n      };\n\n      on('init', () => {\n        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n          createObserver();\n          return;\n        }\n\n        window.addEventListener('resize', resizeHandler);\n        window.addEventListener('orientationchange', orientationChangeHandler);\n      });\n      on('destroy', () => {\n        removeObserver();\n        window.removeEventListener('resize', resizeHandler);\n        window.removeEventListener('orientationchange', orientationChangeHandler);\n      });\n    }\n\n    function Observer({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      const observers = [];\n      const window = getWindow();\n\n      const attach = (target, options = {}) => {\n        const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n        const observer = new ObserverFunc(mutations => {\n          // The observerUpdate event should only be triggered\n          // once despite the number of mutations.  Additional\n          // triggers are redundant and are very costly\n          if (mutations.length === 1) {\n            emit('observerUpdate', mutations[0]);\n            return;\n          }\n\n          const observerUpdate = function observerUpdate() {\n            emit('observerUpdate', mutations[0]);\n          };\n\n          if (window.requestAnimationFrame) {\n            window.requestAnimationFrame(observerUpdate);\n          } else {\n            window.setTimeout(observerUpdate, 0);\n          }\n        });\n        observer.observe(target, {\n          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n          childList: typeof options.childList === 'undefined' ? true : options.childList,\n          characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n        });\n        observers.push(observer);\n      };\n\n      const init = () => {\n        if (!swiper.params.observer) return;\n\n        if (swiper.params.observeParents) {\n          const containerParents = swiper.$el.parents();\n\n          for (let i = 0; i < containerParents.length; i += 1) {\n            attach(containerParents[i]);\n          }\n        } // Observe container\n\n\n        attach(swiper.$el[0], {\n          childList: swiper.params.observeSlideChildren\n        }); // Observe wrapper\n\n        attach(swiper.$wrapperEl[0], {\n          attributes: false\n        });\n      };\n\n      const destroy = () => {\n        observers.forEach(observer => {\n          observer.disconnect();\n        });\n        observers.splice(0, observers.length);\n      };\n\n      extendParams({\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false\n      });\n      on('init', init);\n      on('destroy', destroy);\n    }\n\n    /* eslint-disable no-underscore-dangle */\n    var eventsEmitter = {\n      on(events, handler, priority) {\n        const self = this;\n        if (typeof handler !== 'function') return self;\n        const method = priority ? 'unshift' : 'push';\n        events.split(' ').forEach(event => {\n          if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n          self.eventsListeners[event][method](handler);\n        });\n        return self;\n      },\n\n      once(events, handler, priority) {\n        const self = this;\n        if (typeof handler !== 'function') return self;\n\n        function onceHandler(...args) {\n          self.off(events, onceHandler);\n\n          if (onceHandler.__emitterProxy) {\n            delete onceHandler.__emitterProxy;\n          }\n\n          handler.apply(self, args);\n        }\n\n        onceHandler.__emitterProxy = handler;\n        return self.on(events, onceHandler, priority);\n      },\n\n      onAny(handler, priority) {\n        const self = this;\n        if (typeof handler !== 'function') return self;\n        const method = priority ? 'unshift' : 'push';\n\n        if (self.eventsAnyListeners.indexOf(handler) < 0) {\n          self.eventsAnyListeners[method](handler);\n        }\n\n        return self;\n      },\n\n      offAny(handler) {\n        const self = this;\n        if (!self.eventsAnyListeners) return self;\n        const index = self.eventsAnyListeners.indexOf(handler);\n\n        if (index >= 0) {\n          self.eventsAnyListeners.splice(index, 1);\n        }\n\n        return self;\n      },\n\n      off(events, handler) {\n        const self = this;\n        if (!self.eventsListeners) return self;\n        events.split(' ').forEach(event => {\n          if (typeof handler === 'undefined') {\n            self.eventsListeners[event] = [];\n          } else if (self.eventsListeners[event]) {\n            self.eventsListeners[event].forEach((eventHandler, index) => {\n              if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n                self.eventsListeners[event].splice(index, 1);\n              }\n            });\n          }\n        });\n        return self;\n      },\n\n      emit(...args) {\n        const self = this;\n        if (!self.eventsListeners) return self;\n        let events;\n        let data;\n        let context;\n\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n          events = args[0];\n          data = args.slice(1, args.length);\n          context = self;\n        } else {\n          events = args[0].events;\n          data = args[0].data;\n          context = args[0].context || self;\n        }\n\n        data.unshift(context);\n        const eventsArray = Array.isArray(events) ? events : events.split(' ');\n        eventsArray.forEach(event => {\n          if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n            self.eventsAnyListeners.forEach(eventHandler => {\n              eventHandler.apply(context, [event, ...data]);\n            });\n          }\n\n          if (self.eventsListeners && self.eventsListeners[event]) {\n            self.eventsListeners[event].forEach(eventHandler => {\n              eventHandler.apply(context, data);\n            });\n          }\n        });\n        return self;\n      }\n\n    };\n\n    function updateSize() {\n      const swiper = this;\n      let width;\n      let height;\n      const $el = swiper.$el;\n\n      if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n        width = swiper.params.width;\n      } else {\n        width = $el[0].clientWidth;\n      }\n\n      if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n        height = swiper.params.height;\n      } else {\n        height = $el[0].clientHeight;\n      }\n\n      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n        return;\n      } // Subtract paddings\n\n\n      width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n      height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n      if (Number.isNaN(width)) width = 0;\n      if (Number.isNaN(height)) height = 0;\n      Object.assign(swiper, {\n        width,\n        height,\n        size: swiper.isHorizontal() ? width : height\n      });\n    }\n\n    function updateSlides() {\n      const swiper = this;\n\n      function getDirectionLabel(property) {\n        if (swiper.isHorizontal()) {\n          return property;\n        } // prettier-ignore\n\n\n        return {\n          'width': 'height',\n          'margin-top': 'margin-left',\n          'margin-bottom ': 'margin-right',\n          'margin-left': 'margin-top',\n          'margin-right': 'margin-bottom',\n          'padding-left': 'padding-top',\n          'padding-right': 'padding-bottom',\n          'marginRight': 'marginBottom'\n        }[property];\n      }\n\n      function getDirectionPropertyValue(node, label) {\n        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n      }\n\n      const params = swiper.params;\n      const {\n        $wrapperEl,\n        size: swiperSize,\n        rtlTranslate: rtl,\n        wrongRTL\n      } = swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n      const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n      const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n      let snapGrid = [];\n      const slidesGrid = [];\n      const slidesSizesGrid = [];\n      let offsetBefore = params.slidesOffsetBefore;\n\n      if (typeof offsetBefore === 'function') {\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\n      }\n\n      let offsetAfter = params.slidesOffsetAfter;\n\n      if (typeof offsetAfter === 'function') {\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\n      }\n\n      const previousSnapGridLength = swiper.snapGrid.length;\n      const previousSlidesGridLength = swiper.slidesGrid.length;\n      let spaceBetween = params.spaceBetween;\n      let slidePosition = -offsetBefore;\n      let prevSlideSize = 0;\n      let index = 0;\n\n      if (typeof swiperSize === 'undefined') {\n        return;\n      }\n\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n      }\n\n      swiper.virtualSize = -spaceBetween; // reset margins\n\n      if (rtl) slides.css({\n        marginLeft: '',\n        marginBottom: '',\n        marginTop: ''\n      });else slides.css({\n        marginRight: '',\n        marginBottom: '',\n        marginTop: ''\n      }); // reset cssMode offsets\n\n      if (params.centeredSlides && params.cssMode) {\n        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n      }\n\n      const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n      if (gridEnabled) {\n        swiper.grid.initSlides(slidesLength);\n      } // Calc slides\n\n\n      let slideSize;\n      const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n        return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n      }).length > 0;\n\n      for (let i = 0; i < slidesLength; i += 1) {\n        slideSize = 0;\n        const slide = slides.eq(i);\n\n        if (gridEnabled) {\n          swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n        }\n\n        if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n        if (params.slidesPerView === 'auto') {\n          if (shouldResetSlideSize) {\n            slides[i].style[getDirectionLabel('width')] = ``;\n          }\n\n          const slideStyles = getComputedStyle(slide[0]);\n          const currentTransform = slide[0].style.transform;\n          const currentWebKitTransform = slide[0].style.webkitTransform;\n\n          if (currentTransform) {\n            slide[0].style.transform = 'none';\n          }\n\n          if (currentWebKitTransform) {\n            slide[0].style.webkitTransform = 'none';\n          }\n\n          if (params.roundLengths) {\n            slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n          } else {\n            // eslint-disable-next-line\n            const width = getDirectionPropertyValue(slideStyles, 'width');\n            const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n            const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n            const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n            const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n            const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              const {\n                clientWidth,\n                offsetWidth\n              } = slide[0];\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n            }\n          }\n\n          if (currentTransform) {\n            slide[0].style.transform = currentTransform;\n          }\n\n          if (currentWebKitTransform) {\n            slide[0].style.webkitTransform = currentWebKitTransform;\n          }\n\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\n        } else {\n          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n          if (slides[i]) {\n            slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n          }\n        }\n\n        if (slides[i]) {\n          slides[i].swiperSlideSize = slideSize;\n        }\n\n        slidesSizesGrid.push(slideSize);\n\n        if (params.centeredSlides) {\n          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n          if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n          if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n          slidesGrid.push(slidePosition);\n        } else {\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n          slidesGrid.push(slidePosition);\n          slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index += 1;\n      }\n\n      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n        $wrapperEl.css({\n          width: `${swiper.virtualSize + params.spaceBetween}px`\n        });\n      }\n\n      if (params.setWrapperSize) {\n        $wrapperEl.css({\n          [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\n        });\n      }\n\n      if (gridEnabled) {\n        swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n      } // Remove last grid elements depending on width\n\n\n      if (!params.centeredSlides) {\n        const newSlidesGrid = [];\n\n        for (let i = 0; i < snapGrid.length; i += 1) {\n          let slidesGridItem = snapGrid[i];\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n          if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n            newSlidesGrid.push(slidesGridItem);\n          }\n        }\n\n        snapGrid = newSlidesGrid;\n\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n          snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n      }\n\n      if (snapGrid.length === 0) snapGrid = [0];\n\n      if (params.spaceBetween !== 0) {\n        const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n        slides.filter((_, slideIndex) => {\n          if (!params.cssMode) return true;\n\n          if (slideIndex === slides.length - 1) {\n            return false;\n          }\n\n          return true;\n        }).css({\n          [key]: `${spaceBetween}px`\n        });\n      }\n\n      if (params.centeredSlides && params.centeredSlidesBounds) {\n        let allSlidesSize = 0;\n        slidesSizesGrid.forEach(slideSizeValue => {\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize -= params.spaceBetween;\n        const maxSnap = allSlidesSize - swiperSize;\n        snapGrid = snapGrid.map(snap => {\n          if (snap < 0) return -offsetBefore;\n          if (snap > maxSnap) return maxSnap + offsetAfter;\n          return snap;\n        });\n      }\n\n      if (params.centerInsufficientSlides) {\n        let allSlidesSize = 0;\n        slidesSizesGrid.forEach(slideSizeValue => {\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize -= params.spaceBetween;\n\n        if (allSlidesSize < swiperSize) {\n          const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n          snapGrid.forEach((snap, snapIndex) => {\n            snapGrid[snapIndex] = snap - allSlidesOffset;\n          });\n          slidesGrid.forEach((snap, snapIndex) => {\n            slidesGrid[snapIndex] = snap + allSlidesOffset;\n          });\n        }\n      }\n\n      Object.assign(swiper, {\n        slides,\n        snapGrid,\n        slidesGrid,\n        slidesSizesGrid\n      });\n\n      if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n        setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n        const addToSnapGrid = -swiper.snapGrid[0];\n        const addToSlidesGrid = -swiper.slidesGrid[0];\n        swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n        swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n      }\n\n      if (slidesLength !== previousSlidesLength) {\n        swiper.emit('slidesLengthChange');\n      }\n\n      if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow) swiper.checkOverflow();\n        swiper.emit('snapGridLengthChange');\n      }\n\n      if (slidesGrid.length !== previousSlidesGridLength) {\n        swiper.emit('slidesGridLengthChange');\n      }\n\n      if (params.watchSlidesProgress) {\n        swiper.updateSlidesOffset();\n      }\n    }\n\n    function updateAutoHeight(speed) {\n      const swiper = this;\n      const activeSlides = [];\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      let newHeight = 0;\n      let i;\n\n      if (typeof speed === 'number') {\n        swiper.setTransition(speed);\n      } else if (speed === true) {\n        swiper.setTransition(swiper.params.speed);\n      }\n\n      const getSlideByIndex = index => {\n        if (isVirtual) {\n          return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n        }\n\n        return swiper.slides.eq(index)[0];\n      }; // Find slides currently in view\n\n\n      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n        if (swiper.params.centeredSlides) {\n          swiper.visibleSlides.each(slide => {\n            activeSlides.push(slide);\n          });\n        } else {\n          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n            const index = swiper.activeIndex + i;\n            if (index > swiper.slides.length && !isVirtual) break;\n            activeSlides.push(getSlideByIndex(index));\n          }\n        }\n      } else {\n        activeSlides.push(getSlideByIndex(swiper.activeIndex));\n      } // Find new height from highest slide in view\n\n\n      for (i = 0; i < activeSlides.length; i += 1) {\n        if (typeof activeSlides[i] !== 'undefined') {\n          const height = activeSlides[i].offsetHeight;\n          newHeight = height > newHeight ? height : newHeight;\n        }\n      } // Update Height\n\n\n      if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n    }\n\n    function updateSlidesOffset() {\n      const swiper = this;\n      const slides = swiper.slides;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n      }\n    }\n\n    function updateSlidesProgress(translate = this && this.translate || 0) {\n      const swiper = this;\n      const params = swiper.params;\n      const {\n        slides,\n        rtlTranslate: rtl,\n        snapGrid\n      } = swiper;\n      if (slides.length === 0) return;\n      if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n      let offsetCenter = -translate;\n      if (rtl) offsetCenter = translate; // Visible Slides\n\n      slides.removeClass(params.slideVisibleClass);\n      swiper.visibleSlidesIndexes = [];\n      swiper.visibleSlides = [];\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const slide = slides[i];\n        let slideOffset = slide.swiperSlideOffset;\n\n        if (params.cssMode && params.centeredSlides) {\n          slideOffset -= slides[0].swiperSlideOffset;\n        }\n\n        const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n        const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n        const slideBefore = -(offsetCenter - slideOffset);\n        const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n\n        slide.progress = rtl ? -slideProgress : slideProgress;\n        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n      }\n\n      swiper.visibleSlides = $(swiper.visibleSlides);\n    }\n\n    function updateProgress(translate) {\n      const swiper = this;\n\n      if (typeof translate === 'undefined') {\n        const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n      }\n\n      const params = swiper.params;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      let {\n        progress,\n        isBeginning,\n        isEnd\n      } = swiper;\n      const wasBeginning = isBeginning;\n      const wasEnd = isEnd;\n\n      if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n      } else {\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\n        isBeginning = progress <= 0;\n        isEnd = progress >= 1;\n      }\n\n      Object.assign(swiper, {\n        progress,\n        isBeginning,\n        isEnd\n      });\n      if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n      if (isBeginning && !wasBeginning) {\n        swiper.emit('reachBeginning toEdge');\n      }\n\n      if (isEnd && !wasEnd) {\n        swiper.emit('reachEnd toEdge');\n      }\n\n      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n        swiper.emit('fromEdge');\n      }\n\n      swiper.emit('progress', progress);\n    }\n\n    function updateSlidesClasses() {\n      const swiper = this;\n      const {\n        slides,\n        params,\n        $wrapperEl,\n        activeIndex,\n        realIndex\n      } = swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n      let activeSlide;\n\n      if (isVirtual) {\n        activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n      } else {\n        activeSlide = slides.eq(activeIndex);\n      } // Active classes\n\n\n      activeSlide.addClass(params.slideActiveClass);\n\n      if (params.loop) {\n        // Duplicate to all looped slides\n        if (activeSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n        } else {\n          $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n        }\n      } // Next Slide\n\n\n      let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n\n      if (params.loop && nextSlide.length === 0) {\n        nextSlide = slides.eq(0);\n        nextSlide.addClass(params.slideNextClass);\n      } // Prev Slide\n\n\n      let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n\n      if (params.loop && prevSlide.length === 0) {\n        prevSlide = slides.eq(-1);\n        prevSlide.addClass(params.slidePrevClass);\n      }\n\n      if (params.loop) {\n        // Duplicate to all looped slides\n        if (nextSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n        } else {\n          $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n        }\n\n        if (prevSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n        } else {\n          $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n        }\n      }\n\n      swiper.emitSlidesClasses();\n    }\n\n    function updateActiveIndex(newActiveIndex) {\n      const swiper = this;\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      const {\n        slidesGrid,\n        snapGrid,\n        params,\n        activeIndex: previousIndex,\n        realIndex: previousRealIndex,\n        snapIndex: previousSnapIndex\n      } = swiper;\n      let activeIndex = newActiveIndex;\n      let snapIndex;\n\n      if (typeof activeIndex === 'undefined') {\n        for (let i = 0; i < slidesGrid.length; i += 1) {\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\n            if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n              activeIndex = i;\n            } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n              activeIndex = i + 1;\n            }\n          } else if (translate >= slidesGrid[i]) {\n            activeIndex = i;\n          }\n        } // Normalize slideIndex\n\n\n        if (params.normalizeSlideIndex) {\n          if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n        }\n      }\n\n      if (snapGrid.indexOf(translate) >= 0) {\n        snapIndex = snapGrid.indexOf(translate);\n      } else {\n        const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n      }\n\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n      if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n          swiper.snapIndex = snapIndex;\n          swiper.emit('snapIndexChange');\n        }\n\n        return;\n      } // Get real index\n\n\n      const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n      Object.assign(swiper, {\n        snapIndex,\n        realIndex,\n        previousIndex,\n        activeIndex\n      });\n      swiper.emit('activeIndexChange');\n      swiper.emit('snapIndexChange');\n\n      if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n      }\n\n      if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n        swiper.emit('slideChange');\n      }\n    }\n\n    function updateClickedSlide(e) {\n      const swiper = this;\n      const params = swiper.params;\n      const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n      let slideFound = false;\n      let slideIndex;\n\n      if (slide) {\n        for (let i = 0; i < swiper.slides.length; i += 1) {\n          if (swiper.slides[i] === slide) {\n            slideFound = true;\n            slideIndex = i;\n            break;\n          }\n        }\n      }\n\n      if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n        } else {\n          swiper.clickedIndex = slideIndex;\n        }\n      } else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n      }\n\n      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n        swiper.slideToClickedSlide();\n      }\n    }\n\n    var update = {\n      updateSize,\n      updateSlides,\n      updateAutoHeight,\n      updateSlidesOffset,\n      updateSlidesProgress,\n      updateProgress,\n      updateSlidesClasses,\n      updateActiveIndex,\n      updateClickedSlide\n    };\n\n    function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n      const swiper = this;\n      const {\n        params,\n        rtlTranslate: rtl,\n        translate,\n        $wrapperEl\n      } = swiper;\n\n      if (params.virtualTranslate) {\n        return rtl ? -translate : translate;\n      }\n\n      if (params.cssMode) {\n        return translate;\n      }\n\n      let currentTranslate = getTranslate($wrapperEl[0], axis);\n      if (rtl) currentTranslate = -currentTranslate;\n      return currentTranslate || 0;\n    }\n\n    function setTranslate(translate, byController) {\n      const swiper = this;\n      const {\n        rtlTranslate: rtl,\n        params,\n        $wrapperEl,\n        wrapperEl,\n        progress\n      } = swiper;\n      let x = 0;\n      let y = 0;\n      const z = 0;\n\n      if (swiper.isHorizontal()) {\n        x = rtl ? -translate : translate;\n      } else {\n        y = translate;\n      }\n\n      if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n      }\n\n      if (params.cssMode) {\n        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n      } else if (!params.virtualTranslate) {\n        $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n      }\n\n      swiper.previousTranslate = swiper.translate;\n      swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n      let newProgress;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n      }\n\n      if (newProgress !== progress) {\n        swiper.updateProgress(translate);\n      }\n\n      swiper.emit('setTranslate', swiper.translate, byController);\n    }\n\n    function minTranslate() {\n      return -this.snapGrid[0];\n    }\n\n    function maxTranslate() {\n      return -this.snapGrid[this.snapGrid.length - 1];\n    }\n\n    function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n      const swiper = this;\n      const {\n        params,\n        wrapperEl\n      } = swiper;\n\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n      }\n\n      const minTranslate = swiper.minTranslate();\n      const maxTranslate = swiper.maxTranslate();\n      let newTranslate;\n      if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n      swiper.updateProgress(newTranslate);\n\n      if (params.cssMode) {\n        const isH = swiper.isHorizontal();\n\n        if (speed === 0) {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        } else {\n          if (!swiper.support.smoothScroll) {\n            animateCSSModeScroll({\n              swiper,\n              targetPosition: -newTranslate,\n              side: isH ? 'left' : 'top'\n            });\n            return true;\n          }\n\n          wrapperEl.scrollTo({\n            [isH ? 'left' : 'top']: -newTranslate,\n            behavior: 'smooth'\n          });\n        }\n\n        return true;\n      }\n\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(newTranslate);\n\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionEnd');\n        }\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(newTranslate);\n\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionStart');\n        }\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n\n          if (!swiper.onTranslateToWrapperTransitionEnd) {\n            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) return;\n              if (e.target !== this) return;\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.onTranslateToWrapperTransitionEnd = null;\n              delete swiper.onTranslateToWrapperTransitionEnd;\n\n              if (runCallbacks) {\n                swiper.emit('transitionEnd');\n              }\n            };\n          }\n\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n        }\n      }\n\n      return true;\n    }\n\n    var translate = {\n      getTranslate: getSwiperTranslate,\n      setTranslate,\n      minTranslate,\n      maxTranslate,\n      translateTo\n    };\n\n    function setTransition(duration, byController) {\n      const swiper = this;\n\n      if (!swiper.params.cssMode) {\n        swiper.$wrapperEl.transition(duration);\n      }\n\n      swiper.emit('setTransition', duration, byController);\n    }\n\n    function transitionEmit({\n      swiper,\n      runCallbacks,\n      direction,\n      step\n    }) {\n      const {\n        activeIndex,\n        previousIndex\n      } = swiper;\n      let dir = direction;\n\n      if (!dir) {\n        if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n      }\n\n      swiper.emit(`transition${step}`);\n\n      if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n          swiper.emit(`slideResetTransition${step}`);\n          return;\n        }\n\n        swiper.emit(`slideChangeTransition${step}`);\n\n        if (dir === 'next') {\n          swiper.emit(`slideNextTransition${step}`);\n        } else {\n          swiper.emit(`slidePrevTransition${step}`);\n        }\n      }\n    }\n\n    function transitionStart(runCallbacks = true, direction) {\n      const swiper = this;\n      const {\n        params\n      } = swiper;\n      if (params.cssMode) return;\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      transitionEmit({\n        swiper,\n        runCallbacks,\n        direction,\n        step: 'Start'\n      });\n    }\n\n    function transitionEnd(runCallbacks = true, direction) {\n      const swiper = this;\n      const {\n        params\n      } = swiper;\n      swiper.animating = false;\n      if (params.cssMode) return;\n      swiper.setTransition(0);\n      transitionEmit({\n        swiper,\n        runCallbacks,\n        direction,\n        step: 'End'\n      });\n    }\n\n    var transition = {\n      setTransition,\n      transitionStart,\n      transitionEnd\n    };\n\n    function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n      if (typeof index !== 'number' && typeof index !== 'string') {\n        throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\n      }\n\n      if (typeof index === 'string') {\n        /**\n         * The `index` argument converted from `string` to `number`.\n         * @type {number}\n         */\n        const indexAsNumber = parseInt(index, 10);\n        /**\n         * Determines whether the `index` argument is a valid `number`\n         * after being converted from the `string` type.\n         * @type {boolean}\n         */\n\n        const isValidNumber = isFinite(indexAsNumber);\n\n        if (!isValidNumber) {\n          throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n        } // Knowing that the converted `index` is a valid number,\n        // we can update the original argument's value.\n\n\n        index = indexAsNumber;\n      }\n\n      const swiper = this;\n      let slideIndex = index;\n      if (slideIndex < 0) slideIndex = 0;\n      const {\n        params,\n        snapGrid,\n        slidesGrid,\n        previousIndex,\n        activeIndex,\n        rtlTranslate: rtl,\n        wrapperEl,\n        enabled\n      } = swiper;\n\n      if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n        return false;\n      }\n\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n      let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n      if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n        swiper.emit('beforeSlideChangeStart');\n      }\n\n      const translate = -snapGrid[snapIndex]; // Update progress\n\n      swiper.updateProgress(translate); // Normalize slideIndex\n\n      if (params.normalizeSlideIndex) {\n        for (let i = 0; i < slidesGrid.length; i += 1) {\n          const normalizedTranslate = -Math.floor(translate * 100);\n          const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n          const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\n            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n              slideIndex = i;\n            } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n              slideIndex = i + 1;\n            }\n          } else if (normalizedTranslate >= normalizedGrid) {\n            slideIndex = i;\n          }\n        }\n      } // Directions locks\n\n\n      if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n          return false;\n        }\n\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n          if ((activeIndex || 0) !== slideIndex) return false;\n        }\n      }\n\n      let direction;\n      if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n        swiper.updateActiveIndex(slideIndex); // Update Height\n\n        if (params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n\n        swiper.updateSlidesClasses();\n\n        if (params.effect !== 'slide') {\n          swiper.setTranslate(translate);\n        }\n\n        if (direction !== 'reset') {\n          swiper.transitionStart(runCallbacks, direction);\n          swiper.transitionEnd(runCallbacks, direction);\n        }\n\n        return false;\n      }\n\n      if (params.cssMode) {\n        const isH = swiper.isHorizontal();\n        const t = rtl ? translate : -translate;\n\n        if (speed === 0) {\n          const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n          if (isVirtual) {\n            swiper.wrapperEl.style.scrollSnapType = 'none';\n            swiper._immediateVirtual = true;\n          }\n\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n\n          if (isVirtual) {\n            requestAnimationFrame(() => {\n              swiper.wrapperEl.style.scrollSnapType = '';\n              swiper._swiperImmediateVirtual = false;\n            });\n          }\n        } else {\n          if (!swiper.support.smoothScroll) {\n            animateCSSModeScroll({\n              swiper,\n              targetPosition: t,\n              side: isH ? 'left' : 'top'\n            });\n            return true;\n          }\n\n          wrapperEl.scrollTo({\n            [isH ? 'left' : 'top']: t,\n            behavior: 'smooth'\n          });\n        }\n\n        return true;\n      }\n\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n\n          if (!swiper.onSlideToWrapperTransitionEnd) {\n            swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) return;\n              if (e.target !== this) return;\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n              swiper.onSlideToWrapperTransitionEnd = null;\n              delete swiper.onSlideToWrapperTransitionEnd;\n              swiper.transitionEnd(runCallbacks, direction);\n            };\n          }\n\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        }\n      }\n\n      return true;\n    }\n\n    function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n      const swiper = this;\n      let newIndex = index;\n\n      if (swiper.params.loop) {\n        newIndex += swiper.loopedSlides;\n      }\n\n      return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n      const swiper = this;\n      const {\n        animating,\n        enabled,\n        params\n      } = swiper;\n      if (!enabled) return swiper;\n      let perGroup = params.slidesPerGroup;\n\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n        perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n      }\n\n      const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n      if (params.loop) {\n        if (animating && params.loopPreventsSlide) return false;\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      }\n\n      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n      const swiper = this;\n      const {\n        params,\n        animating,\n        snapGrid,\n        slidesGrid,\n        rtlTranslate,\n        enabled\n      } = swiper;\n      if (!enabled) return swiper;\n\n      if (params.loop) {\n        if (animating && params.loopPreventsSlide) return false;\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      }\n\n      const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n      function normalize(val) {\n        if (val < 0) return -Math.floor(Math.abs(val));\n        return Math.floor(val);\n      }\n\n      const normalizedTranslate = normalize(translate);\n      const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n      let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n      if (typeof prevSnap === 'undefined' && params.cssMode) {\n        let prevSnapIndex;\n        snapGrid.forEach((snap, snapIndex) => {\n          if (normalizedTranslate >= snap) {\n            // prevSnap = snap;\n            prevSnapIndex = snapIndex;\n          }\n        });\n\n        if (typeof prevSnapIndex !== 'undefined') {\n          prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n        }\n      }\n\n      let prevIndex = 0;\n\n      if (typeof prevSnap !== 'undefined') {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n        if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n          prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n          prevIndex = Math.max(prevIndex, 0);\n        }\n      }\n\n      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n      const swiper = this;\n      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n      const swiper = this;\n      let index = swiper.activeIndex;\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n      const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      if (translate >= swiper.snapGrid[snapIndex]) {\n        // The current translate is on or after the current snap index, so the choice\n        // is between the current index and the one after it.\n        const currentSnap = swiper.snapGrid[snapIndex];\n        const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n          index += swiper.params.slidesPerGroup;\n        }\n      } else {\n        // The current translate is before the current snap index, so the choice\n        // is between the current index and the one before it.\n        const prevSnap = swiper.snapGrid[snapIndex - 1];\n        const currentSnap = swiper.snapGrid[snapIndex];\n\n        if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n          index -= swiper.params.slidesPerGroup;\n        }\n      }\n\n      index = Math.max(index, 0);\n      index = Math.min(index, swiper.slidesGrid.length - 1);\n      return swiper.slideTo(index, speed, runCallbacks, internal);\n    }\n\n    function slideToClickedSlide() {\n      const swiper = this;\n      const {\n        params,\n        $wrapperEl\n      } = swiper;\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n      let slideToIndex = swiper.clickedIndex;\n      let realIndex;\n\n      if (params.loop) {\n        if (swiper.animating) return;\n        realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n        if (params.centeredSlides) {\n          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n            swiper.loopFix();\n            slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n            nextTick(() => {\n              swiper.slideTo(slideToIndex);\n            });\n          } else {\n            swiper.slideTo(slideToIndex);\n          }\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n          nextTick(() => {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    }\n\n    var slide = {\n      slideTo,\n      slideToLoop,\n      slideNext,\n      slidePrev,\n      slideReset,\n      slideToClosest,\n      slideToClickedSlide\n    };\n\n    function loopCreate() {\n      const swiper = this;\n      const document = getDocument();\n      const {\n        params,\n        $wrapperEl\n      } = swiper; // Remove duplicated slides\n\n      const $selector = $($wrapperEl.children()[0].parentNode);\n      $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n      let slides = $selector.children(`.${params.slideClass}`);\n\n      if (params.loopFillGroupWithBlank) {\n        const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n        if (blankSlidesNum !== params.slidesPerGroup) {\n          for (let i = 0; i < blankSlidesNum; i += 1) {\n            const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n            $selector.append(blankNode);\n          }\n\n          slides = $selector.children(`.${params.slideClass}`);\n        }\n      }\n\n      if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n      swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n      swiper.loopedSlides += params.loopAdditionalSlides;\n\n      if (swiper.loopedSlides > slides.length) {\n        swiper.loopedSlides = slides.length;\n      }\n\n      const prependSlides = [];\n      const appendSlides = [];\n      slides.each((el, index) => {\n        const slide = $(el);\n\n        if (index < swiper.loopedSlides) {\n          appendSlides.push(el);\n        }\n\n        if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n          prependSlides.push(el);\n        }\n\n        slide.attr('data-swiper-slide-index', index);\n      });\n\n      for (let i = 0; i < appendSlides.length; i += 1) {\n        $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n      }\n\n      for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n        $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n      }\n    }\n\n    function loopFix() {\n      const swiper = this;\n      swiper.emit('beforeLoopFix');\n      const {\n        activeIndex,\n        slides,\n        loopedSlides,\n        allowSlidePrev,\n        allowSlideNext,\n        snapGrid,\n        rtlTranslate: rtl\n      } = swiper;\n      let newIndex;\n      swiper.allowSlidePrev = true;\n      swiper.allowSlideNext = true;\n      const snapTranslate = -snapGrid[activeIndex];\n      const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n      if (activeIndex < loopedSlides) {\n        newIndex = slides.length - loopedSlides * 3 + activeIndex;\n        newIndex += loopedSlides;\n        const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n        if (slideChanged && diff !== 0) {\n          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n      } else if (activeIndex >= slides.length - loopedSlides) {\n        // Fix For Positive Oversliding\n        newIndex = -slides.length + activeIndex + loopedSlides;\n        newIndex += loopedSlides;\n        const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n        if (slideChanged && diff !== 0) {\n          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n      }\n\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      swiper.emit('loopFix');\n    }\n\n    function loopDestroy() {\n      const swiper = this;\n      const {\n        $wrapperEl,\n        params,\n        slides\n      } = swiper;\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n      slides.removeAttr('data-swiper-slide-index');\n    }\n\n    var loop = {\n      loopCreate,\n      loopFix,\n      loopDestroy\n    };\n\n    function setGrabCursor(moving) {\n      const swiper = this;\n      if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n      const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n      el.style.cursor = 'move';\n      el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n      el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n      el.style.cursor = moving ? 'grabbing' : 'grab';\n    }\n\n    function unsetGrabCursor() {\n      const swiper = this;\n\n      if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n        return;\n      }\n\n      swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n    }\n\n    var grabCursor = {\n      setGrabCursor,\n      unsetGrabCursor\n    };\n\n    function closestElement(selector, base = this) {\n      function __closestFrom(el) {\n        if (!el || el === getDocument() || el === getWindow()) return null;\n        if (el.assignedSlot) el = el.assignedSlot;\n        const found = el.closest(selector);\n        return found || __closestFrom(el.getRootNode().host);\n      }\n\n      return __closestFrom(base);\n    }\n\n    function onTouchStart(event) {\n      const swiper = this;\n      const document = getDocument();\n      const window = getWindow();\n      const data = swiper.touchEventsData;\n      const {\n        params,\n        touches,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return;\n      }\n\n      if (!swiper.animating && params.cssMode && params.loop) {\n        swiper.loopFix();\n      }\n\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n      let $targetEl = $(e.target);\n\n      if (params.touchEventsTarget === 'wrapper') {\n        if (!$targetEl.closest(swiper.wrapperEl).length) return;\n      }\n\n      data.isTouchEvent = e.type === 'touchstart';\n      if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n      if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n      if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n      const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n\n      if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n        $targetEl = $(event.path[0]);\n      }\n\n      const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n      const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n      if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {\n        swiper.allowClick = true;\n        return;\n      }\n\n      if (params.swipeHandler) {\n        if (!$targetEl.closest(params.swipeHandler)[0]) return;\n      }\n\n      touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      const startX = touches.currentX;\n      const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n      const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n      const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n        if (edgeSwipeDetection === 'prevent') {\n          event.preventDefault();\n        } else {\n          return;\n        }\n      }\n\n      Object.assign(data, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined\n      });\n      touches.startX = startX;\n      touches.startY = startY;\n      data.touchStartTime = now();\n      swiper.allowClick = true;\n      swiper.updateSize();\n      swiper.swipeDirection = undefined;\n      if (params.threshold > 0) data.allowThresholdMove = false;\n\n      if (e.type !== 'touchstart') {\n        let preventDefault = true;\n        if ($targetEl.is(data.focusableElements)) preventDefault = false;\n\n        if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n          document.activeElement.blur();\n        }\n\n        const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n        if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n          e.preventDefault();\n        }\n      }\n\n      swiper.emit('touchStart', e);\n    }\n\n    function onTouchMove(event) {\n      const document = getDocument();\n      const swiper = this;\n      const data = swiper.touchEventsData;\n      const {\n        params,\n        touches,\n        rtlTranslate: rtl,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n\n      if (!data.isTouched) {\n        if (data.startMoving && data.isScrolling) {\n          swiper.emit('touchMoveOpposite', e);\n        }\n\n        return;\n      }\n\n      if (data.isTouchEvent && e.type !== 'touchmove') return;\n      const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n      const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n      const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n      if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n      }\n\n      if (!swiper.allowTouchMove) {\n        // isMoved = true;\n        swiper.allowClick = false;\n\n        if (data.isTouched) {\n          Object.assign(touches, {\n            startX: pageX,\n            startY: pageY,\n            currentX: pageX,\n            currentY: pageY\n          });\n          data.touchStartTime = now();\n        }\n\n        return;\n      }\n\n      if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) {\n          // Vertical\n          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n            data.isTouched = false;\n            data.isMoved = false;\n            return;\n          }\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n          return;\n        }\n      }\n\n      if (data.isTouchEvent && document.activeElement) {\n        if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n          data.isMoved = true;\n          swiper.allowClick = false;\n          return;\n        }\n      }\n\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchMove', e);\n      }\n\n      if (e.targetTouches && e.targetTouches.length > 1) return;\n      touches.currentX = pageX;\n      touches.currentY = pageY;\n      const diffX = touches.currentX - touches.startX;\n      const diffY = touches.currentY - touches.startY;\n      if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n      if (typeof data.isScrolling === 'undefined') {\n        let touchAngle;\n\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n          data.isScrolling = false;\n        } else {\n          // eslint-disable-next-line\n          if (diffX * diffX + diffY * diffY >= 25) {\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n          }\n        }\n      }\n\n      if (data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      if (typeof data.startMoving === 'undefined') {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n          data.startMoving = true;\n        }\n      }\n\n      if (data.isScrolling) {\n        data.isTouched = false;\n        return;\n      }\n\n      if (!data.startMoving) {\n        return;\n      }\n\n      swiper.allowClick = false;\n\n      if (!params.cssMode && e.cancelable) {\n        e.preventDefault();\n      }\n\n      if (params.touchMoveStopPropagation && !params.nested) {\n        e.stopPropagation();\n      }\n\n      if (!data.isMoved) {\n        if (params.loop && !params.cssMode) {\n          swiper.loopFix();\n        }\n\n        data.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n\n        if (swiper.animating) {\n          swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n        }\n\n        data.allowMomentumBounce = false; // Grab Cursor\n\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n          swiper.setGrabCursor(true);\n        }\n\n        swiper.emit('sliderFirstMove', e);\n      }\n\n      swiper.emit('sliderMove', e);\n      data.isMoved = true;\n      let diff = swiper.isHorizontal() ? diffX : diffY;\n      touches.diff = diff;\n      diff *= params.touchRatio;\n      if (rtl) diff = -diff;\n      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n      data.currentTranslate = diff + data.startTranslate;\n      let disableParentSwiper = true;\n      let resistanceRatio = params.resistanceRatio;\n\n      if (params.touchReleaseOnEdges) {\n        resistanceRatio = 0;\n      }\n\n      if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n\n      if (disableParentSwiper) {\n        e.preventedByNestedSwiper = true;\n      } // Directions locks\n\n\n      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n\n      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n\n      if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n        data.currentTranslate = data.startTranslate;\n      } // Threshold\n\n\n      if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n          if (!data.allowThresholdMove) {\n            data.allowThresholdMove = true;\n            touches.startX = touches.currentX;\n            touches.startY = touches.currentY;\n            data.currentTranslate = data.startTranslate;\n            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n            return;\n          }\n        } else {\n          data.currentTranslate = data.startTranslate;\n          return;\n        }\n      }\n\n      if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n      if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n        swiper.freeMode.onTouchMove();\n      } // Update progress\n\n\n      swiper.updateProgress(data.currentTranslate); // Update translate\n\n      swiper.setTranslate(data.currentTranslate);\n    }\n\n    function onTouchEnd(event) {\n      const swiper = this;\n      const data = swiper.touchEventsData;\n      const {\n        params,\n        touches,\n        rtlTranslate: rtl,\n        slidesGrid,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchEnd', e);\n      }\n\n      data.allowTouchCallbacks = false;\n\n      if (!data.isTouched) {\n        if (data.isMoved && params.grabCursor) {\n          swiper.setGrabCursor(false);\n        }\n\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      } // Return Grab Cursor\n\n\n      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(false);\n      } // Time diff\n\n\n      const touchEndTime = now();\n      const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n      if (swiper.allowClick) {\n        swiper.updateClickedSlide(e);\n        swiper.emit('tap click', e);\n\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n          swiper.emit('doubleTap doubleClick', e);\n        }\n      }\n\n      data.lastClickTime = now();\n      nextTick(() => {\n        if (!swiper.destroyed) swiper.allowClick = true;\n      });\n\n      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      let currentPos;\n\n      if (params.followFinger) {\n        currentPos = rtl ? swiper.translate : -swiper.translate;\n      } else {\n        currentPos = -data.currentTranslate;\n      }\n\n      if (params.cssMode) {\n        return;\n      }\n\n      if (swiper.params.freeMode && params.freeMode.enabled) {\n        swiper.freeMode.onTouchEnd({\n          currentPos\n        });\n        return;\n      } // Find current slide\n\n\n      let stopIndex = 0;\n      let groupSize = swiper.slidesSizesGrid[0];\n\n      for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n        const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n        if (typeof slidesGrid[i + increment] !== 'undefined') {\n          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n            stopIndex = i;\n            groupSize = slidesGrid[i + increment] - slidesGrid[i];\n          }\n        } else if (currentPos >= slidesGrid[i]) {\n          stopIndex = i;\n          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n      } // Find current slide size\n\n\n      const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n      const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n\n        if (swiper.swipeDirection === 'next') {\n          if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n        }\n      } else {\n        // Short swipes\n        if (!params.shortSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n\n        const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n        if (!isNavButtonTarget) {\n          if (swiper.swipeDirection === 'next') {\n            swiper.slideTo(stopIndex + increment);\n          }\n\n          if (swiper.swipeDirection === 'prev') {\n            swiper.slideTo(stopIndex);\n          }\n        } else if (e.target === swiper.navigation.nextEl) {\n          swiper.slideTo(stopIndex + increment);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n    }\n\n    function onResize() {\n      const swiper = this;\n      const {\n        params,\n        el\n      } = swiper;\n      if (el && el.offsetWidth === 0) return; // Breakpoints\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Save locks\n\n\n      const {\n        allowSlideNext,\n        allowSlidePrev,\n        snapGrid\n      } = swiper; // Disable locks on resize\n\n      swiper.allowSlideNext = true;\n      swiper.allowSlidePrev = true;\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateSlidesClasses();\n\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.run();\n      } // Return locks after resize\n\n\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n\n      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n    }\n\n    function onClick(e) {\n      const swiper = this;\n      if (!swiper.enabled) return;\n\n      if (!swiper.allowClick) {\n        if (swiper.params.preventClicks) e.preventDefault();\n\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }\n      }\n    }\n\n    function onScroll() {\n      const swiper = this;\n      const {\n        wrapperEl,\n        rtlTranslate,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      swiper.previousTranslate = swiper.translate;\n\n      if (swiper.isHorizontal()) {\n        swiper.translate = -wrapperEl.scrollLeft;\n      } else {\n        swiper.translate = -wrapperEl.scrollTop;\n      } // eslint-disable-next-line\n\n\n      if (swiper.translate === -0) swiper.translate = 0;\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n      let newProgress;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n      }\n\n      if (newProgress !== swiper.progress) {\n        swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n      }\n\n      swiper.emit('setTranslate', swiper.translate, false);\n    }\n\n    let dummyEventAttached = false;\n\n    function dummyEventListener() {}\n\n    const events = (swiper, method) => {\n      const document = getDocument();\n      const {\n        params,\n        touchEvents,\n        el,\n        wrapperEl,\n        device,\n        support\n      } = swiper;\n      const capture = !!params.nested;\n      const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n      const swiperMethod = method; // Touch Events\n\n      if (!support.touch) {\n        el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n        document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n        document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n        el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n          passive: false,\n          capture\n        } : capture);\n        el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      } // Prevent Links Clicks\n\n\n      if (params.preventClicks || params.preventClicksPropagation) {\n        el[domMethod]('click', swiper.onClick, true);\n      }\n\n      if (params.cssMode) {\n        wrapperEl[domMethod]('scroll', swiper.onScroll);\n      } // Resize handler\n\n\n      if (params.updateOnWindowResize) {\n        swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n      } else {\n        swiper[swiperMethod]('observerUpdate', onResize, true);\n      }\n    };\n\n    function attachEvents() {\n      const swiper = this;\n      const document = getDocument();\n      const {\n        params,\n        support\n      } = swiper;\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n      if (params.cssMode) {\n        swiper.onScroll = onScroll.bind(swiper);\n      }\n\n      swiper.onClick = onClick.bind(swiper);\n\n      if (support.touch && !dummyEventAttached) {\n        document.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n\n      events(swiper, 'on');\n    }\n\n    function detachEvents() {\n      const swiper = this;\n      events(swiper, 'off');\n    }\n\n    var events$1 = {\n      attachEvents,\n      detachEvents\n    };\n\n    const isGridEnabled = (swiper, params) => {\n      return swiper.grid && params.grid && params.grid.rows > 1;\n    };\n\n    function setBreakpoint() {\n      const swiper = this;\n      const {\n        activeIndex,\n        initialized,\n        loopedSlides = 0,\n        params,\n        $el\n      } = swiper;\n      const breakpoints = params.breakpoints;\n      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n      const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n      if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n      const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      const wasMultiRow = isGridEnabled(swiper, params);\n      const isMultiRow = isGridEnabled(swiper, breakpointParams);\n      const wasEnabled = params.enabled;\n\n      if (wasMultiRow && !isMultiRow) {\n        $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n        swiper.emitContainerClasses();\n      } else if (!wasMultiRow && isMultiRow) {\n        $el.addClass(`${params.containerModifierClass}grid`);\n\n        if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n          $el.addClass(`${params.containerModifierClass}grid-column`);\n        }\n\n        swiper.emitContainerClasses();\n      }\n\n      const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      extend(swiper.params, breakpointParams);\n      const isEnabled = swiper.params.enabled;\n      Object.assign(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n      });\n\n      if (wasEnabled && !isEnabled) {\n        swiper.disable();\n      } else if (!wasEnabled && isEnabled) {\n        swiper.enable();\n      }\n\n      swiper.currentBreakpoint = breakpoint;\n      swiper.emit('_beforeBreakpoint', breakpointParams);\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n\n    function getBreakpoint(breakpoints, base = 'window', containerEl) {\n      if (!breakpoints || base === 'container' && !containerEl) return undefined;\n      let breakpoint = false;\n      const window = getWindow();\n      const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n      const points = Object.keys(breakpoints).map(point => {\n        if (typeof point === 'string' && point.indexOf('@') === 0) {\n          const minRatio = parseFloat(point.substr(1));\n          const value = currentHeight * minRatio;\n          return {\n            value,\n            point\n          };\n        }\n\n        return {\n          value: point,\n          point\n        };\n      });\n      points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n      for (let i = 0; i < points.length; i += 1) {\n        const {\n          point,\n          value\n        } = points[i];\n\n        if (base === 'window') {\n          if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n            breakpoint = point;\n          }\n        } else if (value <= containerEl.clientWidth) {\n          breakpoint = point;\n        }\n      }\n\n      return breakpoint || 'max';\n    }\n\n    var breakpoints = {\n      setBreakpoint,\n      getBreakpoint\n    };\n\n    function prepareClasses(entries, prefix) {\n      const resultClasses = [];\n      entries.forEach(item => {\n        if (typeof item === 'object') {\n          Object.keys(item).forEach(classNames => {\n            if (item[classNames]) {\n              resultClasses.push(prefix + classNames);\n            }\n          });\n        } else if (typeof item === 'string') {\n          resultClasses.push(prefix + item);\n        }\n      });\n      return resultClasses;\n    }\n\n    function addClasses() {\n      const swiper = this;\n      const {\n        classNames,\n        params,\n        rtl,\n        $el,\n        device,\n        support\n      } = swiper; // prettier-ignore\n\n      const suffixes = prepareClasses(['initialized', params.direction, {\n        'pointer-events': !support.touch\n      }, {\n        'free-mode': swiper.params.freeMode && params.freeMode.enabled\n      }, {\n        'autoheight': params.autoHeight\n      }, {\n        'rtl': rtl\n      }, {\n        'grid': params.grid && params.grid.rows > 1\n      }, {\n        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n      }, {\n        'android': device.android\n      }, {\n        'ios': device.ios\n      }, {\n        'css-mode': params.cssMode\n      }, {\n        'centered': params.cssMode && params.centeredSlides\n      }], params.containerModifierClass);\n      classNames.push(...suffixes);\n      $el.addClass([...classNames].join(' '));\n      swiper.emitContainerClasses();\n    }\n\n    function removeClasses() {\n      const swiper = this;\n      const {\n        $el,\n        classNames\n      } = swiper;\n      $el.removeClass(classNames.join(' '));\n      swiper.emitContainerClasses();\n    }\n\n    var classes = {\n      addClasses,\n      removeClasses\n    };\n\n    function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n      const window = getWindow();\n      let image;\n\n      function onReady() {\n        if (callback) callback();\n      }\n\n      const isPicture = $(imageEl).parent('picture')[0];\n\n      if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n        if (src) {\n          image = new window.Image();\n          image.onload = onReady;\n          image.onerror = onReady;\n\n          if (sizes) {\n            image.sizes = sizes;\n          }\n\n          if (srcset) {\n            image.srcset = srcset;\n          }\n\n          if (src) {\n            image.src = src;\n          }\n        } else {\n          onReady();\n        }\n      } else {\n        // image already loaded...\n        onReady();\n      }\n    }\n\n    function preloadImages() {\n      const swiper = this;\n      swiper.imagesToLoad = swiper.$el.find('img');\n\n      function onReady() {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n        if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n          if (swiper.params.updateOnImagesReady) swiper.update();\n          swiper.emit('imagesReady');\n        }\n      }\n\n      for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n        const imageEl = swiper.imagesToLoad[i];\n        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n      }\n    }\n\n    var images = {\n      loadImage,\n      preloadImages\n    };\n\n    function checkOverflow() {\n      const swiper = this;\n      const {\n        isLocked: wasLocked,\n        params\n      } = swiper;\n      const {\n        slidesOffsetBefore\n      } = params;\n\n      if (slidesOffsetBefore) {\n        const lastSlideIndex = swiper.slides.length - 1;\n        const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n        swiper.isLocked = swiper.size > lastSlideRightEdge;\n      } else {\n        swiper.isLocked = swiper.snapGrid.length === 1;\n      }\n\n      if (params.allowSlideNext === true) {\n        swiper.allowSlideNext = !swiper.isLocked;\n      }\n\n      if (params.allowSlidePrev === true) {\n        swiper.allowSlidePrev = !swiper.isLocked;\n      }\n\n      if (wasLocked && wasLocked !== swiper.isLocked) {\n        swiper.isEnd = false;\n      }\n\n      if (wasLocked !== swiper.isLocked) {\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n      }\n    }\n\n    var checkOverflow$1 = {\n      checkOverflow\n    };\n\n    var defaults = {\n      init: true,\n      direction: 'horizontal',\n      touchEventsTarget: 'wrapper',\n      initialSlide: 0,\n      speed: 300,\n      cssMode: false,\n      updateOnWindowResize: true,\n      resizeObserver: true,\n      nested: false,\n      createElements: false,\n      enabled: true,\n      focusableElements: 'input, select, option, textarea, button, video, label',\n      // Overrides\n      width: null,\n      height: null,\n      //\n      preventInteractionOnTransition: false,\n      // ssr\n      userAgent: null,\n      url: null,\n      // To support iOS's swipe-to-go-back gesture (when being used in-app).\n      edgeSwipeDetection: false,\n      edgeSwipeThreshold: 20,\n      // Autoheight\n      autoHeight: false,\n      // Set wrapper width\n      setWrapperSize: false,\n      // Virtual Translate\n      virtualTranslate: false,\n      // Effects\n      effect: 'slide',\n      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n      // Breakpoints\n      breakpoints: undefined,\n      breakpointsBase: 'window',\n      // Slides grid\n      spaceBetween: 0,\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      slidesPerGroupSkip: 0,\n      slidesPerGroupAuto: false,\n      centeredSlides: false,\n      centeredSlidesBounds: false,\n      slidesOffsetBefore: 0,\n      // in px\n      slidesOffsetAfter: 0,\n      // in px\n      normalizeSlideIndex: true,\n      centerInsufficientSlides: false,\n      // Disable swiper and hide navigation when container not overflow\n      watchOverflow: true,\n      // Round length\n      roundLengths: false,\n      // Touches\n      touchRatio: 1,\n      touchAngle: 45,\n      simulateTouch: true,\n      shortSwipes: true,\n      longSwipes: true,\n      longSwipesRatio: 0.5,\n      longSwipesMs: 300,\n      followFinger: true,\n      allowTouchMove: true,\n      threshold: 0,\n      touchMoveStopPropagation: false,\n      touchStartPreventDefault: true,\n      touchStartForcePreventDefault: false,\n      touchReleaseOnEdges: false,\n      // Unique Navigation Elements\n      uniqueNavElements: true,\n      // Resistance\n      resistance: true,\n      resistanceRatio: 0.85,\n      // Progress\n      watchSlidesProgress: false,\n      // Cursor\n      grabCursor: false,\n      // Clicks\n      preventClicks: true,\n      preventClicksPropagation: true,\n      slideToClickedSlide: false,\n      // Images\n      preloadImages: true,\n      updateOnImagesReady: true,\n      // loop\n      loop: false,\n      loopAdditionalSlides: 0,\n      loopedSlides: null,\n      loopFillGroupWithBlank: false,\n      loopPreventsSlide: true,\n      // Swiping/no swiping\n      allowSlidePrev: true,\n      allowSlideNext: true,\n      swipeHandler: null,\n      // '.swipe-handler',\n      noSwiping: true,\n      noSwipingClass: 'swiper-no-swiping',\n      noSwipingSelector: null,\n      // Passive Listeners\n      passiveListeners: true,\n      // NS\n      containerModifierClass: 'swiper-',\n      // NEW\n      slideClass: 'swiper-slide',\n      slideBlankClass: 'swiper-slide-invisible-blank',\n      slideActiveClass: 'swiper-slide-active',\n      slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n      slideVisibleClass: 'swiper-slide-visible',\n      slideDuplicateClass: 'swiper-slide-duplicate',\n      slideNextClass: 'swiper-slide-next',\n      slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n      slidePrevClass: 'swiper-slide-prev',\n      slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n      wrapperClass: 'swiper-wrapper',\n      // Callbacks\n      runCallbacksOnInit: true,\n      // Internals\n      _emitClasses: false\n    };\n\n    function moduleExtendParams(params, allModulesParams) {\n      return function extendParams(obj = {}) {\n        const moduleParamName = Object.keys(obj)[0];\n        const moduleParams = obj[moduleParamName];\n\n        if (typeof moduleParams !== 'object' || moduleParams === null) {\n          extend(allModulesParams, obj);\n          return;\n        }\n\n        if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n          params[moduleParamName] = {\n            auto: true\n          };\n        }\n\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n          extend(allModulesParams, obj);\n          return;\n        }\n\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = {\n            enabled: true\n          };\n        }\n\n        if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n          params[moduleParamName].enabled = true;\n        }\n\n        if (!params[moduleParamName]) params[moduleParamName] = {\n          enabled: false\n        };\n        extend(allModulesParams, obj);\n      };\n    }\n\n    /* eslint no-param-reassign: \"off\" */\n    const prototypes = {\n      eventsEmitter,\n      update,\n      translate,\n      transition,\n      slide,\n      loop,\n      grabCursor,\n      events: events$1,\n      breakpoints,\n      checkOverflow: checkOverflow$1,\n      classes,\n      images\n    };\n    const extendedDefaults = {};\n\n    class Swiper {\n      constructor(...args) {\n        let el;\n        let params;\n\n        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n          params = args[0];\n        } else {\n          [el, params] = args;\n        }\n\n        if (!params) params = {};\n        params = extend({}, params);\n        if (el && !params.el) params.el = el;\n\n        if (params.el && $(params.el).length > 1) {\n          const swipers = [];\n          $(params.el).each(containerEl => {\n            const newParams = extend({}, params, {\n              el: containerEl\n            });\n            swipers.push(new Swiper(newParams));\n          });\n          return swipers;\n        } // Swiper Instance\n\n\n        const swiper = this;\n        swiper.__swiper__ = true;\n        swiper.support = getSupport();\n        swiper.device = getDevice({\n          userAgent: params.userAgent\n        });\n        swiper.browser = getBrowser();\n        swiper.eventsListeners = {};\n        swiper.eventsAnyListeners = [];\n        swiper.modules = [...swiper.__modules__];\n\n        if (params.modules && Array.isArray(params.modules)) {\n          swiper.modules.push(...params.modules);\n        }\n\n        const allModulesParams = {};\n        swiper.modules.forEach(mod => {\n          mod({\n            swiper,\n            extendParams: moduleExtendParams(params, allModulesParams),\n            on: swiper.on.bind(swiper),\n            once: swiper.once.bind(swiper),\n            off: swiper.off.bind(swiper),\n            emit: swiper.emit.bind(swiper)\n          });\n        }); // Extend defaults with modules params\n\n        const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n        swiper.params = extend({}, swiperParams, extendedDefaults, params);\n        swiper.originalParams = extend({}, swiper.params);\n        swiper.passedParams = extend({}, params); // add event listeners\n\n        if (swiper.params && swiper.params.on) {\n          Object.keys(swiper.params.on).forEach(eventName => {\n            swiper.on(eventName, swiper.params.on[eventName]);\n          });\n        }\n\n        if (swiper.params && swiper.params.onAny) {\n          swiper.onAny(swiper.params.onAny);\n        } // Save Dom lib\n\n\n        swiper.$ = $; // Extend Swiper\n\n        Object.assign(swiper, {\n          enabled: swiper.params.enabled,\n          el,\n          // Classes\n          classNames: [],\n          // Slides\n          slides: $(),\n          slidesGrid: [],\n          snapGrid: [],\n          slidesSizesGrid: [],\n\n          // isDirection\n          isHorizontal() {\n            return swiper.params.direction === 'horizontal';\n          },\n\n          isVertical() {\n            return swiper.params.direction === 'vertical';\n          },\n\n          // Indexes\n          activeIndex: 0,\n          realIndex: 0,\n          //\n          isBeginning: true,\n          isEnd: false,\n          // Props\n          translate: 0,\n          previousTranslate: 0,\n          progress: 0,\n          velocity: 0,\n          animating: false,\n          // Locks\n          allowSlideNext: swiper.params.allowSlideNext,\n          allowSlidePrev: swiper.params.allowSlidePrev,\n          // Touch Events\n          touchEvents: function touchEvents() {\n            const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n            const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n            swiper.touchEventsTouch = {\n              start: touch[0],\n              move: touch[1],\n              end: touch[2],\n              cancel: touch[3]\n            };\n            swiper.touchEventsDesktop = {\n              start: desktop[0],\n              move: desktop[1],\n              end: desktop[2]\n            };\n            return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n          }(),\n          touchEventsData: {\n            isTouched: undefined,\n            isMoved: undefined,\n            allowTouchCallbacks: undefined,\n            touchStartTime: undefined,\n            isScrolling: undefined,\n            currentTranslate: undefined,\n            startTranslate: undefined,\n            allowThresholdMove: undefined,\n            // Form elements to match\n            focusableElements: swiper.params.focusableElements,\n            // Last click time\n            lastClickTime: now(),\n            clickTimeout: undefined,\n            // Velocities\n            velocities: [],\n            allowMomentumBounce: undefined,\n            isTouchEvent: undefined,\n            startMoving: undefined\n          },\n          // Clicks\n          allowClick: true,\n          // Touches\n          allowTouchMove: swiper.params.allowTouchMove,\n          touches: {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n          },\n          // Images\n          imagesToLoad: [],\n          imagesLoaded: 0\n        });\n        swiper.emit('_swiper'); // Init\n\n        if (swiper.params.init) {\n          swiper.init();\n        } // Return app instance\n\n\n        return swiper;\n      }\n\n      enable() {\n        const swiper = this;\n        if (swiper.enabled) return;\n        swiper.enabled = true;\n\n        if (swiper.params.grabCursor) {\n          swiper.setGrabCursor();\n        }\n\n        swiper.emit('enable');\n      }\n\n      disable() {\n        const swiper = this;\n        if (!swiper.enabled) return;\n        swiper.enabled = false;\n\n        if (swiper.params.grabCursor) {\n          swiper.unsetGrabCursor();\n        }\n\n        swiper.emit('disable');\n      }\n\n      setProgress(progress, speed) {\n        const swiper = this;\n        progress = Math.min(Math.max(progress, 0), 1);\n        const min = swiper.minTranslate();\n        const max = swiper.maxTranslate();\n        const current = (max - min) * progress + min;\n        swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      emitContainerClasses() {\n        const swiper = this;\n        if (!swiper.params._emitClasses || !swiper.el) return;\n        const cls = swiper.el.className.split(' ').filter(className => {\n          return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n        });\n        swiper.emit('_containerClasses', cls.join(' '));\n      }\n\n      getSlideClasses(slideEl) {\n        const swiper = this;\n        return slideEl.className.split(' ').filter(className => {\n          return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n        }).join(' ');\n      }\n\n      emitSlidesClasses() {\n        const swiper = this;\n        if (!swiper.params._emitClasses || !swiper.el) return;\n        const updates = [];\n        swiper.slides.each(slideEl => {\n          const classNames = swiper.getSlideClasses(slideEl);\n          updates.push({\n            slideEl,\n            classNames\n          });\n          swiper.emit('_slideClass', slideEl, classNames);\n        });\n        swiper.emit('_slideClasses', updates);\n      }\n\n      slidesPerViewDynamic(view = 'current', exact = false) {\n        const swiper = this;\n        const {\n          params,\n          slides,\n          slidesGrid,\n          slidesSizesGrid,\n          size: swiperSize,\n          activeIndex\n        } = swiper;\n        let spv = 1;\n\n        if (params.centeredSlides) {\n          let slideSize = slides[activeIndex].swiperSlideSize;\n          let breakLoop;\n\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) breakLoop = true;\n            }\n          }\n\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) breakLoop = true;\n            }\n          }\n        } else {\n          // eslint-disable-next-line\n          if (view === 'current') {\n            for (let i = activeIndex + 1; i < slides.length; i += 1) {\n              const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n              if (slideInView) {\n                spv += 1;\n              }\n            }\n          } else {\n            // previous\n            for (let i = activeIndex - 1; i >= 0; i -= 1) {\n              const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n              if (slideInView) {\n                spv += 1;\n              }\n            }\n          }\n        }\n\n        return spv;\n      }\n\n      update() {\n        const swiper = this;\n        if (!swiper || swiper.destroyed) return;\n        const {\n          snapGrid,\n          params\n        } = swiper; // Breakpoints\n\n        if (params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        function setTranslate() {\n          const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n          const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n          swiper.setTranslate(newTranslate);\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n\n        let translated;\n\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n          setTranslate();\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        } else {\n          if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n            translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n          } else {\n            translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n          }\n\n          if (!translated) {\n            setTranslate();\n          }\n        }\n\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n          swiper.checkOverflow();\n        }\n\n        swiper.emit('update');\n      }\n\n      changeDirection(newDirection, needUpdate = true) {\n        const swiper = this;\n        const currentDirection = swiper.params.direction;\n\n        if (!newDirection) {\n          // eslint-disable-next-line\n          newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n        }\n\n        if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n          return swiper;\n        }\n\n        swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n        swiper.emitContainerClasses();\n        swiper.params.direction = newDirection;\n        swiper.slides.each(slideEl => {\n          if (newDirection === 'vertical') {\n            slideEl.style.width = '';\n          } else {\n            slideEl.style.height = '';\n          }\n        });\n        swiper.emit('changeDirection');\n        if (needUpdate) swiper.update();\n        return swiper;\n      }\n\n      mount(el) {\n        const swiper = this;\n        if (swiper.mounted) return true; // Find el\n\n        const $el = $(el || swiper.params.el);\n        el = $el[0];\n\n        if (!el) {\n          return false;\n        }\n\n        el.swiper = swiper;\n\n        const getWrapperSelector = () => {\n          return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n        };\n\n        const getWrapper = () => {\n          if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n            const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n            res.children = options => $el.children(options);\n\n            return res;\n          }\n\n          return $el.children(getWrapperSelector());\n        }; // Find Wrapper\n\n\n        let $wrapperEl = getWrapper();\n\n        if ($wrapperEl.length === 0 && swiper.params.createElements) {\n          const document = getDocument();\n          const wrapper = document.createElement('div');\n          $wrapperEl = $(wrapper);\n          wrapper.className = swiper.params.wrapperClass;\n          $el.append(wrapper);\n          $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\n            $wrapperEl.append(slideEl);\n          });\n        }\n\n        Object.assign(swiper, {\n          $el,\n          el,\n          $wrapperEl,\n          wrapperEl: $wrapperEl[0],\n          mounted: true,\n          // RTL\n          rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n          rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n          wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n        });\n        return true;\n      }\n\n      init(el) {\n        const swiper = this;\n        if (swiper.initialized) return swiper;\n        const mounted = swiper.mount(el);\n        if (mounted === false) return swiper;\n        swiper.emit('beforeInit'); // Set breakpoint\n\n        if (swiper.params.breakpoints) {\n          swiper.setBreakpoint();\n        } // Add Classes\n\n\n        swiper.addClasses(); // Create loop\n\n        if (swiper.params.loop) {\n          swiper.loopCreate();\n        } // Update size\n\n\n        swiper.updateSize(); // Update slides\n\n        swiper.updateSlides();\n\n        if (swiper.params.watchOverflow) {\n          swiper.checkOverflow();\n        } // Set Grab Cursor\n\n\n        if (swiper.params.grabCursor && swiper.enabled) {\n          swiper.setGrabCursor();\n        }\n\n        if (swiper.params.preloadImages) {\n          swiper.preloadImages();\n        } // Slide To Initial Slide\n\n\n        if (swiper.params.loop) {\n          swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n        } else {\n          swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n        } // Attach events\n\n\n        swiper.attachEvents(); // Init Flag\n\n        swiper.initialized = true; // Emit\n\n        swiper.emit('init');\n        swiper.emit('afterInit');\n        return swiper;\n      }\n\n      destroy(deleteInstance = true, cleanStyles = true) {\n        const swiper = this;\n        const {\n          params,\n          $el,\n          $wrapperEl,\n          slides\n        } = swiper;\n\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n          return null;\n        }\n\n        swiper.emit('beforeDestroy'); // Init Flag\n\n        swiper.initialized = false; // Detach events\n\n        swiper.detachEvents(); // Destroy loop\n\n        if (params.loop) {\n          swiper.loopDestroy();\n        } // Cleanup styles\n\n\n        if (cleanStyles) {\n          swiper.removeClasses();\n          $el.removeAttr('style');\n          $wrapperEl.removeAttr('style');\n\n          if (slides && slides.length) {\n            slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n          }\n        }\n\n        swiper.emit('destroy'); // Detach emitter events\n\n        Object.keys(swiper.eventsListeners).forEach(eventName => {\n          swiper.off(eventName);\n        });\n\n        if (deleteInstance !== false) {\n          swiper.$el[0].swiper = null;\n          deleteProps(swiper);\n        }\n\n        swiper.destroyed = true;\n        return null;\n      }\n\n      static extendDefaults(newDefaults) {\n        extend(extendedDefaults, newDefaults);\n      }\n\n      static get extendedDefaults() {\n        return extendedDefaults;\n      }\n\n      static get defaults() {\n        return defaults;\n      }\n\n      static installModule(mod) {\n        if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n        const modules = Swiper.prototype.__modules__;\n\n        if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n          modules.push(mod);\n        }\n      }\n\n      static use(module) {\n        if (Array.isArray(module)) {\n          module.forEach(m => Swiper.installModule(m));\n          return Swiper;\n        }\n\n        Swiper.installModule(module);\n        return Swiper;\n      }\n\n    }\n\n    Object.keys(prototypes).forEach(prototypeGroup => {\n      Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n      });\n    });\n    Swiper.use([Resize, Observer]);\n\n    function Virtual({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        virtual: {\n          enabled: false,\n          slides: [],\n          cache: true,\n          renderSlide: null,\n          renderExternal: null,\n          renderExternalUpdate: true,\n          addSlidesBefore: 0,\n          addSlidesAfter: 0\n        }\n      });\n      let cssModeTimeout;\n      swiper.virtual = {\n        cache: {},\n        from: undefined,\n        to: undefined,\n        slides: [],\n        offset: 0,\n        slidesGrid: []\n      };\n\n      function renderSlide(slide, index) {\n        const params = swiper.params.virtual;\n\n        if (params.cache && swiper.virtual.cache[index]) {\n          return swiper.virtual.cache[index];\n        }\n\n        const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n        if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n        if (params.cache) swiper.virtual.cache[index] = $slideEl;\n        return $slideEl;\n      }\n\n      function update(force) {\n        const {\n          slidesPerView,\n          slidesPerGroup,\n          centeredSlides\n        } = swiper.params;\n        const {\n          addSlidesBefore,\n          addSlidesAfter\n        } = swiper.params.virtual;\n        const {\n          from: previousFrom,\n          to: previousTo,\n          slides,\n          slidesGrid: previousSlidesGrid,\n          offset: previousOffset\n        } = swiper.virtual;\n\n        if (!swiper.params.cssMode) {\n          swiper.updateActiveIndex();\n        }\n\n        const activeIndex = swiper.activeIndex || 0;\n        let offsetProp;\n        if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n        let slidesAfter;\n        let slidesBefore;\n\n        if (centeredSlides) {\n          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        } else {\n          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n          slidesBefore = slidesPerGroup + addSlidesBefore;\n        }\n\n        const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n        const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n        const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n        Object.assign(swiper.virtual, {\n          from,\n          to,\n          offset,\n          slidesGrid: swiper.slidesGrid\n        });\n\n        function onRendered() {\n          swiper.updateSlides();\n          swiper.updateProgress();\n          swiper.updateSlidesClasses();\n\n          if (swiper.lazy && swiper.params.lazy.enabled) {\n            swiper.lazy.load();\n          }\n        }\n\n        if (previousFrom === from && previousTo === to && !force) {\n          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n            swiper.slides.css(offsetProp, `${offset}px`);\n          }\n\n          swiper.updateProgress();\n          return;\n        }\n\n        if (swiper.params.virtual.renderExternal) {\n          swiper.params.virtual.renderExternal.call(swiper, {\n            offset,\n            from,\n            to,\n            slides: function getSlides() {\n              const slidesToRender = [];\n\n              for (let i = from; i <= to; i += 1) {\n                slidesToRender.push(slides[i]);\n              }\n\n              return slidesToRender;\n            }()\n          });\n\n          if (swiper.params.virtual.renderExternalUpdate) {\n            onRendered();\n          }\n\n          return;\n        }\n\n        const prependIndexes = [];\n        const appendIndexes = [];\n\n        if (force) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n        } else {\n          for (let i = previousFrom; i <= previousTo; i += 1) {\n            if (i < from || i > to) {\n              swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n            }\n          }\n        }\n\n        for (let i = 0; i < slides.length; i += 1) {\n          if (i >= from && i <= to) {\n            if (typeof previousTo === 'undefined' || force) {\n              appendIndexes.push(i);\n            } else {\n              if (i > previousTo) appendIndexes.push(i);\n              if (i < previousFrom) prependIndexes.push(i);\n            }\n          }\n        }\n\n        appendIndexes.forEach(index => {\n          swiper.$wrapperEl.append(renderSlide(slides[index], index));\n        });\n        prependIndexes.sort((a, b) => b - a).forEach(index => {\n          swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n        });\n        swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n        onRendered();\n      }\n\n      function appendSlide(slides) {\n        if (typeof slides === 'object' && 'length' in slides) {\n          for (let i = 0; i < slides.length; i += 1) {\n            if (slides[i]) swiper.virtual.slides.push(slides[i]);\n          }\n        } else {\n          swiper.virtual.slides.push(slides);\n        }\n\n        update(true);\n      }\n\n      function prependSlide(slides) {\n        const activeIndex = swiper.activeIndex;\n        let newActiveIndex = activeIndex + 1;\n        let numberOfNewSlides = 1;\n\n        if (Array.isArray(slides)) {\n          for (let i = 0; i < slides.length; i += 1) {\n            if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n          }\n\n          newActiveIndex = activeIndex + slides.length;\n          numberOfNewSlides = slides.length;\n        } else {\n          swiper.virtual.slides.unshift(slides);\n        }\n\n        if (swiper.params.virtual.cache) {\n          const cache = swiper.virtual.cache;\n          const newCache = {};\n          Object.keys(cache).forEach(cachedIndex => {\n            const $cachedEl = cache[cachedIndex];\n            const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n            if (cachedElIndex) {\n              $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n            }\n\n            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n          });\n          swiper.virtual.cache = newCache;\n        }\n\n        update(true);\n        swiper.slideTo(newActiveIndex, 0);\n      }\n\n      function removeSlide(slidesIndexes) {\n        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n        let activeIndex = swiper.activeIndex;\n\n        if (Array.isArray(slidesIndexes)) {\n          for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n            if (swiper.params.virtual.cache) {\n              delete swiper.virtual.cache[slidesIndexes[i]];\n            }\n\n            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n            activeIndex = Math.max(activeIndex, 0);\n          }\n        } else {\n          swiper.virtual.slides.splice(slidesIndexes, 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes];\n          }\n\n          if (slidesIndexes < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n\n        update(true);\n        swiper.slideTo(activeIndex, 0);\n      }\n\n      function removeAllSlides() {\n        swiper.virtual.slides = [];\n\n        if (swiper.params.virtual.cache) {\n          swiper.virtual.cache = {};\n        }\n\n        update(true);\n        swiper.slideTo(0, 0);\n      }\n\n      on('beforeInit', () => {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.virtual.slides = swiper.params.virtual.slides;\n        swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n\n        if (!swiper.params.initialSlide) {\n          update();\n        }\n      });\n      on('setTranslate', () => {\n        if (!swiper.params.virtual.enabled) return;\n\n        if (swiper.params.cssMode && !swiper._immediateVirtual) {\n          clearTimeout(cssModeTimeout);\n          cssModeTimeout = setTimeout(() => {\n            update();\n          }, 100);\n        } else {\n          update();\n        }\n      });\n      on('init update resize', () => {\n        if (!swiper.params.virtual.enabled) return;\n\n        if (swiper.params.cssMode) {\n          setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n        }\n      });\n      Object.assign(swiper.virtual, {\n        appendSlide,\n        prependSlide,\n        removeSlide,\n        removeAllSlides,\n        update\n      });\n    }\n\n    /* eslint-disable consistent-return */\n    function Keyboard({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      const document = getDocument();\n      const window = getWindow();\n      swiper.keyboard = {\n        enabled: false\n      };\n      extendParams({\n        keyboard: {\n          enabled: false,\n          onlyInViewport: true,\n          pageUpDown: true\n        }\n      });\n\n      function handle(event) {\n        if (!swiper.enabled) return;\n        const {\n          rtlTranslate: rtl\n        } = swiper;\n        let e = event;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n        const kc = e.keyCode || e.charCode;\n        const pageUpDown = swiper.params.keyboard.pageUpDown;\n        const isPageUp = pageUpDown && kc === 33;\n        const isPageDown = pageUpDown && kc === 34;\n        const isArrowLeft = kc === 37;\n        const isArrowRight = kc === 39;\n        const isArrowUp = kc === 38;\n        const isArrowDown = kc === 40; // Directions locks\n\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n          return false;\n        }\n\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n          return false;\n        }\n\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n          return undefined;\n        }\n\n        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n          return undefined;\n        }\n\n        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n          let inView = false; // Check that swiper should be inside of visible area of window\n\n          if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n            return undefined;\n          }\n\n          const $el = swiper.$el;\n          const swiperWidth = $el[0].clientWidth;\n          const swiperHeight = $el[0].clientHeight;\n          const windowWidth = window.innerWidth;\n          const windowHeight = window.innerHeight;\n          const swiperOffset = swiper.$el.offset();\n          if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n          const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n          for (let i = 0; i < swiperCoord.length; i += 1) {\n            const point = swiperCoord[i];\n\n            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n              if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n              inView = true;\n            }\n          }\n\n          if (!inView) return undefined;\n        }\n\n        if (swiper.isHorizontal()) {\n          if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n          }\n\n          if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n          if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n        } else {\n          if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n          }\n\n          if (isPageDown || isArrowDown) swiper.slideNext();\n          if (isPageUp || isArrowUp) swiper.slidePrev();\n        }\n\n        emit('keyPress', kc);\n        return undefined;\n      }\n\n      function enable() {\n        if (swiper.keyboard.enabled) return;\n        $(document).on('keydown', handle);\n        swiper.keyboard.enabled = true;\n      }\n\n      function disable() {\n        if (!swiper.keyboard.enabled) return;\n        $(document).off('keydown', handle);\n        swiper.keyboard.enabled = false;\n      }\n\n      on('init', () => {\n        if (swiper.params.keyboard.enabled) {\n          enable();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.keyboard.enabled) {\n          disable();\n        }\n      });\n      Object.assign(swiper.keyboard, {\n        enable,\n        disable\n      });\n    }\n\n    /* eslint-disable consistent-return */\n    function Mousewheel({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      const window = getWindow();\n      extendParams({\n        mousewheel: {\n          enabled: false,\n          releaseOnEdges: false,\n          invert: false,\n          forceToAxis: false,\n          sensitivity: 1,\n          eventsTarget: 'container',\n          thresholdDelta: null,\n          thresholdTime: null\n        }\n      });\n      swiper.mousewheel = {\n        enabled: false\n      };\n      let timeout;\n      let lastScrollTime = now();\n      let lastEventBeforeSnap;\n      const recentWheelEvents = [];\n\n      function normalize(e) {\n        // Reasonable defaults\n        const PIXEL_STEP = 10;\n        const LINE_HEIGHT = 40;\n        const PAGE_HEIGHT = 800;\n        let sX = 0;\n        let sY = 0; // spinX, spinY\n\n        let pX = 0;\n        let pY = 0; // pixelX, pixelY\n        // Legacy\n\n        if ('detail' in e) {\n          sY = e.detail;\n        }\n\n        if ('wheelDelta' in e) {\n          sY = -e.wheelDelta / 120;\n        }\n\n        if ('wheelDeltaY' in e) {\n          sY = -e.wheelDeltaY / 120;\n        }\n\n        if ('wheelDeltaX' in e) {\n          sX = -e.wheelDeltaX / 120;\n        } // side scrolling on FF with DOMMouseScroll\n\n\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n          sX = sY;\n          sY = 0;\n        }\n\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n\n        if ('deltaY' in e) {\n          pY = e.deltaY;\n        }\n\n        if ('deltaX' in e) {\n          pX = e.deltaX;\n        }\n\n        if (e.shiftKey && !pX) {\n          // if user scrolls with shift he wants horizontal scroll\n          pX = pY;\n          pY = 0;\n        }\n\n        if ((pX || pY) && e.deltaMode) {\n          if (e.deltaMode === 1) {\n            // delta in LINE units\n            pX *= LINE_HEIGHT;\n            pY *= LINE_HEIGHT;\n          } else {\n            // delta in PAGE units\n            pX *= PAGE_HEIGHT;\n            pY *= PAGE_HEIGHT;\n          }\n        } // Fall-back if spin cannot be determined\n\n\n        if (pX && !sX) {\n          sX = pX < 1 ? -1 : 1;\n        }\n\n        if (pY && !sY) {\n          sY = pY < 1 ? -1 : 1;\n        }\n\n        return {\n          spinX: sX,\n          spinY: sY,\n          pixelX: pX,\n          pixelY: pY\n        };\n      }\n\n      function handleMouseEnter() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = true;\n      }\n\n      function handleMouseLeave() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = false;\n      }\n\n      function animateSlider(newEvent) {\n        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n          // Prevent if delta of wheel scroll delta is below configured threshold\n          return false;\n        }\n\n        if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n          // Prevent if time between scrolls is below configured threshold\n          return false;\n        } // If the movement is NOT big enough and\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n        //   Don't go any further (avoid insignificant scroll movement).\n\n\n        if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n          // Return false as a default\n          return true;\n        } // If user is scrolling towards the end:\n        //   If the slider hasn't hit the latest slide or\n        //   if the slider is a loop and\n        //   if the slider isn't moving right now:\n        //     Go to next slide and\n        //     emit a scroll event.\n        // Else (the user is scrolling towards the beginning) and\n        // if the slider hasn't hit the first slide or\n        // if the slider is a loop and\n        // if the slider isn't moving right now:\n        //   Go to prev slide and\n        //   emit a scroll event.\n\n\n        if (newEvent.direction < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            emit('scroll', newEvent.raw);\n          }\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          emit('scroll', newEvent.raw);\n        } // If you got here is because an animation has been triggered so store the current time\n\n\n        lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n        return false;\n      }\n\n      function releaseScroll(newEvent) {\n        const params = swiper.params.mousewheel;\n\n        if (newEvent.direction < 0) {\n          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n            // Return true to animate scroll on edges\n            return true;\n          }\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n\n        return false;\n      }\n\n      function handle(event) {\n        let e = event;\n        let disableParentSwiper = true;\n        if (!swiper.enabled) return;\n        const params = swiper.params.mousewheel;\n\n        if (swiper.params.cssMode) {\n          e.preventDefault();\n        }\n\n        let target = swiper.$el;\n\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarget);\n        }\n\n        if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n        let delta = 0;\n        const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        const data = normalize(e);\n\n        if (params.forceToAxis) {\n          if (swiper.isHorizontal()) {\n            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n        } else {\n          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n        }\n\n        if (delta === 0) return true;\n        if (params.invert) delta = -delta; // Get the scroll positions\n\n        let positions = swiper.getTranslate() + delta * params.sensitivity;\n        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n        //     the disableParentSwiper will be true.\n        // When loop is false:\n        //     if the scroll positions is not on edge,\n        //     then the disableParentSwiper will be true.\n        //     if the scroll on edge positions,\n        //     then the disableParentSwiper will be false.\n\n        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n          // Register the new event in a variable which stores the relevant data\n          const newEvent = {\n            time: now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta),\n            raw: event\n          }; // Keep the most recent events\n\n          if (recentWheelEvents.length >= 2) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n          //   If direction has changed or\n          //   if the scroll is quicker than the previous one:\n          //     Animate the slider.\n          // Else (this is the first time the wheel is moved):\n          //     Animate the slider.\n\n          if (prevEvent) {\n            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n              animateSlider(newEvent);\n            }\n          } else {\n            animateSlider(newEvent);\n          } // If it's time to release the scroll:\n          //   Return now so you don't hit the preventDefault.\n\n\n          if (releaseScroll(newEvent)) {\n            return true;\n          }\n        } else {\n          // Freemode or scrollContainer:\n          // If we recently snapped after a momentum scroll, then ignore wheel events\n          // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n          // or if it's a new scroll (larger delta or inverse sign as last event before\n          // an end-of-momentum snap).\n          const newEvent = {\n            time: now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta)\n          };\n          const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n\n          if (!ignoreWheelEvents) {\n            lastEventBeforeSnap = undefined;\n\n            if (swiper.params.loop) {\n              swiper.loopFix();\n            }\n\n            let position = swiper.getTranslate() + delta * params.sensitivity;\n            const wasBeginning = swiper.isBeginning;\n            const wasEnd = swiper.isEnd;\n            if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n            if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n            swiper.setTransition(0);\n            swiper.setTranslate(position);\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n\n            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n              swiper.updateSlidesClasses();\n            }\n\n            if (swiper.params.freeMode.sticky) {\n              // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n              // the end of a momentum scroll by storing recent (N=15?) wheel events.\n              // 1. do all N events have decreasing or same (absolute value) delta?\n              // 2. did all N events arrive in the last M (M=500?) msecs?\n              // 3. does the earliest event have an (absolute value) delta that's\n              //    at least P (P=1?) larger than the most recent event's delta?\n              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n              // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n              // Snap immediately and ignore remaining wheel events in this scroll.\n              // See comment above for \"remaining wheel events in this scroll\" determination.\n              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n              clearTimeout(timeout);\n              timeout = undefined;\n\n              if (recentWheelEvents.length >= 15) {\n                recentWheelEvents.shift(); // only store the last N events\n              }\n\n              const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n              const firstEvent = recentWheelEvents[0];\n              recentWheelEvents.push(newEvent);\n\n              if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                recentWheelEvents.splice(0);\n              } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n                // We're at the end of the deceleration of a momentum scroll, so there's no need\n                // to wait for more events. Snap ASAP on the next tick.\n                // Also, because there's some remaining momentum we'll bias the snap in the\n                // direction of the ongoing scroll because it's better UX for the scroll to snap\n                // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                // if it's already scrolled more than 20% in the current direction, keep going.\n                const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                lastEventBeforeSnap = newEvent;\n                recentWheelEvents.splice(0);\n                timeout = nextTick(() => {\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 0); // no delay; move on next tick\n              }\n\n              if (!timeout) {\n                // if we get here, then we haven't detected the end of a momentum scroll, so\n                // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                // for 500ms.\n                timeout = nextTick(() => {\n                  const snapToThreshold = 0.5;\n                  lastEventBeforeSnap = newEvent;\n                  recentWheelEvents.splice(0);\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 500);\n              }\n            } // Emit event\n\n\n            if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\n\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n          }\n        }\n\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        return false;\n      }\n\n      function events(method) {\n        let target = swiper.$el;\n\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarget);\n        }\n\n        target[method]('mouseenter', handleMouseEnter);\n        target[method]('mouseleave', handleMouseLeave);\n        target[method]('wheel', handle);\n      }\n\n      function enable() {\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.removeEventListener('wheel', handle);\n          return true;\n        }\n\n        if (swiper.mousewheel.enabled) return false;\n        events('on');\n        swiper.mousewheel.enabled = true;\n        return true;\n      }\n\n      function disable() {\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.addEventListener(event, handle);\n          return true;\n        }\n\n        if (!swiper.mousewheel.enabled) return false;\n        events('off');\n        swiper.mousewheel.enabled = false;\n        return true;\n      }\n\n      on('init', () => {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          disable();\n        }\n\n        if (swiper.params.mousewheel.enabled) enable();\n      });\n      on('destroy', () => {\n        if (swiper.params.cssMode) {\n          enable();\n        }\n\n        if (swiper.mousewheel.enabled) disable();\n      });\n      Object.assign(swiper.mousewheel, {\n        enable,\n        disable\n      });\n    }\n\n    function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n      const document = getDocument();\n\n      if (swiper.params.createElements) {\n        Object.keys(checkProps).forEach(key => {\n          if (!params[key] && params.auto === true) {\n            let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n\n            if (!element) {\n              element = document.createElement('div');\n              element.className = checkProps[key];\n              swiper.$el.append(element);\n            }\n\n            params[key] = element;\n            originalParams[key] = element;\n          }\n        });\n      }\n\n      return params;\n    }\n\n    function Navigation({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      extendParams({\n        navigation: {\n          nextEl: null,\n          prevEl: null,\n          hideOnClick: false,\n          disabledClass: 'swiper-button-disabled',\n          hiddenClass: 'swiper-button-hidden',\n          lockClass: 'swiper-button-lock'\n        }\n      });\n      swiper.navigation = {\n        nextEl: null,\n        $nextEl: null,\n        prevEl: null,\n        $prevEl: null\n      };\n\n      function getEl(el) {\n        let $el;\n\n        if (el) {\n          $el = $(el);\n\n          if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\n            $el = swiper.$el.find(el);\n          }\n        }\n\n        return $el;\n      }\n\n      function toggleEl($el, disabled) {\n        const params = swiper.params.navigation;\n\n        if ($el && $el.length > 0) {\n          $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n          if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n\n          if (swiper.params.watchOverflow && swiper.enabled) {\n            $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n          }\n        }\n      }\n\n      function update() {\n        // Update Navigation Buttons\n        if (swiper.params.loop) return;\n        const {\n          $nextEl,\n          $prevEl\n        } = swiper.navigation;\n        toggleEl($prevEl, swiper.isBeginning);\n        toggleEl($nextEl, swiper.isEnd);\n      }\n\n      function onPrevClick(e) {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      }\n\n      function onNextClick(e) {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      }\n\n      function init() {\n        const params = swiper.params.navigation;\n        swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n          nextEl: 'swiper-button-next',\n          prevEl: 'swiper-button-prev'\n        });\n        if (!(params.nextEl || params.prevEl)) return;\n        const $nextEl = getEl(params.nextEl);\n        const $prevEl = getEl(params.prevEl);\n\n        if ($nextEl && $nextEl.length > 0) {\n          $nextEl.on('click', onNextClick);\n        }\n\n        if ($prevEl && $prevEl.length > 0) {\n          $prevEl.on('click', onPrevClick);\n        }\n\n        Object.assign(swiper.navigation, {\n          $nextEl,\n          nextEl: $nextEl && $nextEl[0],\n          $prevEl,\n          prevEl: $prevEl && $prevEl[0]\n        });\n\n        if (!swiper.enabled) {\n          if ($nextEl) $nextEl.addClass(params.lockClass);\n          if ($prevEl) $prevEl.addClass(params.lockClass);\n        }\n      }\n\n      function destroy() {\n        const {\n          $nextEl,\n          $prevEl\n        } = swiper.navigation;\n\n        if ($nextEl && $nextEl.length) {\n          $nextEl.off('click', onNextClick);\n          $nextEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n\n        if ($prevEl && $prevEl.length) {\n          $prevEl.off('click', onPrevClick);\n          $prevEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n      }\n\n      on('init', () => {\n        init();\n        update();\n      });\n      on('toEdge fromEdge lock unlock', () => {\n        update();\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      on('enable disable', () => {\n        const {\n          $nextEl,\n          $prevEl\n        } = swiper.navigation;\n\n        if ($nextEl) {\n          $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n        }\n\n        if ($prevEl) {\n          $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n        }\n      });\n      on('click', (_s, e) => {\n        const {\n          $nextEl,\n          $prevEl\n        } = swiper.navigation;\n        const targetEl = e.target;\n\n        if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n          let isHidden;\n\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if (isHidden === true) {\n            emit('navigationShow');\n          } else {\n            emit('navigationHide');\n          }\n\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      });\n      Object.assign(swiper.navigation, {\n        update,\n        init,\n        destroy\n      });\n    }\n\n    function classesToSelector(classes = '') {\n      return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n    }\n\n    function Pagination({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      const pfx = 'swiper-pagination';\n      extendParams({\n        pagination: {\n          el: null,\n          bulletElement: 'span',\n          clickable: false,\n          hideOnClick: false,\n          renderBullet: null,\n          renderProgressbar: null,\n          renderFraction: null,\n          renderCustom: null,\n          progressbarOpposite: false,\n          type: 'bullets',\n          // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n          dynamicBullets: false,\n          dynamicMainBullets: 1,\n          formatFractionCurrent: number => number,\n          formatFractionTotal: number => number,\n          bulletClass: `${pfx}-bullet`,\n          bulletActiveClass: `${pfx}-bullet-active`,\n          modifierClass: `${pfx}-`,\n          currentClass: `${pfx}-current`,\n          totalClass: `${pfx}-total`,\n          hiddenClass: `${pfx}-hidden`,\n          progressbarFillClass: `${pfx}-progressbar-fill`,\n          progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n          clickableClass: `${pfx}-clickable`,\n          lockClass: `${pfx}-lock`,\n          horizontalClass: `${pfx}-horizontal`,\n          verticalClass: `${pfx}-vertical`\n        }\n      });\n      swiper.pagination = {\n        el: null,\n        $el: null,\n        bullets: []\n      };\n      let bulletSize;\n      let dynamicBulletIndex = 0;\n\n      function isPaginationDisabled() {\n        return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n      }\n\n      function setSideBullets($bulletEl, position) {\n        const {\n          bulletActiveClass\n        } = swiper.params.pagination;\n        $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\n      }\n\n      function update() {\n        // Render || Update Pagination bullets/items\n        const rtl = swiper.rtl;\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        const $el = swiper.pagination.$el; // Current/Total\n\n        let current;\n        const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        if (swiper.params.loop) {\n          current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n          if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n            current -= slidesLength - swiper.loopedSlides * 2;\n          }\n\n          if (current > total - 1) current -= total;\n          if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n        } else if (typeof swiper.snapIndex !== 'undefined') {\n          current = swiper.snapIndex;\n        } else {\n          current = swiper.activeIndex || 0;\n        } // Types\n\n\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n          const bullets = swiper.pagination.bullets;\n          let firstIndex;\n          let lastIndex;\n          let midIndex;\n\n          if (params.dynamicBullets) {\n            bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n            $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\n\n            if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n              dynamicBulletIndex += current - swiper.previousIndex;\n\n              if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n                dynamicBulletIndex = params.dynamicMainBullets - 1;\n              } else if (dynamicBulletIndex < 0) {\n                dynamicBulletIndex = 0;\n              }\n            }\n\n            firstIndex = current - dynamicBulletIndex;\n            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n            midIndex = (lastIndex + firstIndex) / 2;\n          }\n\n          bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\n\n          if ($el.length > 1) {\n            bullets.each(bullet => {\n              const $bullet = $(bullet);\n              const bulletIndex = $bullet.index();\n\n              if (bulletIndex === current) {\n                $bullet.addClass(params.bulletActiveClass);\n              }\n\n              if (params.dynamicBullets) {\n                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                  $bullet.addClass(`${params.bulletActiveClass}-main`);\n                }\n\n                if (bulletIndex === firstIndex) {\n                  setSideBullets($bullet, 'prev');\n                }\n\n                if (bulletIndex === lastIndex) {\n                  setSideBullets($bullet, 'next');\n                }\n              }\n            });\n          } else {\n            const $bullet = bullets.eq(current);\n            const bulletIndex = $bullet.index();\n            $bullet.addClass(params.bulletActiveClass);\n\n            if (params.dynamicBullets) {\n              const $firstDisplayedBullet = bullets.eq(firstIndex);\n              const $lastDisplayedBullet = bullets.eq(lastIndex);\n\n              for (let i = firstIndex; i <= lastIndex; i += 1) {\n                bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n              }\n\n              if (swiper.params.loop) {\n                if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                  for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                    bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n                  }\n\n                  bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n                } else {\n                  setSideBullets($firstDisplayedBullet, 'prev');\n                  setSideBullets($lastDisplayedBullet, 'next');\n                }\n              } else {\n                setSideBullets($firstDisplayedBullet, 'prev');\n                setSideBullets($lastDisplayedBullet, 'next');\n              }\n            }\n          }\n\n          if (params.dynamicBullets) {\n            const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n            const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n            const offsetProp = rtl ? 'right' : 'left';\n            bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n          }\n        }\n\n        if (params.type === 'fraction') {\n          $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n          $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n        }\n\n        if (params.type === 'progressbar') {\n          let progressbarDirection;\n\n          if (params.progressbarOpposite) {\n            progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n          } else {\n            progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n          }\n\n          const scale = (current + 1) / total;\n          let scaleX = 1;\n          let scaleY = 1;\n\n          if (progressbarDirection === 'horizontal') {\n            scaleX = scale;\n          } else {\n            scaleY = scale;\n          }\n\n          $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n        }\n\n        if (params.type === 'custom' && params.renderCustom) {\n          $el.html(params.renderCustom(swiper, current + 1, total));\n          emit('paginationRender', $el[0]);\n        } else {\n          emit('paginationUpdate', $el[0]);\n        }\n\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n      }\n\n      function render() {\n        // Render Container\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        const $el = swiper.pagination.$el;\n        let paginationHTML = '';\n\n        if (params.type === 'bullets') {\n          let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n          if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\n            numberOfBullets = slidesLength;\n          }\n\n          for (let i = 0; i < numberOfBullets; i += 1) {\n            if (params.renderBullet) {\n              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n            } else {\n              paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n            }\n          }\n\n          $el.html(paginationHTML);\n          swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n        }\n\n        if (params.type === 'fraction') {\n          if (params.renderFraction) {\n            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n          } else {\n            paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n          }\n\n          $el.html(paginationHTML);\n        }\n\n        if (params.type === 'progressbar') {\n          if (params.renderProgressbar) {\n            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n          } else {\n            paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n          }\n\n          $el.html(paginationHTML);\n        }\n\n        if (params.type !== 'custom') {\n          emit('paginationRender', swiper.pagination.$el[0]);\n        }\n      }\n\n      function init() {\n        swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n          el: 'swiper-pagination'\n        });\n        const params = swiper.params.pagination;\n        if (!params.el) return;\n        let $el = $(params.el);\n        if ($el.length === 0) return;\n\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n          $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n\n          if ($el.length > 1) {\n            $el = $el.filter(el => {\n              if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n              return true;\n            });\n          }\n        }\n\n        if (params.type === 'bullets' && params.clickable) {\n          $el.addClass(params.clickableClass);\n        }\n\n        $el.addClass(params.modifierClass + params.type);\n        $el.addClass(params.modifierClass + swiper.params.direction);\n\n        if (params.type === 'bullets' && params.dynamicBullets) {\n          $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n          dynamicBulletIndex = 0;\n\n          if (params.dynamicMainBullets < 1) {\n            params.dynamicMainBullets = 1;\n          }\n        }\n\n        if (params.type === 'progressbar' && params.progressbarOpposite) {\n          $el.addClass(params.progressbarOppositeClass);\n        }\n\n        if (params.clickable) {\n          $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n            e.preventDefault();\n            let index = $(this).index() * swiper.params.slidesPerGroup;\n            if (swiper.params.loop) index += swiper.loopedSlides;\n            swiper.slideTo(index);\n          });\n        }\n\n        Object.assign(swiper.pagination, {\n          $el,\n          el: $el[0]\n        });\n\n        if (!swiper.enabled) {\n          $el.addClass(params.lockClass);\n        }\n      }\n\n      function destroy() {\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        const $el = swiper.pagination.$el;\n        $el.removeClass(params.hiddenClass);\n        $el.removeClass(params.modifierClass + params.type);\n        $el.removeClass(params.modifierClass + swiper.params.direction);\n        if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n        if (params.clickable) {\n          $el.off('click', classesToSelector(params.bulletClass));\n        }\n      }\n\n      on('init', () => {\n        init();\n        render();\n        update();\n      });\n      on('activeIndexChange', () => {\n        if (swiper.params.loop) {\n          update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          update();\n        }\n      });\n      on('snapIndexChange', () => {\n        if (!swiper.params.loop) {\n          update();\n        }\n      });\n      on('slidesLengthChange', () => {\n        if (swiper.params.loop) {\n          render();\n          update();\n        }\n      });\n      on('snapGridLengthChange', () => {\n        if (!swiper.params.loop) {\n          render();\n          update();\n        }\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      on('enable disable', () => {\n        const {\n          $el\n        } = swiper.pagination;\n\n        if ($el) {\n          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n        }\n      });\n      on('lock unlock', () => {\n        update();\n      });\n      on('click', (_s, e) => {\n        const targetEl = e.target;\n        const {\n          $el\n        } = swiper.pagination;\n\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n          const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n\n          if (isHidden === true) {\n            emit('paginationShow');\n          } else {\n            emit('paginationHide');\n          }\n\n          $el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      });\n      Object.assign(swiper.pagination, {\n        render,\n        update,\n        init,\n        destroy\n      });\n    }\n\n    function Scrollbar({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      const document = getDocument();\n      let isTouched = false;\n      let timeout = null;\n      let dragTimeout = null;\n      let dragStartPos;\n      let dragSize;\n      let trackSize;\n      let divider;\n      extendParams({\n        scrollbar: {\n          el: null,\n          dragSize: 'auto',\n          hide: false,\n          draggable: false,\n          snapOnRelease: true,\n          lockClass: 'swiper-scrollbar-lock',\n          dragClass: 'swiper-scrollbar-drag'\n        }\n      });\n      swiper.scrollbar = {\n        el: null,\n        dragEl: null,\n        $el: null,\n        $dragEl: null\n      };\n\n      function setTranslate() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        const {\n          scrollbar,\n          rtlTranslate: rtl,\n          progress\n        } = swiper;\n        const {\n          $dragEl,\n          $el\n        } = scrollbar;\n        const params = swiper.params.scrollbar;\n        let newSize = dragSize;\n        let newPos = (trackSize - dragSize) * progress;\n\n        if (rtl) {\n          newPos = -newPos;\n\n          if (newPos > 0) {\n            newSize = dragSize - newPos;\n            newPos = 0;\n          } else if (-newPos + dragSize > trackSize) {\n            newSize = trackSize + newPos;\n          }\n        } else if (newPos < 0) {\n          newSize = dragSize + newPos;\n          newPos = 0;\n        } else if (newPos + dragSize > trackSize) {\n          newSize = trackSize - newPos;\n        }\n\n        if (swiper.isHorizontal()) {\n          $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n          $dragEl[0].style.width = `${newSize}px`;\n        } else {\n          $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n          $dragEl[0].style.height = `${newSize}px`;\n        }\n\n        if (params.hide) {\n          clearTimeout(timeout);\n          $el[0].style.opacity = 1;\n          timeout = setTimeout(() => {\n            $el[0].style.opacity = 0;\n            $el.transition(400);\n          }, 1000);\n        }\n      }\n\n      function setTransition(duration) {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        swiper.scrollbar.$dragEl.transition(duration);\n      }\n\n      function updateSize() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        const {\n          scrollbar\n        } = swiper;\n        const {\n          $dragEl,\n          $el\n        } = scrollbar;\n        $dragEl[0].style.width = '';\n        $dragEl[0].style.height = '';\n        trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n\n        if (swiper.params.scrollbar.dragSize === 'auto') {\n          dragSize = trackSize * divider;\n        } else {\n          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        }\n\n        if (swiper.isHorizontal()) {\n          $dragEl[0].style.width = `${dragSize}px`;\n        } else {\n          $dragEl[0].style.height = `${dragSize}px`;\n        }\n\n        if (divider >= 1) {\n          $el[0].style.display = 'none';\n        } else {\n          $el[0].style.display = '';\n        }\n\n        if (swiper.params.scrollbar.hide) {\n          $el[0].style.opacity = 0;\n        }\n\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n        }\n      }\n\n      function getPointerPosition(e) {\n        if (swiper.isHorizontal()) {\n          return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n        }\n\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n      }\n\n      function setDragPosition(e) {\n        const {\n          scrollbar,\n          rtlTranslate: rtl\n        } = swiper;\n        const {\n          $el\n        } = scrollbar;\n        let positionRatio;\n        positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n        if (rtl) {\n          positionRatio = 1 - positionRatio;\n        }\n\n        const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      function onDragStart(e) {\n        const params = swiper.params.scrollbar;\n        const {\n          scrollbar,\n          $wrapperEl\n        } = swiper;\n        const {\n          $el,\n          $dragEl\n        } = scrollbar;\n        isTouched = true;\n        dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n        e.preventDefault();\n        e.stopPropagation();\n        $wrapperEl.transition(100);\n        $dragEl.transition(100);\n        setDragPosition(e);\n        clearTimeout(dragTimeout);\n        $el.transition(0);\n\n        if (params.hide) {\n          $el.css('opacity', 1);\n        }\n\n        if (swiper.params.cssMode) {\n          swiper.$wrapperEl.css('scroll-snap-type', 'none');\n        }\n\n        emit('scrollbarDragStart', e);\n      }\n\n      function onDragMove(e) {\n        const {\n          scrollbar,\n          $wrapperEl\n        } = swiper;\n        const {\n          $el,\n          $dragEl\n        } = scrollbar;\n        if (!isTouched) return;\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        setDragPosition(e);\n        $wrapperEl.transition(0);\n        $el.transition(0);\n        $dragEl.transition(0);\n        emit('scrollbarDragMove', e);\n      }\n\n      function onDragEnd(e) {\n        const params = swiper.params.scrollbar;\n        const {\n          scrollbar,\n          $wrapperEl\n        } = swiper;\n        const {\n          $el\n        } = scrollbar;\n        if (!isTouched) return;\n        isTouched = false;\n\n        if (swiper.params.cssMode) {\n          swiper.$wrapperEl.css('scroll-snap-type', '');\n          $wrapperEl.transition('');\n        }\n\n        if (params.hide) {\n          clearTimeout(dragTimeout);\n          dragTimeout = nextTick(() => {\n            $el.css('opacity', 0);\n            $el.transition(400);\n          }, 1000);\n        }\n\n        emit('scrollbarDragEnd', e);\n\n        if (params.snapOnRelease) {\n          swiper.slideToClosest();\n        }\n      }\n\n      function events(method) {\n        const {\n          scrollbar,\n          touchEventsTouch,\n          touchEventsDesktop,\n          params,\n          support\n        } = swiper;\n        const $el = scrollbar.$el;\n        const target = $el[0];\n        const activeListener = support.passiveListener && params.passiveListeners ? {\n          passive: false,\n          capture: false\n        } : false;\n        const passiveListener = support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        if (!target) return;\n        const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n\n        if (!support.touch) {\n          target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n          document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n          document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n        } else {\n          target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n          target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n          target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n        }\n      }\n\n      function enableDraggable() {\n        if (!swiper.params.scrollbar.el) return;\n        events('on');\n      }\n\n      function disableDraggable() {\n        if (!swiper.params.scrollbar.el) return;\n        events('off');\n      }\n\n      function init() {\n        const {\n          scrollbar,\n          $el: $swiperEl\n        } = swiper;\n        swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n          el: 'swiper-scrollbar'\n        });\n        const params = swiper.params.scrollbar;\n        if (!params.el) return;\n        let $el = $(params.el);\n\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n          $el = $swiperEl.find(params.el);\n        }\n\n        let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n\n        if ($dragEl.length === 0) {\n          $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n          $el.append($dragEl);\n        }\n\n        Object.assign(scrollbar, {\n          $el,\n          el: $el[0],\n          $dragEl,\n          dragEl: $dragEl[0]\n        });\n\n        if (params.draggable) {\n          enableDraggable();\n        }\n\n        if ($el) {\n          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n        }\n      }\n\n      function destroy() {\n        disableDraggable();\n      }\n\n      on('init', () => {\n        init();\n        updateSize();\n        setTranslate();\n      });\n      on('update resize observerUpdate lock unlock', () => {\n        updateSize();\n      });\n      on('setTranslate', () => {\n        setTranslate();\n      });\n      on('setTransition', (_s, duration) => {\n        setTransition(duration);\n      });\n      on('enable disable', () => {\n        const {\n          $el\n        } = swiper.scrollbar;\n\n        if ($el) {\n          $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n        }\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      Object.assign(swiper.scrollbar, {\n        updateSize,\n        setTranslate,\n        init,\n        destroy\n      });\n    }\n\n    function Parallax({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        parallax: {\n          enabled: false\n        }\n      });\n\n      const setTransform = (el, progress) => {\n        const {\n          rtl\n        } = swiper;\n        const $el = $(el);\n        const rtlFactor = rtl ? -1 : 1;\n        const p = $el.attr('data-swiper-parallax') || '0';\n        let x = $el.attr('data-swiper-parallax-x');\n        let y = $el.attr('data-swiper-parallax-y');\n        const scale = $el.attr('data-swiper-parallax-scale');\n        const opacity = $el.attr('data-swiper-parallax-opacity');\n\n        if (x || y) {\n          x = x || '0';\n          y = y || '0';\n        } else if (swiper.isHorizontal()) {\n          x = p;\n          y = '0';\n        } else {\n          y = p;\n          x = '0';\n        }\n\n        if (x.indexOf('%') >= 0) {\n          x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n        } else {\n          x = `${x * progress * rtlFactor}px`;\n        }\n\n        if (y.indexOf('%') >= 0) {\n          y = `${parseInt(y, 10) * progress}%`;\n        } else {\n          y = `${y * progress}px`;\n        }\n\n        if (typeof opacity !== 'undefined' && opacity !== null) {\n          const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n          $el[0].style.opacity = currentOpacity;\n        }\n\n        if (typeof scale === 'undefined' || scale === null) {\n          $el.transform(`translate3d(${x}, ${y}, 0px)`);\n        } else {\n          const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n          $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n        }\n      };\n\n      const setTranslate = () => {\n        const {\n          $el,\n          slides,\n          progress,\n          snapGrid\n        } = swiper;\n        $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n          setTransform(el, progress);\n        });\n        slides.each((slideEl, slideIndex) => {\n          let slideProgress = slideEl.progress;\n\n          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n          }\n\n          slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n          $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n            setTransform(el, slideProgress);\n          });\n        });\n      };\n\n      const setTransition = (duration = swiper.params.speed) => {\n        const {\n          $el\n        } = swiper;\n        $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n          const $parallaxEl = $(parallaxEl);\n          let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) parallaxDuration = 0;\n          $parallaxEl.transition(parallaxDuration);\n        });\n      };\n\n      on('beforeInit', () => {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      });\n      on('init', () => {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n      });\n      on('setTranslate', () => {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n      });\n      on('setTransition', (_swiper, duration) => {\n        if (!swiper.params.parallax.enabled) return;\n        setTransition(duration);\n      });\n    }\n\n    function Zoom({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      const window = getWindow();\n      extendParams({\n        zoom: {\n          enabled: false,\n          maxRatio: 3,\n          minRatio: 1,\n          toggle: true,\n          containerClass: 'swiper-zoom-container',\n          zoomedSlideClass: 'swiper-slide-zoomed'\n        }\n      });\n      swiper.zoom = {\n        enabled: false\n      };\n      let currentScale = 1;\n      let isScaling = false;\n      let gesturesEnabled;\n      let fakeGestureTouched;\n      let fakeGestureMoved;\n      const gesture = {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3\n      };\n      const image = {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {}\n      };\n      const velocity = {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined\n      };\n      let scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get() {\n          return scale;\n        },\n\n        set(value) {\n          if (scale !== value) {\n            const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n            const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n            emit('zoomChange', value, imageEl, slideEl);\n          }\n\n          scale = value;\n        }\n\n      });\n\n      function getDistanceBetweenTouches(e) {\n        if (e.targetTouches.length < 2) return 1;\n        const x1 = e.targetTouches[0].pageX;\n        const y1 = e.targetTouches[0].pageY;\n        const x2 = e.targetTouches[1].pageX;\n        const y2 = e.targetTouches[1].pageY;\n        const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n        return distance;\n      } // Events\n\n\n      function onGestureStart(e) {\n        const support = swiper.support;\n        const params = swiper.params.zoom;\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n\n        if (!support.gestures) {\n          if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n            return;\n          }\n\n          fakeGestureTouched = true;\n          gesture.scaleStart = getDistanceBetweenTouches(e);\n        }\n\n        if (!gesture.$slideEl || !gesture.$slideEl.length) {\n          gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n          if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n          gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n          if (gesture.$imageWrapEl.length === 0) {\n            gesture.$imageEl = undefined;\n            return;\n          }\n        }\n\n        if (gesture.$imageEl) {\n          gesture.$imageEl.transition(0);\n        }\n\n        isScaling = true;\n      }\n\n      function onGestureChange(e) {\n        const support = swiper.support;\n        const params = swiper.params.zoom;\n        const zoom = swiper.zoom;\n\n        if (!support.gestures) {\n          if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n            return;\n          }\n\n          fakeGestureMoved = true;\n          gesture.scaleMove = getDistanceBetweenTouches(e);\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          if (e.type === 'gesturechange') onGestureStart(e);\n          return;\n        }\n\n        if (support.gestures) {\n          zoom.scale = e.scale * currentScale;\n        } else {\n          zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n        }\n\n        if (zoom.scale > gesture.maxRatio) {\n          zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n        }\n\n        if (zoom.scale < params.minRatio) {\n          zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n        }\n\n        gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n      }\n\n      function onGestureEnd(e) {\n        const device = swiper.device;\n        const support = swiper.support;\n        const params = swiper.params.zoom;\n        const zoom = swiper.zoom;\n\n        if (!support.gestures) {\n          if (!fakeGestureTouched || !fakeGestureMoved) {\n            return;\n          }\n\n          if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n            return;\n          }\n\n          fakeGestureTouched = false;\n          fakeGestureMoved = false;\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n        currentScale = zoom.scale;\n        isScaling = false;\n        if (zoom.scale === 1) gesture.$slideEl = undefined;\n      }\n\n      function onTouchStart(e) {\n        const device = swiper.device;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n        if (image.isTouched) return;\n        if (device.android && e.cancelable) e.preventDefault();\n        image.isTouched = true;\n        image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      }\n\n      function onTouchMove(e) {\n        const zoom = swiper.zoom;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n        swiper.allowClick = false;\n        if (!image.isTouched || !gesture.$slideEl) return;\n\n        if (!image.isMoved) {\n          image.width = gesture.$imageEl[0].offsetWidth;\n          image.height = gesture.$imageEl[0].offsetHeight;\n          image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n          image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n          gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n          gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n          gesture.$imageWrapEl.transition(0);\n        } // Define if we need image drag\n\n\n        const scaledWidth = image.width * zoom.scale;\n        const scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n        if (!image.isMoved && !isScaling) {\n          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n            image.isTouched = false;\n            return;\n          }\n\n          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n            image.isTouched = false;\n            return;\n          }\n        }\n\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        image.isMoved = true;\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n        if (image.currentX < image.minX) {\n          image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n        }\n\n        if (image.currentX > image.maxX) {\n          image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n        }\n\n        if (image.currentY < image.minY) {\n          image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n        }\n\n        if (image.currentY > image.maxY) {\n          image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n        } // Velocity\n\n\n        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n        if (!velocity.prevTime) velocity.prevTime = Date.now();\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n      }\n\n      function onTouchEnd() {\n        const zoom = swiper.zoom;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n        if (!image.isTouched || !image.isMoved) {\n          image.isTouched = false;\n          image.isMoved = false;\n          return;\n        }\n\n        image.isTouched = false;\n        image.isMoved = false;\n        let momentumDurationX = 300;\n        let momentumDurationY = 300;\n        const momentumDistanceX = velocity.x * momentumDurationX;\n        const newPositionX = image.currentX + momentumDistanceX;\n        const momentumDistanceY = velocity.y * momentumDurationY;\n        const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY; // Define if we need image drag\n\n        const scaledWidth = image.width * zoom.scale;\n        const scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n      }\n\n      function onTransitionEnd() {\n        const zoom = swiper.zoom;\n\n        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n          if (gesture.$imageEl) {\n            gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n          }\n\n          if (gesture.$imageWrapEl) {\n            gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n          }\n\n          zoom.scale = 1;\n          currentScale = 1;\n          gesture.$slideEl = undefined;\n          gesture.$imageEl = undefined;\n          gesture.$imageWrapEl = undefined;\n        }\n      }\n\n      function zoomIn(e) {\n        const zoom = swiper.zoom;\n        const params = swiper.params.zoom;\n\n        if (!gesture.$slideEl) {\n          if (e && e.target) {\n            gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n          }\n\n          if (!gesture.$slideEl) {\n            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n              gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n            } else {\n              gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n            }\n          }\n\n          gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style.overflow = 'hidden';\n          swiper.wrapperEl.style.touchAction = 'none';\n        }\n\n        gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n        let touchX;\n        let touchY;\n        let offsetX;\n        let offsetY;\n        let diffX;\n        let diffY;\n        let translateX;\n        let translateY;\n        let imageWidth;\n        let imageHeight;\n        let scaledWidth;\n        let scaledHeight;\n        let translateMinX;\n        let translateMinY;\n        let translateMaxX;\n        let translateMaxY;\n        let slideWidth;\n        let slideHeight;\n\n        if (typeof image.touchesStart.x === 'undefined' && e) {\n          touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n          touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n        } else {\n          touchX = image.touchesStart.x;\n          touchY = image.touchesStart.y;\n        }\n\n        zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (e) {\n          slideWidth = gesture.$slideEl[0].offsetWidth;\n          slideHeight = gesture.$slideEl[0].offsetHeight;\n          offsetX = gesture.$slideEl.offset().left + window.scrollX;\n          offsetY = gesture.$slideEl.offset().top + window.scrollY;\n          diffX = offsetX + slideWidth / 2 - touchX;\n          diffY = offsetY + slideHeight / 2 - touchY;\n          imageWidth = gesture.$imageEl[0].offsetWidth;\n          imageHeight = gesture.$imageEl[0].offsetHeight;\n          scaledWidth = imageWidth * zoom.scale;\n          scaledHeight = imageHeight * zoom.scale;\n          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n          translateMaxX = -translateMinX;\n          translateMaxY = -translateMinY;\n          translateX = diffX * zoom.scale;\n          translateY = diffY * zoom.scale;\n\n          if (translateX < translateMinX) {\n            translateX = translateMinX;\n          }\n\n          if (translateX > translateMaxX) {\n            translateX = translateMaxX;\n          }\n\n          if (translateY < translateMinY) {\n            translateY = translateMinY;\n          }\n\n          if (translateY > translateMaxY) {\n            translateY = translateMaxY;\n          }\n        } else {\n          translateX = 0;\n          translateY = 0;\n        }\n\n        gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n        gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n      }\n\n      function zoomOut() {\n        const zoom = swiper.zoom;\n        const params = swiper.params.zoom;\n\n        if (!gesture.$slideEl) {\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n            gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n          } else {\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          }\n\n          gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style.overflow = '';\n          swiper.wrapperEl.style.touchAction = '';\n        }\n\n        zoom.scale = 1;\n        currentScale = 1;\n        gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n        gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n        gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n        gesture.$slideEl = undefined;\n      } // Toggle Zoom\n\n\n      function zoomToggle(e) {\n        const zoom = swiper.zoom;\n\n        if (zoom.scale && zoom.scale !== 1) {\n          // Zoom Out\n          zoomOut();\n        } else {\n          // Zoom In\n          zoomIn(e);\n        }\n      }\n\n      function getListeners() {\n        const support = swiper.support;\n        const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        const activeListenerWithCapture = support.passiveListener ? {\n          passive: false,\n          capture: true\n        } : true;\n        return {\n          passiveListener,\n          activeListenerWithCapture\n        };\n      }\n\n      function getSlideSelector() {\n        return `.${swiper.params.slideClass}`;\n      }\n\n      function toggleGestures(method) {\n        const {\n          passiveListener\n        } = getListeners();\n        const slideSelector = getSlideSelector();\n        swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n        swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n        swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n      }\n\n      function enableGestures() {\n        if (gesturesEnabled) return;\n        gesturesEnabled = true;\n        toggleGestures('on');\n      }\n\n      function disableGestures() {\n        if (!gesturesEnabled) return;\n        gesturesEnabled = false;\n        toggleGestures('off');\n      } // Attach/Detach Events\n\n\n      function enable() {\n        const zoom = swiper.zoom;\n        if (zoom.enabled) return;\n        zoom.enabled = true;\n        const support = swiper.support;\n        const {\n          passiveListener,\n          activeListenerWithCapture\n        } = getListeners();\n        const slideSelector = getSlideSelector(); // Scale image\n\n        if (support.gestures) {\n          swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n          swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n        } else if (swiper.touchEvents.start === 'touchstart') {\n          swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n          swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n          swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n          if (swiper.touchEvents.cancel) {\n            swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n          }\n        } // Move image\n\n\n        swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n      }\n\n      function disable() {\n        const zoom = swiper.zoom;\n        if (!zoom.enabled) return;\n        const support = swiper.support;\n        zoom.enabled = false;\n        const {\n          passiveListener,\n          activeListenerWithCapture\n        } = getListeners();\n        const slideSelector = getSlideSelector(); // Scale image\n\n        if (support.gestures) {\n          swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n          swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n        } else if (swiper.touchEvents.start === 'touchstart') {\n          swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n          swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n          swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n          if (swiper.touchEvents.cancel) {\n            swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n          }\n        } // Move image\n\n\n        swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n      }\n\n      on('init', () => {\n        if (swiper.params.zoom.enabled) {\n          enable();\n        }\n      });\n      on('destroy', () => {\n        disable();\n      });\n      on('touchStart', (_s, e) => {\n        if (!swiper.zoom.enabled) return;\n        onTouchStart(e);\n      });\n      on('touchEnd', (_s, e) => {\n        if (!swiper.zoom.enabled) return;\n        onTouchEnd();\n      });\n      on('doubleTap', (_s, e) => {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          zoomToggle(e);\n        }\n      });\n      on('transitionEnd', () => {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          onTransitionEnd();\n        }\n      });\n      on('slideChange', () => {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          onTransitionEnd();\n        }\n      });\n      Object.assign(swiper.zoom, {\n        enable,\n        disable,\n        in: zoomIn,\n        out: zoomOut,\n        toggle: zoomToggle\n      });\n    }\n\n    function Lazy({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      extendParams({\n        lazy: {\n          checkInView: false,\n          enabled: false,\n          loadPrevNext: false,\n          loadPrevNextAmount: 1,\n          loadOnTransitionStart: false,\n          scrollingElement: '',\n          elementClass: 'swiper-lazy',\n          loadingClass: 'swiper-lazy-loading',\n          loadedClass: 'swiper-lazy-loaded',\n          preloaderClass: 'swiper-lazy-preloader'\n        }\n      });\n      swiper.lazy = {};\n      let scrollHandlerAttached = false;\n      let initialImageLoaded = false;\n\n      function loadInSlide(index, loadInDuplicate = true) {\n        const params = swiper.params.lazy;\n        if (typeof index === 'undefined') return;\n        if (swiper.slides.length === 0) return;\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\n        const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n\n        if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n          $images.push($slideEl[0]);\n        }\n\n        if ($images.length === 0) return;\n        $images.each(imageEl => {\n          const $imageEl = $(imageEl);\n          $imageEl.addClass(params.loadingClass);\n          const background = $imageEl.attr('data-background');\n          const src = $imageEl.attr('data-src');\n          const srcset = $imageEl.attr('data-srcset');\n          const sizes = $imageEl.attr('data-sizes');\n          const $pictureEl = $imageEl.parent('picture');\n          swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n            if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n            if (background) {\n              $imageEl.css('background-image', `url(\"${background}\")`);\n              $imageEl.removeAttr('data-background');\n            } else {\n              if (srcset) {\n                $imageEl.attr('srcset', srcset);\n                $imageEl.removeAttr('data-srcset');\n              }\n\n              if (sizes) {\n                $imageEl.attr('sizes', sizes);\n                $imageEl.removeAttr('data-sizes');\n              }\n\n              if ($pictureEl.length) {\n                $pictureEl.children('source').each(sourceEl => {\n                  const $source = $(sourceEl);\n\n                  if ($source.attr('data-srcset')) {\n                    $source.attr('srcset', $source.attr('data-srcset'));\n                    $source.removeAttr('data-srcset');\n                  }\n                });\n              }\n\n              if (src) {\n                $imageEl.attr('src', src);\n                $imageEl.removeAttr('data-src');\n              }\n            }\n\n            $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n            $slideEl.find(`.${params.preloaderClass}`).remove();\n\n            if (swiper.params.loop && loadInDuplicate) {\n              const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n              if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n                const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n                loadInSlide(originalSlide.index(), false);\n              } else {\n                const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n                loadInSlide(duplicatedSlide.index(), false);\n              }\n            }\n\n            emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n            if (swiper.params.autoHeight) {\n              swiper.updateAutoHeight();\n            }\n          });\n          emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n        });\n      }\n\n      function load() {\n        const {\n          $wrapperEl,\n          params: swiperParams,\n          slides,\n          activeIndex\n        } = swiper;\n        const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n        const params = swiperParams.lazy;\n        let slidesPerView = swiperParams.slidesPerView;\n\n        if (slidesPerView === 'auto') {\n          slidesPerView = 0;\n        }\n\n        function slideExist(index) {\n          if (isVirtual) {\n            if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n              return true;\n            }\n          } else if (slides[index]) return true;\n\n          return false;\n        }\n\n        function slideIndex(slideEl) {\n          if (isVirtual) {\n            return $(slideEl).attr('data-swiper-slide-index');\n          }\n\n          return $(slideEl).index();\n        }\n\n        if (!initialImageLoaded) initialImageLoaded = true;\n\n        if (swiper.params.watchSlidesProgress) {\n          $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\n            const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n            loadInSlide(index);\n          });\n        } else if (slidesPerView > 1) {\n          for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n            if (slideExist(i)) loadInSlide(i);\n          }\n        } else {\n          loadInSlide(activeIndex);\n        }\n\n        if (params.loadPrevNext) {\n          if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n            const amount = params.loadPrevNextAmount;\n            const spv = slidesPerView;\n            const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n            const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n            for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n              if (slideExist(i)) loadInSlide(i);\n            } // Prev Slides\n\n\n            for (let i = minIndex; i < activeIndex; i += 1) {\n              if (slideExist(i)) loadInSlide(i);\n            }\n          } else {\n            const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n            if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n            const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n            if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n          }\n        }\n      }\n\n      function checkInViewOnLoad() {\n        const window = getWindow();\n        if (!swiper || swiper.destroyed) return;\n        const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n        const isWindow = $scrollElement[0] === window;\n        const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n        const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n        const swiperOffset = swiper.$el.offset();\n        const {\n          rtlTranslate: rtl\n        } = swiper;\n        let inView = false;\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n        const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n        for (let i = 0; i < swiperCoord.length; i += 1) {\n          const point = swiperCoord[i];\n\n          if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n            inView = true;\n          }\n        }\n\n        const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n\n        if (inView) {\n          load();\n          $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\n        } else if (!scrollHandlerAttached) {\n          scrollHandlerAttached = true;\n          $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\n        }\n      }\n\n      on('beforeInit', () => {\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      });\n      on('init', () => {\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.checkInView) {\n            checkInViewOnLoad();\n          } else {\n            load();\n          }\n        }\n      });\n      on('scroll', () => {\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\n          load();\n        }\n      });\n      on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.checkInView) {\n            checkInViewOnLoad();\n          } else {\n            load();\n          }\n        }\n      });\n      on('transitionStart', () => {\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\n            if (swiper.params.lazy.checkInView) {\n              checkInViewOnLoad();\n            } else {\n              load();\n            }\n          }\n        }\n      });\n      on('transitionEnd', () => {\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          if (swiper.params.lazy.checkInView) {\n            checkInViewOnLoad();\n          } else {\n            load();\n          }\n        }\n      });\n      on('slideChange', () => {\n        const {\n          lazy,\n          cssMode,\n          watchSlidesProgress,\n          touchReleaseOnEdges,\n          resistanceRatio\n        } = swiper.params;\n\n        if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\n          load();\n        }\n      });\n      Object.assign(swiper.lazy, {\n        load,\n        loadInSlide\n      });\n    }\n\n    /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n    function Controller({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        controller: {\n          control: undefined,\n          inverse: false,\n          by: 'slide' // or 'container'\n\n        }\n      });\n      swiper.controller = {\n        control: undefined\n      };\n\n      function LinearSpline(x, y) {\n        const binarySearch = function search() {\n          let maxIndex;\n          let minIndex;\n          let guess;\n          return (array, val) => {\n            minIndex = -1;\n            maxIndex = array.length;\n\n            while (maxIndex - minIndex > 1) {\n              guess = maxIndex + minIndex >> 1;\n\n              if (array[guess] <= val) {\n                minIndex = guess;\n              } else {\n                maxIndex = guess;\n              }\n            }\n\n            return maxIndex;\n          };\n        }();\n\n        this.x = x;\n        this.y = y;\n        this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n        // (x1,y1) is the known point before given value,\n        // (x3,y3) is the known point after given value.\n\n        let i1;\n        let i3;\n\n        this.interpolate = function interpolate(x2) {\n          if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n          i3 = binarySearch(this.x, x2);\n          i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n        };\n\n        return this;\n      } // xxx: for now i will just save one spline function to to\n\n\n      function getInterpolateFunction(c) {\n        if (!swiper.controller.spline) {\n          swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n        }\n      }\n\n      function setTranslate(_t, byController) {\n        const controlled = swiper.controller.control;\n        let multiplier;\n        let controlledTranslate;\n        const Swiper = swiper.constructor;\n\n        function setControlledTranslate(c) {\n          // this will create an Interpolate function based on the snapGrids\n          // x is the Grid of the scrolled scroller and y will be the controlled scroller\n          // it makes sense to create this only once and recall it for the interpolation\n          // the function does a lot of value caching for performance\n          const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n          if (swiper.params.controller.by === 'slide') {\n            getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n            // but it did not work out\n\n            controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n          }\n\n          if (!controlledTranslate || swiper.params.controller.by === 'container') {\n            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n          }\n\n          if (swiper.params.controller.inverse) {\n            controlledTranslate = c.maxTranslate() - controlledTranslate;\n          }\n\n          c.updateProgress(controlledTranslate);\n          c.setTranslate(controlledTranslate, swiper);\n          c.updateActiveIndex();\n          c.updateSlidesClasses();\n        }\n\n        if (Array.isArray(controlled)) {\n          for (let i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTranslate(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTranslate(controlled);\n        }\n      }\n\n      function setTransition(duration, byController) {\n        const Swiper = swiper.constructor;\n        const controlled = swiper.controller.control;\n        let i;\n\n        function setControlledTransition(c) {\n          c.setTransition(duration, swiper);\n\n          if (duration !== 0) {\n            c.transitionStart();\n\n            if (c.params.autoHeight) {\n              nextTick(() => {\n                c.updateAutoHeight();\n              });\n            }\n\n            c.$wrapperEl.transitionEnd(() => {\n              if (!controlled) return;\n\n              if (c.params.loop && swiper.params.controller.by === 'slide') {\n                c.loopFix();\n              }\n\n              c.transitionEnd();\n            });\n          }\n        }\n\n        if (Array.isArray(controlled)) {\n          for (i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTransition(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTransition(controlled);\n        }\n      }\n\n      function removeSpline() {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      }\n\n      on('beforeInit', () => {\n        swiper.controller.control = swiper.params.controller.control;\n      });\n      on('update', () => {\n        removeSpline();\n      });\n      on('resize', () => {\n        removeSpline();\n      });\n      on('observerUpdate', () => {\n        removeSpline();\n      });\n      on('setTranslate', (_s, translate, byController) => {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTranslate(translate, byController);\n      });\n      on('setTransition', (_s, duration, byController) => {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTransition(duration, byController);\n      });\n      Object.assign(swiper.controller, {\n        setTranslate,\n        setTransition\n      });\n    }\n\n    function A11y({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        a11y: {\n          enabled: true,\n          notificationClass: 'swiper-notification',\n          prevSlideMessage: 'Previous slide',\n          nextSlideMessage: 'Next slide',\n          firstSlideMessage: 'This is the first slide',\n          lastSlideMessage: 'This is the last slide',\n          paginationBulletMessage: 'Go to slide {{index}}',\n          slideLabelMessage: '{{index}} / {{slidesLength}}',\n          containerMessage: null,\n          containerRoleDescriptionMessage: null,\n          itemRoleDescriptionMessage: null,\n          slideRole: 'group'\n        }\n      });\n      let liveRegion = null;\n\n      function notify(message) {\n        const notification = liveRegion;\n        if (notification.length === 0) return;\n        notification.html('');\n        notification.html(message);\n      }\n\n      function getRandomNumber(size = 16) {\n        const randomChar = () => Math.round(16 * Math.random()).toString(16);\n\n        return 'x'.repeat(size).replace(/x/g, randomChar);\n      }\n\n      function makeElFocusable($el) {\n        $el.attr('tabIndex', '0');\n      }\n\n      function makeElNotFocusable($el) {\n        $el.attr('tabIndex', '-1');\n      }\n\n      function addElRole($el, role) {\n        $el.attr('role', role);\n      }\n\n      function addElRoleDescription($el, description) {\n        $el.attr('aria-roledescription', description);\n      }\n\n      function addElControls($el, controls) {\n        $el.attr('aria-controls', controls);\n      }\n\n      function addElLabel($el, label) {\n        $el.attr('aria-label', label);\n      }\n\n      function addElId($el, id) {\n        $el.attr('id', id);\n      }\n\n      function addElLive($el, live) {\n        $el.attr('aria-live', live);\n      }\n\n      function disableEl($el) {\n        $el.attr('aria-disabled', true);\n      }\n\n      function enableEl($el) {\n        $el.attr('aria-disabled', false);\n      }\n\n      function onEnterOrSpaceKey(e) {\n        if (e.keyCode !== 13 && e.keyCode !== 32) return;\n        const params = swiper.params.a11y;\n        const $targetEl = $(e.target);\n\n        if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n          if (!(swiper.isEnd && !swiper.params.loop)) {\n            swiper.slideNext();\n          }\n\n          if (swiper.isEnd) {\n            notify(params.lastSlideMessage);\n          } else {\n            notify(params.nextSlideMessage);\n          }\n        }\n\n        if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n          if (!(swiper.isBeginning && !swiper.params.loop)) {\n            swiper.slidePrev();\n          }\n\n          if (swiper.isBeginning) {\n            notify(params.firstSlideMessage);\n          } else {\n            notify(params.prevSlideMessage);\n          }\n        }\n\n        if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n          $targetEl[0].click();\n        }\n      }\n\n      function updateNavigation() {\n        if (swiper.params.loop || !swiper.navigation) return;\n        const {\n          $nextEl,\n          $prevEl\n        } = swiper.navigation;\n\n        if ($prevEl && $prevEl.length > 0) {\n          if (swiper.isBeginning) {\n            disableEl($prevEl);\n            makeElNotFocusable($prevEl);\n          } else {\n            enableEl($prevEl);\n            makeElFocusable($prevEl);\n          }\n        }\n\n        if ($nextEl && $nextEl.length > 0) {\n          if (swiper.isEnd) {\n            disableEl($nextEl);\n            makeElNotFocusable($nextEl);\n          } else {\n            enableEl($nextEl);\n            makeElFocusable($nextEl);\n          }\n        }\n      }\n\n      function hasPagination() {\n        return swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length;\n      }\n\n      function updatePagination() {\n        const params = swiper.params.a11y;\n\n        if (hasPagination()) {\n          swiper.pagination.bullets.each(bulletEl => {\n            const $bulletEl = $(bulletEl);\n            makeElFocusable($bulletEl);\n\n            if (!swiper.params.pagination.renderBullet) {\n              addElRole($bulletEl, 'button');\n              addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n            }\n          });\n        }\n      }\n\n      const initNavEl = ($el, wrapperId, message) => {\n        makeElFocusable($el);\n\n        if ($el[0].tagName !== 'BUTTON') {\n          addElRole($el, 'button');\n          $el.on('keydown', onEnterOrSpaceKey);\n        }\n\n        addElLabel($el, message);\n        addElControls($el, wrapperId);\n      };\n\n      function init() {\n        const params = swiper.params.a11y;\n        swiper.$el.append(liveRegion); // Container\n\n        const $containerEl = swiper.$el;\n\n        if (params.containerRoleDescriptionMessage) {\n          addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n        }\n\n        if (params.containerMessage) {\n          addElLabel($containerEl, params.containerMessage);\n        } // Wrapper\n\n\n        const $wrapperEl = swiper.$wrapperEl;\n        const wrapperId = $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n        const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n        addElId($wrapperEl, wrapperId);\n        addElLive($wrapperEl, live); // Slide\n\n        if (params.itemRoleDescriptionMessage) {\n          addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n        }\n\n        addElRole($(swiper.slides), params.slideRole);\n        const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\n        swiper.slides.each((slideEl, index) => {\n          const $slideEl = $(slideEl);\n          const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\n          const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n          addElLabel($slideEl, ariaLabelMessage);\n        }); // Navigation\n\n        let $nextEl;\n        let $prevEl;\n\n        if (swiper.navigation && swiper.navigation.$nextEl) {\n          $nextEl = swiper.navigation.$nextEl;\n        }\n\n        if (swiper.navigation && swiper.navigation.$prevEl) {\n          $prevEl = swiper.navigation.$prevEl;\n        }\n\n        if ($nextEl && $nextEl.length) {\n          initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n        }\n\n        if ($prevEl && $prevEl.length) {\n          initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n        } // Pagination\n\n\n        if (hasPagination()) {\n          swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n        }\n      }\n\n      function destroy() {\n        if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n        let $nextEl;\n        let $prevEl;\n\n        if (swiper.navigation && swiper.navigation.$nextEl) {\n          $nextEl = swiper.navigation.$nextEl;\n        }\n\n        if (swiper.navigation && swiper.navigation.$prevEl) {\n          $prevEl = swiper.navigation.$prevEl;\n        }\n\n        if ($nextEl) {\n          $nextEl.off('keydown', onEnterOrSpaceKey);\n        }\n\n        if ($prevEl) {\n          $prevEl.off('keydown', onEnterOrSpaceKey);\n        } // Pagination\n\n\n        if (hasPagination()) {\n          swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n        }\n      }\n\n      on('beforeInit', () => {\n        liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\n      });\n      on('afterInit', () => {\n        if (!swiper.params.a11y.enabled) return;\n        init();\n        updateNavigation();\n      });\n      on('toEdge', () => {\n        if (!swiper.params.a11y.enabled) return;\n        updateNavigation();\n      });\n      on('fromEdge', () => {\n        if (!swiper.params.a11y.enabled) return;\n        updateNavigation();\n      });\n      on('paginationUpdate', () => {\n        if (!swiper.params.a11y.enabled) return;\n        updatePagination();\n      });\n      on('destroy', () => {\n        if (!swiper.params.a11y.enabled) return;\n        destroy();\n      });\n    }\n\n    function History({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        history: {\n          enabled: false,\n          root: '',\n          replaceState: false,\n          key: 'slides'\n        }\n      });\n      let initialized = false;\n      let paths = {};\n\n      const slugify = text => {\n        return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n      };\n\n      const getPathValues = urlOverride => {\n        const window = getWindow();\n        let location;\n\n        if (urlOverride) {\n          location = new URL(urlOverride);\n        } else {\n          location = window.location;\n        }\n\n        const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n        const total = pathArray.length;\n        const key = pathArray[total - 2];\n        const value = pathArray[total - 1];\n        return {\n          key,\n          value\n        };\n      };\n\n      const setHistory = (key, index) => {\n        const window = getWindow();\n        if (!initialized || !swiper.params.history.enabled) return;\n        let location;\n\n        if (swiper.params.url) {\n          location = new URL(swiper.params.url);\n        } else {\n          location = window.location;\n        }\n\n        const slide = swiper.slides.eq(index);\n        let value = slugify(slide.attr('data-history'));\n\n        if (swiper.params.history.root.length > 0) {\n          let root = swiper.params.history.root;\n          if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n          value = `${root}/${key}/${value}`;\n        } else if (!location.pathname.includes(key)) {\n          value = `${key}/${value}`;\n        }\n\n        const currentState = window.history.state;\n\n        if (currentState && currentState.value === value) {\n          return;\n        }\n\n        if (swiper.params.history.replaceState) {\n          window.history.replaceState({\n            value\n          }, null, value);\n        } else {\n          window.history.pushState({\n            value\n          }, null, value);\n        }\n      };\n\n      const scrollToSlide = (speed, value, runCallbacks) => {\n        if (value) {\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n            const slide = swiper.slides.eq(i);\n            const slideHistory = slugify(slide.attr('data-history'));\n\n            if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n              const index = slide.index();\n              swiper.slideTo(index, speed, runCallbacks);\n            }\n          }\n        } else {\n          swiper.slideTo(0, speed, runCallbacks);\n        }\n      };\n\n      const setHistoryPopState = () => {\n        paths = getPathValues(swiper.params.url);\n        scrollToSlide(swiper.params.speed, swiper.paths.value, false);\n      };\n\n      const init = () => {\n        const window = getWindow();\n        if (!swiper.params.history) return;\n\n        if (!window.history || !window.history.pushState) {\n          swiper.params.history.enabled = false;\n          swiper.params.hashNavigation.enabled = true;\n          return;\n        }\n\n        initialized = true;\n        paths = getPathValues(swiper.params.url);\n        if (!paths.key && !paths.value) return;\n        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n        if (!swiper.params.history.replaceState) {\n          window.addEventListener('popstate', setHistoryPopState);\n        }\n      };\n\n      const destroy = () => {\n        const window = getWindow();\n\n        if (!swiper.params.history.replaceState) {\n          window.removeEventListener('popstate', setHistoryPopState);\n        }\n      };\n\n      on('init', () => {\n        if (swiper.params.history.enabled) {\n          init();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.params.history.enabled) {\n          destroy();\n        }\n      });\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\n        if (initialized) {\n          setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      });\n      on('slideChange', () => {\n        if (initialized && swiper.params.cssMode) {\n          setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      });\n    }\n\n    function HashNavigation({\n      swiper,\n      extendParams,\n      emit,\n      on\n    }) {\n      let initialized = false;\n      const document = getDocument();\n      const window = getWindow();\n      extendParams({\n        hashNavigation: {\n          enabled: false,\n          replaceState: false,\n          watchState: false\n        }\n      });\n\n      const onHashChange = () => {\n        emit('hashChange');\n        const newHash = document.location.hash.replace('#', '');\n        const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n        if (newHash !== activeSlideHash) {\n          const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n          if (typeof newIndex === 'undefined') return;\n          swiper.slideTo(newIndex);\n        }\n      };\n\n      const setHash = () => {\n        if (!initialized || !swiper.params.hashNavigation.enabled) return;\n\n        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n          window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\n          emit('hashSet');\n        } else {\n          const slide = swiper.slides.eq(swiper.activeIndex);\n          const hash = slide.attr('data-hash') || slide.attr('data-history');\n          document.location.hash = hash || '';\n          emit('hashSet');\n        }\n      };\n\n      const init = () => {\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n        initialized = true;\n        const hash = document.location.hash.replace('#', '');\n\n        if (hash) {\n          const speed = 0;\n\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n            const slide = swiper.slides.eq(i);\n            const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n            if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n              const index = slide.index();\n              swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n            }\n          }\n        }\n\n        if (swiper.params.hashNavigation.watchState) {\n          $(window).on('hashchange', onHashChange);\n        }\n      };\n\n      const destroy = () => {\n        if (swiper.params.hashNavigation.watchState) {\n          $(window).off('hashchange', onHashChange);\n        }\n      };\n\n      on('init', () => {\n        if (swiper.params.hashNavigation.enabled) {\n          init();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.params.hashNavigation.enabled) {\n          destroy();\n        }\n      });\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\n        if (initialized) {\n          setHash();\n        }\n      });\n      on('slideChange', () => {\n        if (initialized && swiper.params.cssMode) {\n          setHash();\n        }\n      });\n    }\n\n    /* eslint no-underscore-dangle: \"off\" */\n    function Autoplay({\n      swiper,\n      extendParams,\n      on,\n      emit\n    }) {\n      let timeout;\n      swiper.autoplay = {\n        running: false,\n        paused: false\n      };\n      extendParams({\n        autoplay: {\n          enabled: false,\n          delay: 3000,\n          waitForTransition: true,\n          disableOnInteraction: true,\n          stopOnLastSlide: false,\n          reverseDirection: false,\n          pauseOnMouseEnter: false\n        }\n      });\n\n      function run() {\n        const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n        let delay = swiper.params.autoplay.delay;\n\n        if ($activeSlideEl.attr('data-swiper-autoplay')) {\n          delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n        }\n\n        clearTimeout(timeout);\n        timeout = nextTick(() => {\n          let autoplayResult;\n\n          if (swiper.params.autoplay.reverseDirection) {\n            if (swiper.params.loop) {\n              swiper.loopFix();\n              autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n              emit('autoplay');\n            } else if (!swiper.isBeginning) {\n              autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n              emit('autoplay');\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n              autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n              emit('autoplay');\n            } else {\n              stop();\n            }\n          } else if (swiper.params.loop) {\n            swiper.loopFix();\n            autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n            emit('autoplay');\n          } else if (!swiper.isEnd) {\n            autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n            emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n            emit('autoplay');\n          } else {\n            stop();\n          }\n\n          if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\n            run();\n          }\n        }, delay);\n      }\n\n      function start() {\n        if (typeof timeout !== 'undefined') return false;\n        if (swiper.autoplay.running) return false;\n        swiper.autoplay.running = true;\n        emit('autoplayStart');\n        run();\n        return true;\n      }\n\n      function stop() {\n        if (!swiper.autoplay.running) return false;\n        if (typeof timeout === 'undefined') return false;\n\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = undefined;\n        }\n\n        swiper.autoplay.running = false;\n        emit('autoplayStop');\n        return true;\n      }\n\n      function pause(speed) {\n        if (!swiper.autoplay.running) return;\n        if (swiper.autoplay.paused) return;\n        if (timeout) clearTimeout(timeout);\n        swiper.autoplay.paused = true;\n\n        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n          swiper.autoplay.paused = false;\n          run();\n        } else {\n          ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n            swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n          });\n        }\n      }\n\n      function onVisibilityChange() {\n        const document = getDocument();\n\n        if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n          pause();\n        }\n\n        if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n          run();\n          swiper.autoplay.paused = false;\n        }\n      }\n\n      function onTransitionEnd(e) {\n        if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n        if (e.target !== swiper.$wrapperEl[0]) return;\n        ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n          swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n        });\n        swiper.autoplay.paused = false;\n\n        if (!swiper.autoplay.running) {\n          stop();\n        } else {\n          run();\n        }\n      }\n\n      function onMouseEnter() {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          stop();\n        } else {\n          pause();\n        }\n\n        ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n          swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n        });\n      }\n\n      function onMouseLeave() {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          return;\n        }\n\n        swiper.autoplay.paused = false;\n        run();\n      }\n\n      function attachMouseEvents() {\n        if (swiper.params.autoplay.pauseOnMouseEnter) {\n          swiper.$el.on('mouseenter', onMouseEnter);\n          swiper.$el.on('mouseleave', onMouseLeave);\n        }\n      }\n\n      function detachMouseEvents() {\n        swiper.$el.off('mouseenter', onMouseEnter);\n        swiper.$el.off('mouseleave', onMouseLeave);\n      }\n\n      on('init', () => {\n        if (swiper.params.autoplay.enabled) {\n          start();\n          const document = getDocument();\n          document.addEventListener('visibilitychange', onVisibilityChange);\n          attachMouseEvents();\n        }\n      });\n      on('beforeTransitionStart', (_s, speed, internal) => {\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            stop();\n          }\n        }\n      });\n      on('sliderFirstMove', () => {\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            stop();\n          } else {\n            pause();\n          }\n        }\n      });\n      on('touchEnd', () => {\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n          run();\n        }\n      });\n      on('destroy', () => {\n        detachMouseEvents();\n\n        if (swiper.autoplay.running) {\n          stop();\n        }\n\n        const document = getDocument();\n        document.removeEventListener('visibilitychange', onVisibilityChange);\n      });\n      Object.assign(swiper.autoplay, {\n        pause,\n        run,\n        start,\n        stop\n      });\n    }\n\n    function Thumb({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        thumbs: {\n          swiper: null,\n          multipleActiveThumbs: true,\n          autoScrollOffset: 0,\n          slideThumbActiveClass: 'swiper-slide-thumb-active',\n          thumbsContainerClass: 'swiper-thumbs'\n        }\n      });\n      let initialized = false;\n      let swiperCreated = false;\n      swiper.thumbs = {\n        swiper: null\n      };\n\n      function onThumbClick() {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n        const clickedIndex = thumbsSwiper.clickedIndex;\n        const clickedSlide = thumbsSwiper.clickedSlide;\n        if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n        if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n        let slideToIndex;\n\n        if (thumbsSwiper.params.loop) {\n          slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n        } else {\n          slideToIndex = clickedIndex;\n        }\n\n        if (swiper.params.loop) {\n          let currentIndex = swiper.activeIndex;\n\n          if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n            swiper.loopFix(); // eslint-disable-next-line\n\n            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n            currentIndex = swiper.activeIndex;\n          }\n\n          const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n          const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n          if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n        }\n\n        swiper.slideTo(slideToIndex);\n      }\n\n      function init() {\n        const {\n          thumbs: thumbsParams\n        } = swiper.params;\n        if (initialized) return false;\n        initialized = true;\n        const SwiperClass = swiper.constructor;\n\n        if (thumbsParams.swiper instanceof SwiperClass) {\n          swiper.thumbs.swiper = thumbsParams.swiper;\n          Object.assign(swiper.thumbs.swiper.originalParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          Object.assign(swiper.thumbs.swiper.params, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n        } else if (isObject(thumbsParams.swiper)) {\n          const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n          Object.assign(thumbsSwiperParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n          swiperCreated = true;\n        }\n\n        swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n        swiper.thumbs.swiper.on('tap', onThumbClick);\n        return true;\n      }\n\n      function update(initial) {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n        const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n        const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n        const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n          let currentThumbsIndex = thumbsSwiper.activeIndex;\n          let newThumbsIndex;\n          let direction;\n\n          if (thumbsSwiper.params.loop) {\n            if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n              thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n              thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n              currentThumbsIndex = thumbsSwiper.activeIndex;\n            } // Find actual thumbs index to slide to\n\n\n            const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n            const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n\n            if (typeof prevThumbsIndex === 'undefined') {\n              newThumbsIndex = nextThumbsIndex;\n            } else if (typeof nextThumbsIndex === 'undefined') {\n              newThumbsIndex = prevThumbsIndex;\n            } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n              newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n            } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n              newThumbsIndex = nextThumbsIndex;\n            } else {\n              newThumbsIndex = prevThumbsIndex;\n            }\n\n            direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n          } else {\n            newThumbsIndex = swiper.realIndex;\n            direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n          }\n\n          if (useOffset) {\n            newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n          }\n\n          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n            if (thumbsSwiper.params.centeredSlides) {\n              if (newThumbsIndex > currentThumbsIndex) {\n                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n              } else {\n                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n              }\n            } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\n\n            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n          }\n        } // Activate thumbs\n\n\n        let thumbsToActivate = 1;\n        const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n          thumbsToActivate = swiper.params.slidesPerView;\n        }\n\n        if (!swiper.params.thumbs.multipleActiveThumbs) {\n          thumbsToActivate = 1;\n        }\n\n        thumbsToActivate = Math.floor(thumbsToActivate);\n        thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n          for (let i = 0; i < thumbsToActivate; i += 1) {\n            thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n          }\n        } else {\n          for (let i = 0; i < thumbsToActivate; i += 1) {\n            thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n          }\n        }\n      }\n\n      on('beforeInit', () => {\n        const {\n          thumbs\n        } = swiper.params;\n        if (!thumbs || !thumbs.swiper) return;\n        init();\n        update(true);\n      });\n      on('slideChange update resize observerUpdate', () => {\n        if (!swiper.thumbs.swiper) return;\n        update();\n      });\n      on('setTransition', (_s, duration) => {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n        thumbsSwiper.setTransition(duration);\n      });\n      on('beforeDestroy', () => {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n\n        if (swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      });\n      Object.assign(swiper.thumbs, {\n        init,\n        update\n      });\n    }\n\n    function freeMode({\n      swiper,\n      extendParams,\n      emit,\n      once\n    }) {\n      extendParams({\n        freeMode: {\n          enabled: false,\n          momentum: true,\n          momentumRatio: 1,\n          momentumBounce: true,\n          momentumBounceRatio: 1,\n          momentumVelocityRatio: 1,\n          sticky: false,\n          minimumVelocity: 0.02\n        }\n      });\n\n      function onTouchMove() {\n        const {\n          touchEventsData: data,\n          touches\n        } = swiper; // Velocity\n\n        if (data.velocities.length === 0) {\n          data.velocities.push({\n            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n            time: data.touchStartTime\n          });\n        }\n\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n          time: now()\n        });\n      }\n\n      function onTouchEnd({\n        currentPos\n      }) {\n        const {\n          params,\n          $wrapperEl,\n          rtlTranslate: rtl,\n          snapGrid,\n          touchEventsData: data\n        } = swiper; // Time diff\n\n        const touchEndTime = now();\n        const timeDiff = touchEndTime - data.touchStartTime;\n\n        if (currentPos < -swiper.minTranslate()) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n\n        if (currentPos > -swiper.maxTranslate()) {\n          if (swiper.slides.length < snapGrid.length) {\n            swiper.slideTo(snapGrid.length - 1);\n          } else {\n            swiper.slideTo(swiper.slides.length - 1);\n          }\n\n          return;\n        }\n\n        if (params.freeMode.momentum) {\n          if (data.velocities.length > 1) {\n            const lastMoveEvent = data.velocities.pop();\n            const velocityEvent = data.velocities.pop();\n            const distance = lastMoveEvent.position - velocityEvent.position;\n            const time = lastMoveEvent.time - velocityEvent.time;\n            swiper.velocity = distance / time;\n            swiper.velocity /= 2;\n\n            if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n              swiper.velocity = 0;\n            } // this implies that the user stopped moving a finger then released.\n            // There would be no events with distance zero, so the last event is stale.\n\n\n            if (time > 150 || now() - lastMoveEvent.time > 300) {\n              swiper.velocity = 0;\n            }\n          } else {\n            swiper.velocity = 0;\n          }\n\n          swiper.velocity *= params.freeMode.momentumVelocityRatio;\n          data.velocities.length = 0;\n          let momentumDuration = 1000 * params.freeMode.momentumRatio;\n          const momentumDistance = swiper.velocity * momentumDuration;\n          let newPosition = swiper.translate + momentumDistance;\n          if (rtl) newPosition = -newPosition;\n          let doBounce = false;\n          let afterBouncePosition;\n          const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n          let needsLoopFix;\n\n          if (newPosition < swiper.maxTranslate()) {\n            if (params.freeMode.momentumBounce) {\n              if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n                newPosition = swiper.maxTranslate() - bounceAmount;\n              }\n\n              afterBouncePosition = swiper.maxTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.maxTranslate();\n            }\n\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\n          } else if (newPosition > swiper.minTranslate()) {\n            if (params.freeMode.momentumBounce) {\n              if (newPosition - swiper.minTranslate() > bounceAmount) {\n                newPosition = swiper.minTranslate() + bounceAmount;\n              }\n\n              afterBouncePosition = swiper.minTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.minTranslate();\n            }\n\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\n          } else if (params.freeMode.sticky) {\n            let nextSlide;\n\n            for (let j = 0; j < snapGrid.length; j += 1) {\n              if (snapGrid[j] > -newPosition) {\n                nextSlide = j;\n                break;\n              }\n            }\n\n            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n              newPosition = snapGrid[nextSlide];\n            } else {\n              newPosition = snapGrid[nextSlide - 1];\n            }\n\n            newPosition = -newPosition;\n          }\n\n          if (needsLoopFix) {\n            once('transitionEnd', () => {\n              swiper.loopFix();\n            });\n          } // Fix duration\n\n\n          if (swiper.velocity !== 0) {\n            if (rtl) {\n              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n            } else {\n              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n            }\n\n            if (params.freeMode.sticky) {\n              // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n              // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n              // It's easy to see this when simulating touch with mouse events. To fix this,\n              // limit single-slide swipes to the default slide duration. This also has the\n              // nice side effect of matching slide speed if the user stopped moving before\n              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n              // For faster swipes, also apply limits (albeit higher ones).\n              const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n              const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n              if (moveDistance < currentSlideSize) {\n                momentumDuration = params.speed;\n              } else if (moveDistance < 2 * currentSlideSize) {\n                momentumDuration = params.speed * 1.5;\n              } else {\n                momentumDuration = params.speed * 2.5;\n              }\n            }\n          } else if (params.freeMode.sticky) {\n            swiper.slideToClosest();\n            return;\n          }\n\n          if (params.freeMode.momentumBounce && doBounce) {\n            swiper.updateProgress(afterBouncePosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n              emit('momentumBounce');\n              swiper.setTransition(params.speed);\n              setTimeout(() => {\n                swiper.setTranslate(afterBouncePosition);\n                $wrapperEl.transitionEnd(() => {\n                  if (!swiper || swiper.destroyed) return;\n                  swiper.transitionEnd();\n                });\n              }, 0);\n            });\n          } else if (swiper.velocity) {\n            emit('_freeModeNoMomentumRelease');\n            swiper.updateProgress(newPosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n\n            if (!swiper.animating) {\n              swiper.animating = true;\n              $wrapperEl.transitionEnd(() => {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }\n          } else {\n            swiper.updateProgress(newPosition);\n          }\n\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        } else if (params.freeMode.sticky) {\n          swiper.slideToClosest();\n          return;\n        } else if (params.freeMode) {\n          emit('_freeModeNoMomentumRelease');\n        }\n\n        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n      }\n\n      Object.assign(swiper, {\n        freeMode: {\n          onTouchMove,\n          onTouchEnd\n        }\n      });\n    }\n\n    function Grid({\n      swiper,\n      extendParams\n    }) {\n      extendParams({\n        grid: {\n          rows: 1,\n          fill: 'column'\n        }\n      });\n      let slidesNumberEvenToRows;\n      let slidesPerRow;\n      let numFullColumns;\n\n      const initSlides = slidesLength => {\n        const {\n          slidesPerView\n        } = swiper.params;\n        const {\n          rows,\n          fill\n        } = swiper.params.grid;\n        slidesPerRow = slidesNumberEvenToRows / rows;\n        numFullColumns = Math.floor(slidesLength / rows);\n\n        if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n          slidesNumberEvenToRows = slidesLength;\n        } else {\n          slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n        }\n\n        if (slidesPerView !== 'auto' && fill === 'row') {\n          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n        }\n      };\n\n      const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n        const {\n          slidesPerGroup,\n          spaceBetween\n        } = swiper.params;\n        const {\n          rows,\n          fill\n        } = swiper.params.grid; // Set slides order\n\n        let newSlideOrderIndex;\n        let column;\n        let row;\n\n        if (fill === 'row' && slidesPerGroup > 1) {\n          const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n          const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n          const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n          slide.css({\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex\n          });\n        } else if (fill === 'column') {\n          column = Math.floor(i / rows);\n          row = i - column * rows;\n\n          if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n            row += 1;\n\n            if (row >= rows) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - row * slidesPerRow;\n        }\n\n        slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');\n      };\n\n      const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n        const {\n          spaceBetween,\n          centeredSlides,\n          roundLengths\n        } = swiper.params;\n        const {\n          rows\n        } = swiper.params.grid;\n        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n        swiper.$wrapperEl.css({\n          [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`\n        });\n\n        if (centeredSlides) {\n          snapGrid.splice(0, snapGrid.length);\n          const newSlidesGrid = [];\n\n          for (let i = 0; i < snapGrid.length; i += 1) {\n            let slidesGridItem = snapGrid[i];\n            if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n            if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n          }\n\n          snapGrid.push(...newSlidesGrid);\n        }\n      };\n\n      swiper.grid = {\n        initSlides,\n        updateSlide,\n        updateWrapperSize\n      };\n    }\n\n    function appendSlide(slides) {\n      const swiper = this;\n      const {\n        $wrapperEl,\n        params\n      } = swiper;\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) $wrapperEl.append(slides[i]);\n        }\n      } else {\n        $wrapperEl.append(slides);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!params.observer) {\n        swiper.update();\n      }\n    }\n\n    function prependSlide(slides) {\n      const swiper = this;\n      const {\n        params,\n        $wrapperEl,\n        activeIndex\n      } = swiper;\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      let newActiveIndex = activeIndex + 1;\n\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) $wrapperEl.prepend(slides[i]);\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n      } else {\n        $wrapperEl.prepend(slides);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!params.observer) {\n        swiper.update();\n      }\n\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n\n    function addSlide(index, slides) {\n      const swiper = this;\n      const {\n        $wrapperEl,\n        params,\n        activeIndex\n      } = swiper;\n      let activeIndexBuffer = activeIndex;\n\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n      }\n\n      const baseLength = swiper.slides.length;\n\n      if (index <= 0) {\n        swiper.prependSlide(slides);\n        return;\n      }\n\n      if (index >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n      }\n\n      let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n      const slidesBuffer = [];\n\n      for (let i = baseLength - 1; i >= index; i -= 1) {\n        const currentSlide = swiper.slides.eq(i);\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n      }\n\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) $wrapperEl.append(slides[i]);\n        }\n\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n      } else {\n        $wrapperEl.append(slides);\n      }\n\n      for (let i = 0; i < slidesBuffer.length; i += 1) {\n        $wrapperEl.append(slidesBuffer[i]);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!params.observer) {\n        swiper.update();\n      }\n\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeSlide(slidesIndexes) {\n      const swiper = this;\n      const {\n        params,\n        $wrapperEl,\n        activeIndex\n      } = swiper;\n      let activeIndexBuffer = activeIndex;\n\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n      }\n\n      let newActiveIndex = activeIndexBuffer;\n      let indexToRemove;\n\n      if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n        for (let i = 0; i < slidesIndexes.length; i += 1) {\n          indexToRemove = slidesIndexes[i];\n          if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n          if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        }\n\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      } else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!params.observer) {\n        swiper.update();\n      }\n\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeAllSlides() {\n      const swiper = this;\n      const slidesIndexes = [];\n\n      for (let i = 0; i < swiper.slides.length; i += 1) {\n        slidesIndexes.push(i);\n      }\n\n      swiper.removeSlide(slidesIndexes);\n    }\n\n    function Manipulation({\n      swiper\n    }) {\n      Object.assign(swiper, {\n        appendSlide: appendSlide.bind(swiper),\n        prependSlide: prependSlide.bind(swiper),\n        addSlide: addSlide.bind(swiper),\n        removeSlide: removeSlide.bind(swiper),\n        removeAllSlides: removeAllSlides.bind(swiper)\n      });\n    }\n\n    function effectInit(params) {\n      const {\n        effect,\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        overwriteParams,\n        perspective\n      } = params;\n      on('beforeInit', () => {\n        if (swiper.params.effect !== effect) return;\n        swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n        if (perspective && perspective()) {\n          swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n        }\n\n        const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n        Object.assign(swiper.params, overwriteParamsResult);\n        Object.assign(swiper.originalParams, overwriteParamsResult);\n      });\n      on('setTranslate', () => {\n        if (swiper.params.effect !== effect) return;\n        setTranslate();\n      });\n      on('setTransition', (_s, duration) => {\n        if (swiper.params.effect !== effect) return;\n        setTransition(duration);\n      });\n    }\n\n    function effectTarget(effectParams, $slideEl) {\n      if (effectParams.transformEl) {\n        return $slideEl.find(effectParams.transformEl).css({\n          'backface-visibility': 'hidden',\n          '-webkit-backface-visibility': 'hidden'\n        });\n      }\n\n      return $slideEl;\n    }\n\n    function effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides\n    }) {\n      const {\n        slides,\n        activeIndex,\n        $wrapperEl\n      } = swiper;\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        let eventTriggered = false;\n        let $transitionEndTarget;\n\n        if (allSlides) {\n          $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n        } else {\n          $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\n        }\n\n        $transitionEndTarget.transitionEnd(() => {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (let i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n\n    function EffectFade({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        fadeEffect: {\n          crossFade: false,\n          transformEl: null\n        }\n      });\n\n      const setTranslate = () => {\n        const {\n          slides\n        } = swiper;\n        const params = swiper.params.fadeEffect;\n\n        for (let i = 0; i < slides.length; i += 1) {\n          const $slideEl = swiper.slides.eq(i);\n          const offset = $slideEl[0].swiperSlideOffset;\n          let tx = -offset;\n          if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n          let ty = 0;\n\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n          }\n\n          const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n          const $targetEl = effectTarget(params, $slideEl);\n          $targetEl.css({\n            opacity: slideOpacity\n          }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n        }\n      };\n\n      const setTransition = duration => {\n        const {\n          transformEl\n        } = swiper.params.fadeEffect;\n        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration);\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformEl,\n          allSlides: true\n        });\n      };\n\n      effectInit({\n        effect: 'fade',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCube({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        cubeEffect: {\n          slideShadows: true,\n          shadow: true,\n          shadowOffset: 20,\n          shadowScale: 0.94\n        }\n      });\n\n      const setTranslate = () => {\n        const {\n          $el,\n          $wrapperEl,\n          slides,\n          width: swiperWidth,\n          height: swiperHeight,\n          rtlTranslate: rtl,\n          size: swiperSize,\n          browser\n        } = swiper;\n        const params = swiper.params.cubeEffect;\n        const isHorizontal = swiper.isHorizontal();\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        let wrapperRotate = 0;\n        let $cubeShadowEl;\n\n        if (params.shadow) {\n          if (isHorizontal) {\n            $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n            if ($cubeShadowEl.length === 0) {\n              $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n              $wrapperEl.append($cubeShadowEl);\n            }\n\n            $cubeShadowEl.css({\n              height: `${swiperWidth}px`\n            });\n          } else {\n            $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n            if ($cubeShadowEl.length === 0) {\n              $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n              $el.append($cubeShadowEl);\n            }\n          }\n        }\n\n        for (let i = 0; i < slides.length; i += 1) {\n          const $slideEl = slides.eq(i);\n          let slideIndex = i;\n\n          if (isVirtual) {\n            slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n          }\n\n          let slideAngle = slideIndex * 90;\n          let round = Math.floor(slideAngle / 360);\n\n          if (rtl) {\n            slideAngle = -slideAngle;\n            round = Math.floor(-slideAngle / 360);\n          }\n\n          const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n          let tx = 0;\n          let ty = 0;\n          let tz = 0;\n\n          if (slideIndex % 4 === 0) {\n            tx = -round * 4 * swiperSize;\n            tz = 0;\n          } else if ((slideIndex - 1) % 4 === 0) {\n            tx = 0;\n            tz = -round * 4 * swiperSize;\n          } else if ((slideIndex - 2) % 4 === 0) {\n            tx = swiperSize + round * 4 * swiperSize;\n            tz = swiperSize;\n          } else if ((slideIndex - 3) % 4 === 0) {\n            tx = -swiperSize;\n            tz = 3 * swiperSize + swiperSize * 4 * round;\n          }\n\n          if (rtl) {\n            tx = -tx;\n          }\n\n          if (!isHorizontal) {\n            ty = tx;\n            tx = 0;\n          }\n\n          const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n          if (progress <= 1 && progress > -1) {\n            wrapperRotate = slideIndex * 90 + progress * 90;\n            if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n          }\n\n          $slideEl.transform(transform);\n\n          if (params.slideShadows) {\n            // Set shadows\n            let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n            if (shadowBefore.length === 0) {\n              shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n              $slideEl.append(shadowBefore);\n            }\n\n            if (shadowAfter.length === 0) {\n              shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n              $slideEl.append(shadowAfter);\n            }\n\n            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n          }\n        }\n\n        $wrapperEl.css({\n          '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n          'transform-origin': `50% 50% -${swiperSize / 2}px`\n        });\n\n        if (params.shadow) {\n          if (isHorizontal) {\n            $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n          } else {\n            const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n            const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n            const scale1 = params.shadowScale;\n            const scale2 = params.shadowScale / multiplier;\n            const offset = params.shadowOffset;\n            $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n          }\n        }\n\n        const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n        $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n      };\n\n      const setTransition = duration => {\n        const {\n          $el,\n          slides\n        } = swiper;\n        slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n          $el.find('.swiper-cube-shadow').transition(duration);\n        }\n      };\n\n      effectInit({\n        effect: 'cube',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true\n        })\n      });\n    }\n\n    function createShadow(params, $slideEl, side) {\n      const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n      const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n      let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\n\n      if (!$shadowEl.length) {\n        $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\n        $shadowContainer.append($shadowEl);\n      }\n\n      return $shadowEl;\n    }\n\n    function EffectFlip({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        flipEffect: {\n          slideShadows: true,\n          limitRotation: true,\n          transformEl: null\n        }\n      });\n\n      const setTranslate = () => {\n        const {\n          slides,\n          rtlTranslate: rtl\n        } = swiper;\n        const params = swiper.params.flipEffect;\n\n        for (let i = 0; i < slides.length; i += 1) {\n          const $slideEl = slides.eq(i);\n          let progress = $slideEl[0].progress;\n\n          if (swiper.params.flipEffect.limitRotation) {\n            progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n          }\n\n          const offset = $slideEl[0].swiperSlideOffset;\n          const rotate = -180 * progress;\n          let rotateY = rotate;\n          let rotateX = 0;\n          let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n          let ty = 0;\n\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n            rotateX = -rotateY;\n            rotateY = 0;\n          } else if (rtl) {\n            rotateY = -rotateY;\n          }\n\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n          if (params.slideShadows) {\n            // Set shadows\n            let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n            if (shadowBefore.length === 0) {\n              shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n            }\n\n            if (shadowAfter.length === 0) {\n              shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n            }\n\n            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n          }\n\n          const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n          const $targetEl = effectTarget(params, $slideEl);\n          $targetEl.transform(transform);\n        }\n      };\n\n      const setTransition = duration => {\n        const {\n          transformEl\n        } = swiper.params.flipEffect;\n        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformEl\n        });\n      };\n\n      effectInit({\n        effect: 'flip',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCoverflow({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          scale: 1,\n          modifier: 1,\n          slideShadows: true,\n          transformEl: null\n        }\n      });\n\n      const setTranslate = () => {\n        const {\n          width: swiperWidth,\n          height: swiperHeight,\n          slides,\n          slidesSizesGrid\n        } = swiper;\n        const params = swiper.params.coverflowEffect;\n        const isHorizontal = swiper.isHorizontal();\n        const transform = swiper.translate;\n        const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n        const rotate = isHorizontal ? params.rotate : -params.rotate;\n        const translate = params.depth; // Each slide offset from center\n\n        for (let i = 0, length = slides.length; i < length; i += 1) {\n          const $slideEl = slides.eq(i);\n          const slideSize = slidesSizesGrid[i];\n          const slideOffset = $slideEl[0].swiperSlideOffset;\n          const offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n          let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n          let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n          let translateZ = -translate * Math.abs(offsetMultiplier);\n          let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n            stretch = parseFloat(params.stretch) / 100 * slideSize;\n          }\n\n          let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n          let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n          let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n          if (Math.abs(translateX) < 0.001) translateX = 0;\n          if (Math.abs(translateY) < 0.001) translateY = 0;\n          if (Math.abs(translateZ) < 0.001) translateZ = 0;\n          if (Math.abs(rotateY) < 0.001) rotateY = 0;\n          if (Math.abs(rotateX) < 0.001) rotateX = 0;\n          if (Math.abs(scale) < 0.001) scale = 0;\n          const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n          const $targetEl = effectTarget(params, $slideEl);\n          $targetEl.transform(slideTransform);\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n          if (params.slideShadows) {\n            // Set shadows\n            let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n            if ($shadowBeforeEl.length === 0) {\n              $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n            }\n\n            if ($shadowAfterEl.length === 0) {\n              $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n            }\n\n            if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n            if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n          }\n        }\n      };\n\n      const setTransition = duration => {\n        const {\n          transformEl\n        } = swiper.params.coverflowEffect;\n        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n      };\n\n      effectInit({\n        effect: 'coverflow',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          watchSlidesProgress: true\n        })\n      });\n    }\n\n    function EffectCreative({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        creativeEffect: {\n          transformEl: null,\n          limitProgress: 1,\n          shadowPerProgress: false,\n          progressMultiplier: 1,\n          perspective: true,\n          prev: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1\n          },\n          next: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1\n          }\n        }\n      });\n\n      const getTranslateValue = value => {\n        if (typeof value === 'string') return value;\n        return `${value}px`;\n      };\n\n      const setTranslate = () => {\n        const {\n          slides,\n          $wrapperEl,\n          slidesSizesGrid\n        } = swiper;\n        const params = swiper.params.creativeEffect;\n        const {\n          progressMultiplier: multiplier\n        } = params;\n        const isCenteredSlides = swiper.params.centeredSlides;\n\n        if (isCenteredSlides) {\n          const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n          $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\n        }\n\n        for (let i = 0; i < slides.length; i += 1) {\n          const $slideEl = slides.eq(i);\n          const slideProgress = $slideEl[0].progress;\n          const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n          let originalProgress = progress;\n\n          if (!isCenteredSlides) {\n            originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n          }\n\n          const offset = $slideEl[0].swiperSlideOffset;\n          const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n          const r = [0, 0, 0];\n          let custom = false;\n\n          if (!swiper.isHorizontal()) {\n            t[1] = t[0];\n            t[0] = 0;\n          }\n\n          let data = {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            scale: 1,\n            opacity: 1\n          };\n\n          if (progress < 0) {\n            data = params.next;\n            custom = true;\n          } else if (progress > 0) {\n            data = params.prev;\n            custom = true;\n          } // set translate\n\n\n          t.forEach((value, index) => {\n            t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n          }); // set rotates\n\n          r.forEach((value, index) => {\n            r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n          });\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n          const translateString = t.join(', ');\n          const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n          const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n          const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n          const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n          if (custom && data.shadow || !custom) {\n            let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n            if ($shadowEl.length === 0 && data.shadow) {\n              $shadowEl = createShadow(params, $slideEl);\n            }\n\n            if ($shadowEl.length) {\n              const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n              $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n            }\n          }\n\n          const $targetEl = effectTarget(params, $slideEl);\n          $targetEl.transform(transform).css({\n            opacity: opacityString\n          });\n\n          if (data.origin) {\n            $targetEl.css('transform-origin', data.origin);\n          }\n        }\n      };\n\n      const setTransition = duration => {\n        const {\n          transformEl\n        } = swiper.params.creativeEffect;\n        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformEl,\n          allSlides: true\n        });\n      };\n\n      effectInit({\n        effect: 'creative',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => swiper.params.creativeEffect.perspective,\n        overwriteParams: () => ({\n          watchSlidesProgress: true,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCards({\n      swiper,\n      extendParams,\n      on\n    }) {\n      extendParams({\n        cardsEffect: {\n          slideShadows: true,\n          transformEl: null\n        }\n      });\n\n      const setTranslate = () => {\n        const {\n          slides,\n          activeIndex\n        } = swiper;\n        const params = swiper.params.cardsEffect;\n        const {\n          startTranslate,\n          isTouched\n        } = swiper.touchEventsData;\n        const currentTranslate = swiper.translate;\n\n        for (let i = 0; i < slides.length; i += 1) {\n          const $slideEl = slides.eq(i);\n          const slideProgress = $slideEl[0].progress;\n          const progress = Math.min(Math.max(slideProgress, -4), 4);\n          let offset = $slideEl[0].swiperSlideOffset;\n\n          if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n            swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n          }\n\n          if (swiper.params.centeredSlides && swiper.params.cssMode) {\n            offset -= slides[0].swiperSlideOffset;\n          }\n\n          let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n          let tY = 0;\n          const tZ = -100 * Math.abs(progress);\n          let scale = 1;\n          let rotate = -2 * progress;\n          let tXAdd = 8 - Math.abs(progress) * 0.75;\n          const isSwipeToNext = (i === activeIndex || i === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n          const isSwipeToPrev = (i === activeIndex || i === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n          if (isSwipeToNext || isSwipeToPrev) {\n            const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n            rotate += -28 * progress * subProgress;\n            scale += -0.5 * subProgress;\n            tXAdd += 96 * subProgress;\n            tY = `${-25 * subProgress * Math.abs(progress)}%`;\n          }\n\n          if (progress < 0) {\n            // next\n            tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n          } else if (progress > 0) {\n            // prev\n            tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n          } else {\n            tX = `${tX}px`;\n          }\n\n          if (!swiper.isHorizontal()) {\n            const prevY = tY;\n            tY = tX;\n            tX = prevY;\n          }\n\n          const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n          const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${rotate}deg)\n        scale(${scaleString})\n      `;\n\n          if (params.slideShadows) {\n            // Set shadows\n            let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n            if ($shadowEl.length === 0) {\n              $shadowEl = createShadow(params, $slideEl);\n            }\n\n            if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n          }\n\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n          const $targetEl = effectTarget(params, $slideEl);\n          $targetEl.transform(transform);\n        }\n      };\n\n      const setTransition = duration => {\n        const {\n          transformEl\n        } = swiper.params.cardsEffect;\n        const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformEl\n        });\n      };\n\n      effectInit({\n        effect: 'cards',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          watchSlidesProgress: true,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    // Swiper Class\n    const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\n    Swiper.use(modules);\n\n    return Swiper;\n\n})));\n//# sourceMappingURL=swiper-bundle.js.map\n","// jsx;\n// data - tel - input; //для html\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var phoneInputs = document.querySelectorAll(\"input[data-tel-input]\");\n\n  var getInputNumbersValue = function (input) {\n    // Return stripped input value — just numbers\n    return input.value.replace(/\\D/g, \"\");\n  };\n\n  var onPhonePaste = function (e) {\n    var input = e.target,\n      inputNumbersValue = getInputNumbersValue(input);\n    var pasted = e.clipboardData || window.clipboardData;\n    if (pasted) {\n      var pastedText = pasted.getData(\"Text\");\n      if (/\\D/g.test(pastedText)) {\n        // Attempt to paste non-numeric symbol — remove all non-numeric symbols,\n        // formatting will be in onPhoneInput handler\n        input.value = inputNumbersValue;\n        return;\n      }\n    }\n  };\n\n  var onPhoneInput = function (e) {\n    var input = e.target,\n      inputNumbersValue = getInputNumbersValue(input),\n      selectionStart = input.selectionStart,\n      formattedInputValue = \"\";\n\n    if (!inputNumbersValue) {\n      return (input.value = \"\");\n    }\n\n    if (input.value.length != selectionStart) {\n      // Editing in the middle of input, not last symbol\n      if (e.data && /\\D/g.test(e.data)) {\n        // Attempt to input non-numeric symbol\n        input.value = inputNumbersValue;\n      }\n      return;\n    }\n\n    if ([\"7\", \"8\", \"9\"].indexOf(inputNumbersValue[0]) > -1) {\n      if (inputNumbersValue[0] == \"9\")\n        inputNumbersValue = \"7\" + inputNumbersValue;\n      var firstSymbols = inputNumbersValue[0] == \"8\" ? \"8\" : \"+7\";\n      formattedInputValue = input.value = firstSymbols + \" \";\n      if (inputNumbersValue.length > 1) {\n        formattedInputValue += \"(\" + inputNumbersValue.substring(1, 4);\n      }\n      if (inputNumbersValue.length >= 5) {\n        formattedInputValue += \") \" + inputNumbersValue.substring(4, 7);\n      }\n      if (inputNumbersValue.length >= 8) {\n        formattedInputValue += \"-\" + inputNumbersValue.substring(7, 9);\n      }\n      if (inputNumbersValue.length >= 10) {\n        formattedInputValue += \"-\" + inputNumbersValue.substring(9, 11);\n      }\n    } else {\n      formattedInputValue = \"+\" + inputNumbersValue.substring(0, 16);\n    }\n    input.value = formattedInputValue;\n  };\n  var onPhoneKeyDown = function (e) {\n    // Clear input after remove last symbol\n    var inputValue = e.target.value.replace(/\\D/g, \"\");\n    if (e.keyCode == 8 && inputValue.length == 1) {\n      e.target.value = \"\";\n    }\n  };\n  for (var phoneInput of phoneInputs) {\n    phoneInput.addEventListener(\"keydown\", onPhoneKeyDown);\n    phoneInput.addEventListener(\"input\", onPhoneInput, false);\n    phoneInput.addEventListener(\"paste\", onPhonePaste, false);\n  }\n});\n","//\n// SmoothScroll for websites v1.4.10 (Balazs Galambosi)\n// http://www.smoothscroll.net/\n//\n// Licensed under the terms of the MIT license.\n//\n// You may use it in your theme if you credit me.\n// It is also free to use on any individual website.\n//\n// Exception:\n// The only restriction is to not publish any\n// extension for browsers or native application\n// without getting a written permission first.\n//\n\n(function () {\n  // Scroll Variables (tweakable)\n  var defaultOptions = {\n    stepSize: 75,\n    animationTime: 1000,\n    accelerationDelta: 50,\n    accelerationMax: 3,\n    keyboardSupport: true,\n    arrowScroll: 50,\n    pulseAlgorithm: true,\n    pulseScale: 4,\n    pulseNormalize: 1,\n    touchpadSupport: false,\n    fixedBackground: true,\n    excluded: \"\",\n  };\n\n  var options = defaultOptions;\n\n  // Other Variables\n  var isExcluded = false;\n  var isFrame = false;\n  var direction = { x: 0, y: 0 };\n  var initDone = false;\n  var root = document.documentElement;\n  var activeElement;\n  var observer;\n  var refreshSize;\n  var deltaBuffer = [];\n  var deltaBufferTimer;\n  var isMac = /^Mac/.test(navigator.platform);\n\n  var key = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    spacebar: 32,\n    pageup: 33,\n    pagedown: 34,\n    end: 35,\n    home: 36,\n  };\n  var arrowKeys = { 37: 1, 38: 1, 39: 1, 40: 1 };\n\n  /***********************************************\n   * INITIALIZE\n   ***********************************************/\n\n  /**\n   * Tests if smooth scrolling is allowed. Shuts down everything if not.\n   */\n  function initTest() {\n    if (options.keyboardSupport) {\n      addEvent(\"keydown\", keydown);\n    }\n  }\n\n  /**\n   * Sets up scrolls array, determines if frames are involved.\n   */\n  function init() {\n    if (initDone || !document.body) return;\n\n    initDone = true;\n\n    var body = document.body;\n    var html = document.documentElement;\n    var windowHeight = window.innerHeight;\n    var scrollHeight = body.scrollHeight;\n\n    // check compat mode for root element\n    root = document.compatMode.indexOf(\"CSS\") >= 0 ? html : body;\n    activeElement = body;\n\n    initTest();\n\n    // Checks if this script is running in a frame\n    if (top != self) {\n      isFrame = true;\n    } else if (\n      /**\n       * Safari 10 fixed it, Chrome fixed it in v45:\n       * This fixes a bug where the areas left and right to\n       * the content does not trigger the onmousewheel event\n       * on some pages. e.g.: html, body { height: 100% }\n       */\n      isOldSafari &&\n      scrollHeight > windowHeight &&\n      (body.offsetHeight <= windowHeight || html.offsetHeight <= windowHeight)\n    ) {\n      var fullPageElem = document.createElement(\"div\");\n      fullPageElem.style.cssText =\n        \"position:absolute; z-index:-10000; \" +\n        \"top:0; left:0; right:0; height:\" +\n        root.scrollHeight +\n        \"px\";\n      document.body.appendChild(fullPageElem);\n\n      // DOM changed (throttled) to fix height\n      var pendingRefresh;\n      refreshSize = function () {\n        if (pendingRefresh) return; // could also be: clearTimeout(pendingRefresh);\n        pendingRefresh = setTimeout(function () {\n          if (isExcluded) return; // could be running after cleanup\n          fullPageElem.style.height = \"0\";\n          fullPageElem.style.height = root.scrollHeight + \"px\";\n          pendingRefresh = null;\n        }, 500); // act rarely to stay fast\n      };\n\n      setTimeout(refreshSize, 10);\n\n      addEvent(\"resize\", refreshSize);\n\n      // TODO: attributeFilter?\n      var config = {\n        attributes: true,\n        childList: true,\n        characterData: false,\n        // subtree: true\n      };\n\n      observer = new MutationObserver(refreshSize);\n      observer.observe(body, config);\n\n      if (root.offsetHeight <= windowHeight) {\n        var clearfix = document.createElement(\"div\");\n        clearfix.style.clear = \"both\";\n        body.appendChild(clearfix);\n      }\n    }\n\n    // disable fixed background\n    if (!options.fixedBackground && !isExcluded) {\n      body.style.backgroundAttachment = \"scroll\";\n      html.style.backgroundAttachment = \"scroll\";\n    }\n  }\n\n  /**\n   * Removes event listeners and other traces left on the page.\n   */\n  function cleanup() {\n    observer && observer.disconnect();\n    removeEvent(wheelEvent, wheel);\n    removeEvent(\"mousedown\", mousedown);\n    removeEvent(\"keydown\", keydown);\n    removeEvent(\"resize\", refreshSize);\n    removeEvent(\"load\", init);\n  }\n\n  /************************************************\n   * SCROLLING\n   ************************************************/\n\n  var que = [];\n  var pending = false;\n  var lastScroll = Date.now();\n\n  /**\n   * Pushes scroll actions to the scrolling queue.\n   */\n  function scrollArray(elem, left, top) {\n    directionCheck(left, top);\n\n    if (options.accelerationMax != 1) {\n      var now = Date.now();\n      var elapsed = now - lastScroll;\n      if (elapsed < options.accelerationDelta) {\n        var factor = (1 + 50 / elapsed) / 2;\n        if (factor > 1) {\n          factor = Math.min(factor, options.accelerationMax);\n          left *= factor;\n          top *= factor;\n        }\n      }\n      lastScroll = Date.now();\n    }\n\n    // push a scroll command\n    que.push({\n      x: left,\n      y: top,\n      lastX: left < 0 ? 0.99 : -0.99,\n      lastY: top < 0 ? 0.99 : -0.99,\n      start: Date.now(),\n    });\n\n    // don't act if there's a pending queue\n    if (pending) {\n      return;\n    }\n\n    var scrollRoot = getScrollRoot();\n    var isWindowScroll = elem === scrollRoot || elem === document.body;\n\n    // if we haven't already fixed the behavior,\n    // and it needs fixing for this sesh\n    if (elem.$scrollBehavior == null && isScrollBehaviorSmooth(elem)) {\n      elem.$scrollBehavior = elem.style.scrollBehavior;\n      elem.style.scrollBehavior = \"auto\";\n    }\n\n    var step = function (time) {\n      var now = Date.now();\n      var scrollX = 0;\n      var scrollY = 0;\n\n      for (var i = 0; i < que.length; i++) {\n        var item = que[i];\n        var elapsed = now - item.start;\n        var finished = elapsed >= options.animationTime;\n\n        // scroll position: [0, 1]\n        var position = finished ? 1 : elapsed / options.animationTime;\n\n        // easing [optional]\n        if (options.pulseAlgorithm) {\n          position = pulse(position);\n        }\n\n        // only need the difference\n        var x = (item.x * position - item.lastX) >> 0;\n        var y = (item.y * position - item.lastY) >> 0;\n\n        // add this to the total scrolling\n        scrollX += x;\n        scrollY += y;\n\n        // update last values\n        item.lastX += x;\n        item.lastY += y;\n\n        // delete and step back if it's over\n        if (finished) {\n          que.splice(i, 1);\n          i--;\n        }\n      }\n\n      // scroll left and top\n      if (isWindowScroll) {\n        window.scrollBy(scrollX, scrollY);\n      } else {\n        if (scrollX) elem.scrollLeft += scrollX;\n        if (scrollY) elem.scrollTop += scrollY;\n      }\n\n      // clean up if there's nothing left to do\n      if (!left && !top) {\n        que = [];\n      }\n\n      if (que.length) {\n        requestFrame(step, elem, 1000 / options.frameRate + 1);\n      } else {\n        pending = false;\n        // restore default behavior at the end of scrolling sesh\n        if (elem.$scrollBehavior != null) {\n          elem.style.scrollBehavior = elem.$scrollBehavior;\n          elem.$scrollBehavior = null;\n        }\n      }\n    };\n\n    // start a new queue of actions\n    requestFrame(step, elem, 0);\n    pending = true;\n  }\n\n  /***********************************************\n   * EVENTS\n   ***********************************************/\n\n  /**\n   * Mouse wheel handler.\n   * @param {Object} event\n   */\n  function wheel(event) {\n    if (!initDone) {\n      init();\n    }\n\n    var target = event.target;\n\n    // leave early if default action is prevented\n    // or it's a zooming event with CTRL\n    if (event.defaultPrevented || event.ctrlKey) {\n      return true;\n    }\n\n    // leave embedded content alone (flash & pdf)\n    if (\n      isNodeName(activeElement, \"embed\") ||\n      (isNodeName(target, \"embed\") && /\\.pdf/i.test(target.src)) ||\n      isNodeName(activeElement, \"object\") ||\n      target.shadowRoot\n    ) {\n      return true;\n    }\n\n    var deltaX = -event.wheelDeltaX || event.deltaX || 0;\n    var deltaY = -event.wheelDeltaY || event.deltaY || 0;\n\n    if (isMac) {\n      if (event.wheelDeltaX && isDivisible(event.wheelDeltaX, 120)) {\n        deltaX = -120 * (event.wheelDeltaX / Math.abs(event.wheelDeltaX));\n      }\n      if (event.wheelDeltaY && isDivisible(event.wheelDeltaY, 120)) {\n        deltaY = -120 * (event.wheelDeltaY / Math.abs(event.wheelDeltaY));\n      }\n    }\n\n    // use wheelDelta if deltaX/Y is not available\n    if (!deltaX && !deltaY) {\n      deltaY = -event.wheelDelta || 0;\n    }\n\n    // line based scrolling (Firefox mostly)\n    if (event.deltaMode === 1) {\n      deltaX *= 40;\n      deltaY *= 40;\n    }\n\n    var overflowing = overflowingAncestor(target);\n\n    // nothing to do if there's no element that's scrollable\n    if (!overflowing) {\n      // except Chrome iframes seem to eat wheel events, which we need to\n      // propagate up, if the iframe has nothing overflowing to scroll\n      if (isFrame && isChrome) {\n        // change target to iframe element itself for the parent frame\n        Object.defineProperty(event, \"target\", { value: window.frameElement });\n        return parent.wheel(event);\n      }\n      return true;\n    }\n\n    // check if it's a touchpad scroll that should be ignored\n    if (isTouchpad(deltaY)) {\n      return true;\n    }\n\n    // scale by step size\n    // delta is 120 most of the time\n    // synaptics seems to send 1 sometimes\n    if (Math.abs(deltaX) > 1.2) {\n      deltaX *= options.stepSize / 120;\n    }\n    if (Math.abs(deltaY) > 1.2) {\n      deltaY *= options.stepSize / 120;\n    }\n\n    scrollArray(overflowing, deltaX, deltaY);\n    event.preventDefault();\n    scheduleClearCache();\n  }\n\n  /**\n   * Keydown event handler.\n   * @param {Object} event\n   */\n  function keydown(event) {\n    var target = event.target;\n    var modifier =\n      event.ctrlKey ||\n      event.altKey ||\n      event.metaKey ||\n      (event.shiftKey && event.keyCode !== key.spacebar);\n\n    // our own tracked active element could've been removed from the DOM\n    if (!document.body.contains(activeElement)) {\n      activeElement = document.activeElement;\n    }\n\n    // do nothing if user is editing text\n    // or using a modifier key (except shift)\n    // or in a dropdown\n    // or inside interactive elements\n    var inputNodeNames = /^(textarea|select|embed|object)$/i;\n    var buttonTypes = /^(button|submit|radio|checkbox|file|color|image)$/i;\n    if (\n      event.defaultPrevented ||\n      inputNodeNames.test(target.nodeName) ||\n      (isNodeName(target, \"input\") && !buttonTypes.test(target.type)) ||\n      isNodeName(activeElement, \"video\") ||\n      isInsideYoutubeVideo(event) ||\n      target.isContentEditable ||\n      modifier\n    ) {\n      return true;\n    }\n\n    // [spacebar] should trigger button press, leave it alone\n    if (\n      (isNodeName(target, \"button\") ||\n        (isNodeName(target, \"input\") && buttonTypes.test(target.type))) &&\n      event.keyCode === key.spacebar\n    ) {\n      return true;\n    }\n\n    // [arrwow keys] on radio buttons should be left alone\n    if (\n      isNodeName(target, \"input\") &&\n      target.type == \"radio\" &&\n      arrowKeys[event.keyCode]\n    ) {\n      return true;\n    }\n\n    var shift,\n      x = 0,\n      y = 0;\n    var overflowing = overflowingAncestor(activeElement);\n\n    if (!overflowing) {\n      // Chrome iframes seem to eat key events, which we need to\n      // propagate up, if the iframe has nothing overflowing to scroll\n      return isFrame && isChrome ? parent.keydown(event) : true;\n    }\n\n    var clientHeight = overflowing.clientHeight;\n\n    if (overflowing == document.body) {\n      clientHeight = window.innerHeight;\n    }\n\n    switch (event.keyCode) {\n      case key.up:\n        y = -options.arrowScroll;\n        break;\n      case key.down:\n        y = options.arrowScroll;\n        break;\n      case key.spacebar: // (+ shift)\n        shift = event.shiftKey ? 1 : -1;\n        y = -shift * clientHeight * 0.9;\n        break;\n      case key.pageup:\n        y = -clientHeight * 0.9;\n        break;\n      case key.pagedown:\n        y = clientHeight * 0.9;\n        break;\n      case key.home:\n        if (overflowing == document.body && document.scrollingElement)\n          overflowing = document.scrollingElement;\n        y = -overflowing.scrollTop;\n        break;\n      case key.end:\n        var scroll = overflowing.scrollHeight - overflowing.scrollTop;\n        var scrollRemaining = scroll - clientHeight;\n        y = scrollRemaining > 0 ? scrollRemaining + 10 : 0;\n        break;\n      case key.left:\n        x = -options.arrowScroll;\n        break;\n      case key.right:\n        x = options.arrowScroll;\n        break;\n      default:\n        return true; // a key we don't care about\n    }\n\n    scrollArray(overflowing, x, y);\n    event.preventDefault();\n    scheduleClearCache();\n  }\n\n  /**\n   * Mousedown event only for updating activeElement\n   */\n  function mousedown(event) {\n    activeElement = event.target;\n  }\n\n  /***********************************************\n   * OVERFLOW\n   ***********************************************/\n\n  var uniqueID = (function () {\n    var i = 0;\n    return function (el) {\n      return el.uniqueID || (el.uniqueID = i++);\n    };\n  })();\n\n  var cacheX = {}; // cleared out after a scrolling session\n  var cacheY = {}; // cleared out after a scrolling session\n  var clearCacheTimer;\n  var smoothBehaviorForElement = {};\n\n  //setInterval(function () { cache = {}; }, 10 * 1000);\n\n  function scheduleClearCache() {\n    clearTimeout(clearCacheTimer);\n    clearCacheTimer = setInterval(function () {\n      cacheX = cacheY = smoothBehaviorForElement = {};\n    }, 1 * 1000);\n  }\n\n  function setCache(elems, overflowing, x) {\n    var cache = x ? cacheX : cacheY;\n    for (var i = elems.length; i--; ) cache[uniqueID(elems[i])] = overflowing;\n    return overflowing;\n  }\n\n  function getCache(el, x) {\n    return (x ? cacheX : cacheY)[uniqueID(el)];\n  }\n\n  //  (body)                (root)\n  //         | hidden | visible | scroll |  auto  |\n  // hidden  |   no   |    no   |   YES  |   YES  |\n  // visible |   no   |   YES   |   YES  |   YES  |\n  // scroll  |   no   |   YES   |   YES  |   YES  |\n  // auto    |   no   |   YES   |   YES  |   YES  |\n\n  function overflowingAncestor(el) {\n    var elems = [];\n    var body = document.body;\n    var rootScrollHeight = root.scrollHeight;\n    do {\n      var cached = getCache(el, false);\n      if (cached) {\n        return setCache(elems, cached);\n      }\n      elems.push(el);\n      if (rootScrollHeight === el.scrollHeight) {\n        var topOverflowsNotHidden =\n          overflowNotHidden(root) && overflowNotHidden(body);\n        var isOverflowCSS = topOverflowsNotHidden || overflowAutoOrScroll(root);\n        if (\n          (isFrame && isContentOverflowing(root)) ||\n          (!isFrame && isOverflowCSS)\n        ) {\n          return setCache(elems, getScrollRoot());\n        }\n      } else if (isContentOverflowing(el) && overflowAutoOrScroll(el)) {\n        return setCache(elems, el);\n      }\n    } while ((el = el.parentElement));\n  }\n\n  function isContentOverflowing(el) {\n    return el.clientHeight + 10 < el.scrollHeight;\n  }\n\n  // typically for <body> and <html>\n  function overflowNotHidden(el) {\n    var overflow = getComputedStyle(el, \"\").getPropertyValue(\"overflow-y\");\n    return overflow !== \"hidden\";\n  }\n\n  // for all other elements\n  function overflowAutoOrScroll(el) {\n    var overflow = getComputedStyle(el, \"\").getPropertyValue(\"overflow-y\");\n    return overflow === \"scroll\" || overflow === \"auto\";\n  }\n\n  // for all other elements\n  function isScrollBehaviorSmooth(el) {\n    var id = uniqueID(el);\n    if (smoothBehaviorForElement[id] == null) {\n      var scrollBehavior = getComputedStyle(el, \"\")[\"scroll-behavior\"];\n      smoothBehaviorForElement[id] = \"smooth\" == scrollBehavior;\n    }\n    return smoothBehaviorForElement[id];\n  }\n\n  /***********************************************\n   * HELPERS\n   ***********************************************/\n\n  function addEvent(type, fn, arg) {\n    window.addEventListener(type, fn, arg || false);\n  }\n\n  function removeEvent(type, fn, arg) {\n    window.removeEventListener(type, fn, arg || false);\n  }\n\n  function isNodeName(el, tag) {\n    return el && (el.nodeName || \"\").toLowerCase() === tag.toLowerCase();\n  }\n\n  function directionCheck(x, y) {\n    x = x > 0 ? 1 : -1;\n    y = y > 0 ? 1 : -1;\n    if (direction.x !== x || direction.y !== y) {\n      direction.x = x;\n      direction.y = y;\n      que = [];\n      lastScroll = 0;\n    }\n  }\n\n  if (window.localStorage && localStorage.SS_deltaBuffer) {\n    try {\n      // #46 Safari throws in private browsing for localStorage\n      deltaBuffer = localStorage.SS_deltaBuffer.split(\",\");\n    } catch (e) {}\n  }\n\n  function isTouchpad(deltaY) {\n    if (!deltaY) return;\n    if (!deltaBuffer.length) {\n      deltaBuffer = [deltaY, deltaY, deltaY];\n    }\n    deltaY = Math.abs(deltaY);\n    deltaBuffer.push(deltaY);\n    deltaBuffer.shift();\n    clearTimeout(deltaBufferTimer);\n    deltaBufferTimer = setTimeout(function () {\n      try {\n        // #46 Safari throws in private browsing for localStorage\n        localStorage.SS_deltaBuffer = deltaBuffer.join(\",\");\n      } catch (e) {}\n    }, 1000);\n    var dpiScaledWheelDelta = deltaY > 120 && allDeltasDivisableBy(deltaY); // win64\n    var tp =\n      !allDeltasDivisableBy(120) &&\n      !allDeltasDivisableBy(100) &&\n      !dpiScaledWheelDelta;\n    if (deltaY < 50) return true;\n    return tp;\n  }\n\n  function isDivisible(n, divisor) {\n    return Math.floor(n / divisor) == n / divisor;\n  }\n\n  function allDeltasDivisableBy(divisor) {\n    return (\n      isDivisible(deltaBuffer[0], divisor) &&\n      isDivisible(deltaBuffer[1], divisor) &&\n      isDivisible(deltaBuffer[2], divisor)\n    );\n  }\n\n  function isInsideYoutubeVideo(event) {\n    var elem = event.target;\n    var isControl = false;\n    if (document.URL.indexOf(\"www.youtube.com/watch\") != -1) {\n      do {\n        isControl =\n          elem.classList && elem.classList.contains(\"html5-video-controls\");\n        if (isControl) break;\n      } while ((elem = elem.parentNode));\n    }\n    return isControl;\n  }\n\n  var requestFrame = (function () {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      function (callback, element, delay) {\n        window.setTimeout(callback, delay || 1000 / 60);\n      }\n    );\n  })();\n\n  var MutationObserver =\n    window.MutationObserver ||\n    window.WebKitMutationObserver ||\n    window.MozMutationObserver;\n\n  var getScrollRoot = (function () {\n    var SCROLL_ROOT = document.scrollingElement;\n    return function () {\n      if (!SCROLL_ROOT) {\n        var dummy = document.createElement(\"div\");\n        dummy.style.cssText = \"height:10000px;width:1px;\";\n        document.body.appendChild(dummy);\n        var bodyScrollTop = document.body.scrollTop;\n        var docElScrollTop = document.documentElement.scrollTop;\n        window.scrollBy(0, 3);\n        if (document.body.scrollTop != bodyScrollTop)\n          SCROLL_ROOT = document.body;\n        else SCROLL_ROOT = document.documentElement;\n        window.scrollBy(0, -3);\n        document.body.removeChild(dummy);\n      }\n      return SCROLL_ROOT;\n    };\n  })();\n\n  /***********************************************\n   * PULSE (by Michael Herf)\n   ***********************************************/\n\n  /**\n   * Viscous fluid with a pulse for part and decay for the rest.\n   * - Applies a fixed force over an interval (a damped acceleration), and\n   * - Lets the exponential bleed away the velocity over a longer interval\n   * - Michael Herf, http://stereopsis.com/stopping/\n   */\n  function pulse_(x) {\n    var val, start, expx;\n    // test\n    x = x * options.pulseScale;\n    if (x < 1) {\n      // acceleartion\n      val = x - (1 - Math.exp(-x));\n    } else {\n      // tail\n      // the previous animation ended here:\n      start = Math.exp(-1);\n      // simple viscous drag\n      x -= 1;\n      expx = 1 - Math.exp(-x);\n      val = start + expx * (1 - start);\n    }\n    return val * options.pulseNormalize;\n  }\n\n  function pulse(x) {\n    if (x >= 1) return 1;\n    if (x <= 0) return 0;\n\n    if (options.pulseNormalize == 1) {\n      options.pulseNormalize /= pulse_(1);\n    }\n    return pulse_(x);\n  }\n\n  /***********************************************\n   * FIRST RUN\n   ***********************************************/\n\n  var userAgent = window.navigator.userAgent;\n  var isEdge = /Edge/.test(userAgent); // thank you MS\n  var isChrome = /chrome/i.test(userAgent) && !isEdge;\n  var isSafari = /safari/i.test(userAgent) && !isEdge;\n  var isMobile = /mobile/i.test(userAgent);\n  var isIEWin7 = /Windows NT 6.1/i.test(userAgent) && /rv:11/i.test(userAgent);\n  var isOldSafari =\n    isSafari &&\n    (/Version\\/8/i.test(userAgent) || /Version\\/9/i.test(userAgent));\n  var isEnabledForBrowser = (isChrome || isSafari || isIEWin7) && !isMobile;\n\n  var supportsPassive = false;\n  try {\n    window.addEventListener(\n      \"test\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get: function () {\n          supportsPassive = true;\n        },\n      })\n    );\n  } catch (e) {}\n\n  var wheelOpt = supportsPassive ? { passive: false } : false;\n  var wheelEvent =\n    \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : \"mousewheel\";\n\n  if (wheelEvent && isEnabledForBrowser) {\n    addEvent(wheelEvent, wheel, wheelOpt);\n    addEvent(\"mousedown\", mousedown);\n    addEvent(\"load\", init);\n  }\n\n  /***********************************************\n   * PUBLIC INTERFACE\n   ***********************************************/\n\n  function SmoothScroll(optionsToSet) {\n    for (var key in optionsToSet)\n      if (defaultOptions.hasOwnProperty(key)) options[key] = optionsToSet[key];\n  }\n  SmoothScroll.destroy = cleanup;\n\n  if (window.SmoothScrollOptions)\n    // async API\n    SmoothScroll(window.SmoothScrollOptions);\n\n  if (typeof define === \"function\" && define.amd)\n    define(function () {\n      return SmoothScroll;\n    });\n  else if (\"object\" == typeof exports) module.exports = SmoothScroll;\n  else window.SmoothScroll = SmoothScroll;\n})();\n","class ShadowSelect {\n    constructor(select, {\n        data,\n        inputName = 'shadow_name',\n        inputClass = 'shadow_search',\n        outputClass = 'shadow_output',\n        containerClass = 'shadow_container',\n        minLetters = 0,\n        outputItemClass = 'shadow_item'\n    }) {\n        this.data = data;\n        this.select = document.querySelector(select);\n        this.minLetters = minLetters;\n        this.inputClass = inputClass;\n        this.inputName = inputName;\n        this.containerClass = containerClass;\n        this.outputClass = outputClass;\n        this.outputItemClass = outputItemClass;\n\n        this.input = document.createElement('input');\n        this.output = document.createElement('output');\n    };\n\n    CreateStructure() {\n        this.select.classList.add(this.containerClass);\n\n        this.input.classList.add(this.inputClass);\n        this.input.setAttribute('name', this.inputName);\n\n        this.output.classList.add(this.outputClass);\n\n        this.select.append(this.input);\n        this.select.append(this.output);\n    }\n\n    Search(value) {\n        let result = [];\n        if (this.input.value.length > this.minLetters) {\n            for (let x = 0; x < this.data.length; x++) {\n                let val = this.data[x].trim().toLowerCase().indexOf(value.trim().toLowerCase());\n                if (val != -1) {\n                    result.push(this.data[x]);\n                }\n            }\n            this.Draw(result);\n        } else {\n            this.Hide();\n            this.Clear();\n        }\n    }\n\n    Draw(results) {\n        this.Show();\n        let output = this.select.querySelector(`.${this.outputClass}`);\n        this.Clear();\n        results.forEach((item, i) => {\n            let container = document.createElement('div');\n            container.classList = this.outputItemClass;\n            container.textContent = item\n            output.prepend(container);\n            this.setClick(container, item);\n        });\n    }\n\n    Clear() {\n        let output_items = this.select.querySelector(`.${this.outputClass}`).childNodes;\n        output_items.forEach((item, i) => {\n            item.remove();\n        });\n    }\n\n    setClick(item, value) {\n        item.onclick = () => {\n            this.setValue(value);\n        };\n    }\n\n    setValue(value) {\n        this.input.value = value;\n        this.Hide();\n        this.Clear();\n    }\n\n    Hide() {\n        return this.output.classList.add('hide');\n    }\n\n    Show() {\n        return this.output.classList.remove('hide');\n    }\n\n    create() {\n        if (this.select) {\n            this.CreateStructure();\n            let inp = this.select.querySelector(`.${this.inputClass}`);\n            inp.oninput = () => {\n                this.Search(inp.value);\n            };\n        } else {\n            return 'no select';\n        }\n    }\n\n}","import \"./default/phone-mask.js\";\nimport \"./default/scroll.js\";\nimport \"./default/select\";\nimport Swiper from 'swiper/swiper-bundle';\n// import \"./catalog/_catalog\";\n// import \"./services/services\";\n// import \"./specialists/specialists\";\n// import \"./formButtom/formButtom\";\n// import \"./modals/modals\";\nimport {Fancybox} from \"@fancyapps/ui/src/Fancybox/Fancybox.js\";\n\n(\"use strict\");\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    Fancybox.bind(\"[data-fancybox]\", {\n        // Your options go here\n      });\n\n      const toTopBtn = document.querySelector('.scroll-up');\n\n      toTopBtn.addEventListener('click', ()=>{\n        window.scrollTo( 0, 0 );\n      });\n      window.addEventListener('scroll', ()=>{\n          if(window.scrollY > 94){\n            toTopBtn.classList.add('show');\n          }else{\n            toTopBtn.classList.remove('show');\n          }\n      })\n\n    const mobNavBtn = document.querySelector('.mobile-nav-btn');\n\n    mobNavBtn.addEventListener('click', (e) => {\n        mobNavBtn.classList.toggle('opened');\n        document.body.classList.toggle('oy-h');\n    });\n\n    const subNavContainers = document.querySelectorAll('.sub-nav-container');\n    if (subNavContainers) {\n        subNavContainers.forEach(container => {\n            container.addEventListener('click', (e) => {\n\n                e.stopPropagation();\n                const subNav = container.querySelector('.sub-nav');\n\n                if (subNav && (subNav.style.height === '0px' || !subNav.style.height)) {\n                    subNav.style.height = subNav.scrollHeight + 'px';\n                    subNav.style.paddingTop = '25px';\n                    document.body.addEventListener('click', e => {\n                        if (e.target !== subNav) {\n                            subNav.style.height = 0;\n                            subNav.style.paddingTop = 0;\n                        }\n                    });\n                }\n            });\n        });\n    }\n    const navLinks = document.querySelectorAll('.nav__link, .sub-nav__link');\n    navLinks.forEach(link => {\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            const id = link.href.substring(link.href.indexOf('#'));\n            \n            const offset = document.querySelector(id).getBoundingClientRect().top - document.body.getBoundingClientRect().top;\n            if (window.innerWidth <= 992 && link.parentElement.classList.contains('sub-nav-container')) {\n                return;\n            }else if(window.innerWidth <= 992 && link.classList.contains('sub-nav__link')){\n                window.scrollTo(0, offset - 92);\n                mobNavBtn.classList.remove('opened');\n                document.body.classList.remove('oy-h');\n            } else if (window.innerWidth <= 992) {\n                window.scrollTo(0, offset - 94);\n                mobNavBtn.classList.remove('opened');\n                document.body.classList.remove('oy-h');\n            } else {\n               window.scrollTo(0, offset);\n            }\n        });\n    });\n    const modalWrappers = document.querySelectorAll('.modal-wrapper');\n    modalWrappers.forEach(wrapper => {\n        wrapper.addEventListener('click', (e) => {\n            if (!(e.target.closest('.modal'))) {\n                wrapper.classList.remove('show');\n                document.body.classList.remove('oy-h');\n            }\n        });\n    });\n    const closeBtns = document.querySelectorAll('.close');\n\n    closeBtns.forEach(btn => {\n        btn.addEventListener('click', () => {\n            btn.closest('.modal-wrapper').classList.remove('show');\n            document.body.classList.remove('oy-h');\n        });\n    });\n\n    const modalBtns = document.querySelectorAll('[data-modal]');\n    modalBtns.forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            e.preventDefault();\n            const modalId = btn.dataset.modal;\n            const modal = document.querySelector(`#${modalId}`);\n            modal.classList.add('show');\n            document.body.classList.add('oy-h');\n            // console.log(btn.dataset);\n            if (btn.hasAttribute('data-get-number')) {\n                const number = btn.closest('[phone-container]').querySelector('input[type=\"tel\"]').value;\n                modal.querySelector('input[type=\"tel\"]').value = number;\n            }\n        });\n    });\n\n\n    // Поменять условие появления окна об успешной отправке заявки\n    const successModal = document.querySelector('#success');\n\n    const submitBtns = document.querySelectorAll('[type=\"submit\"]');\n    submitBtns.forEach(btn => {\n        btn.addEventListener('click', (e) => {\n            e.preventDefault();\n            if (btn.closest('.modal-wrapper.show')) {\n                btn.closest('.modal-wrapper.show').classList.remove('show');\n                successModal.classList.add('show');\n\n            }\n        });\n    });\n    // Поменять условие появления окна об успешной отправке заявки --- END\n\n\n    // const videoPlayBtn = document.querySelector('#video1play');\n    // const video1 = document.querySelector('#video1');\n    // videoPlayBtn.addEventListener('click', (e) => {\n    //     e.preventDefault()\n    //     if (!video1.paused) {\n    //         video1.pause();\n    //     } else {\n    //         video1.play();\n    //     }\n    // });\n\n    // class ShadowTabs {\n    //     constructor(triggers, bodyes) {\n    //         this.triggers = document.querySelectorAll(triggers);\n    //         this.bodyes = document.querySelectorAll(bodyes);\n    //     }\n\n    //     setClick() {\n    //         this.triggers.forEach((trigger, i) => {\n    //             trigger.onclick = () => {\n    //                 this.update(i);\n    //             };\n    //         });\n    //     }\n\n    //     update(active) {\n    //         for (let x = 0; x < this.triggers.length; x++) {\n    //             this.triggers[x].classList.remove(\"active\");\n    //             this.bodyes[x].classList.remove(\"show\");\n    //         }\n    //         this.triggers[active].classList.add(\"active\");\n    //         this.bodyes[active].classList.add(\"show\");\n    //     }\n\n    //     create() {\n    //         if (\n    //             this.triggers &&\n    //             this.bodyes &&\n    //             this.triggers.length == this.bodyes.length &&\n    //             this.triggers.length != 0 &&\n    //             this.bodyes.length != 0\n    //         ) {\n    //             this.update(0);\n    //             this.setClick();\n    //         } else {\n    //             return \"nothing was found\";\n    //         }\n    //     }\n    // }\n\n    Dropdown('.has-dropdown-list .select_btn');\n    // let tabs = new ShadowTabs(\".heading__tabs--triggers li\", \".heading__tabs--bodyes \");\n    // tabs.create();\n\n    function Dropdown(targets) {\n        let _targets = document.querySelectorAll(targets);\n        _targets.forEach(btn => {\n            btn.onclick = function () {\n                let dropdown = this.parentElement.querySelector('.hidden'),\n                    text = this.querySelector('.text'),\n                    hidden_items = this.parentElement.querySelectorAll('.hidden .hidden_item'),\n                    hidden_input = this.parentElement.querySelector('.hidden_input');\n\n                dropdown.classList.toggle('show');\n                hidden_items.forEach(item => {\n                    item.onclick = function () {\n                        let mask = this.innerHTML.trim(),\n                            val = this.getAttribute('data-value').trim();\n                        text.innerHTML = mask;\n                        hidden_input.value = val;\n                        dropdown.classList.remove('show');\n                    };\n                });\n            };\n        });\n    }\n    var swiper = new Swiper(\".mySwiper\", {\n        navigation: {\n            nextEl: \".swiper-button-next1\",\n            prevEl: \".swiper-button-prev1\",\n        },\n    });\n    var swiper2 = new Swiper(\".mySwiper2\", {\n        navigation: {\n            nextEl: \".swiper-button-next2\",\n            prevEl: \".swiper-button-prev2\",\n        },\n    });\n    var swiper3 = new Swiper(\".mySwiper3\", {\n        navigation: {\n            nextEl: \".swiper-button-next3\",\n            prevEl: \".swiper-button-prev3\",\n        },\n    });\n\n    var Sswiper = new Swiper(\".mySwiper4\", {\n        spaceBetween: 4,\n        pagination: {\n            el: \".swiper-pagination4\",\n            type: \"fraction\",\n        },\n        navigation: {\n            nextEl: \".swiper-button-next4\",\n            prevEl: \".swiper-button-prev4\",\n          },\n        breakpoints: {\n            992: {\n                slidesPerView: 3,\n                grid: {\n                    rows: 2,\n                },\n            },\n            0: {\n                slidesPerView: 3,\n                grid: {\n                    rows: 1,\n                },\n                direction: \"vertical\"\n            },\n        },\n    });\n    var swiper5 = new Swiper(\".mySwiper5\", {\n        spaceBetween: 30,\n        pagination: {\n            el: \".swiper-pagination5\",\n            type: \"fraction\",\n        },\n        navigation: {\n            nextEl: \".swiper-button-next5\",\n            prevEl: \".swiper-button-prev5\",\n          },\n        breakpoints: {\n            992: {\n                slidesPerView: 3,\n                grid: {\n                    rows: 2,\n                },\n            },\n            0: {\n                slidesPerView: 3,\n                grid: {\n                    rows: 1,\n                },\n                direction: \"vertical\"\n            },\n        },\n    });\n    // var swiper = new Swiper(\".cause__slider\", {\n    //     slidesPerView: 2,\n    //     spaceBetween: 34,\n    //     pagination: {\n    //         el: \".swiper-pagination\",\n    //         clickable: true,\n    //     },\n    // });\n\n    // //слайдер на наши услуги \n    // let swiperServ = new Swiper(\".ourServices-card-swiper\", {\n    //     slidesPerView: 2,\n    //     spaceBetween: 30,\n    //     allowTouchMove: false,\n    // });\n\n\n    // //слайдер отзывов видео \n    // let swiperVideo = new Swiper(\".reviews-video\", {\n    //     pagination: {\n    //         el: \".swiper-pagination-revVideo\",\n    //     },\n    // });\n\n    // //слайдер отзывов вертикальный\n\n    // let swiperRevAlign = new Swiper(\".reviews-slider-align\", {\n    //     direction: \"vertical\",\n    //     pagination: {\n    //       el: \".reviews-slider-align-pag\",\n    //       clickable: true,\n    //     },\n    //   });\n\n\n\n    // var swiperObj = new Swiper(\".catalog__object-slider\", {});\n});\n"],"sourceRoot":""}